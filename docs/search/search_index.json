{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":"python","separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Albumentations documentation \u00b6 Albumentations is a fast and flexible image augmentation library. The library is widely used in industry , deep learning research , machine learning competitions , and open source projects . Albumentations is written in Python, and it is licensed under the MIT license. The source code is available at https://github.com/albumentations-team/albumentations . If you are new to image augmentation, start with articles in the \"Introduction to image augmentation\" section. They describe what image augmentation is, how it can boost deep neural networks' performance, and why you should use Albumentations. Articles in the \"Getting started with Albumentations\" section show how you can use the library for different computer vision tasks: image classification, semantic segmentation, instance segmentation, and object detection, keypoint detection. The \"Examples\" section contains Jupyter Notebooks that demonstrate how to use various features of Albumentations. Each notebook includes a link to Google Colab, where you can run the code by yourself. \"API Reference\" contains the description of Albumentations' methods and classes. Introduction to image augmentation \u00b6 What is image augmentation and how it can improve the performance of deep neural networks Why you need a dedicated library for image augmentation Why Albumentations Getting started with Albumentations \u00b6 Installation Image augmentation for classification Mask augmentation for segmentation Bounding boxes augmentation for object detection Keypoints augmentation Simultaneous augmentation of multiple targets: masks, bounding boxes, keypoints A list of transforms and their supported targets Setting probabilities for transforms in an augmentation pipeline Examples \u00b6 Defining a simple augmentation pipeline for image augmentation Working with non-8-bit images Using Albumentations to augment bounding boxes for object detection tasks How to use Albumentations for detection tasks if you need to keep all bounding boxes Using Albumentations for a semantic segmentation task Using Albumentations to augment keypoints Applying the same augmentation with the same parameters to multiple images, masks, bounding boxes, or keypoints Weather augmentations in Albumentations Migrating from torchvision to Albumentations Debugging an augmentation pipeline with ReplayCompose How to save and load parameters of an augmentation pipeline Showcase. Cool augmentation examples on diverse set of images from various real-world tasks. Using Albumentations with Tensorflow External resources \u00b6 Blog posts, podcasts and talks about Albumentations Books that mention Albumentations Other topics \u00b6 Frequently Asked Questions Albumentations Experimental - experimental features for Albumentations Release notes Contributing API Reference \u00b6 Index Core API (albumentations.core) Augmentations (albumentations.augmentations) ImgAug Helpers (albumentations.imgaug) PyTorch Helpers (albumentations.pytorch)","title":"Welcome to Albumentations documentation"},{"location":"#welcome-to-albumentations-documentation","text":"Albumentations is a fast and flexible image augmentation library. The library is widely used in industry , deep learning research , machine learning competitions , and open source projects . Albumentations is written in Python, and it is licensed under the MIT license. The source code is available at https://github.com/albumentations-team/albumentations . If you are new to image augmentation, start with articles in the \"Introduction to image augmentation\" section. They describe what image augmentation is, how it can boost deep neural networks' performance, and why you should use Albumentations. Articles in the \"Getting started with Albumentations\" section show how you can use the library for different computer vision tasks: image classification, semantic segmentation, instance segmentation, and object detection, keypoint detection. The \"Examples\" section contains Jupyter Notebooks that demonstrate how to use various features of Albumentations. Each notebook includes a link to Google Colab, where you can run the code by yourself. \"API Reference\" contains the description of Albumentations' methods and classes.","title":"Welcome to Albumentations documentation"},{"location":"#introduction-to-image-augmentation","text":"What is image augmentation and how it can improve the performance of deep neural networks Why you need a dedicated library for image augmentation Why Albumentations","title":"Introduction to image augmentation"},{"location":"#getting-started-with-albumentations","text":"Installation Image augmentation for classification Mask augmentation for segmentation Bounding boxes augmentation for object detection Keypoints augmentation Simultaneous augmentation of multiple targets: masks, bounding boxes, keypoints A list of transforms and their supported targets Setting probabilities for transforms in an augmentation pipeline","title":"Getting started with Albumentations"},{"location":"#examples","text":"Defining a simple augmentation pipeline for image augmentation Working with non-8-bit images Using Albumentations to augment bounding boxes for object detection tasks How to use Albumentations for detection tasks if you need to keep all bounding boxes Using Albumentations for a semantic segmentation task Using Albumentations to augment keypoints Applying the same augmentation with the same parameters to multiple images, masks, bounding boxes, or keypoints Weather augmentations in Albumentations Migrating from torchvision to Albumentations Debugging an augmentation pipeline with ReplayCompose How to save and load parameters of an augmentation pipeline Showcase. Cool augmentation examples on diverse set of images from various real-world tasks. Using Albumentations with Tensorflow","title":"Examples"},{"location":"#external-resources","text":"Blog posts, podcasts and talks about Albumentations Books that mention Albumentations","title":"External resources"},{"location":"#other-topics","text":"Frequently Asked Questions Albumentations Experimental - experimental features for Albumentations Release notes Contributing","title":"Other topics"},{"location":"#api-reference","text":"Index Core API (albumentations.core) Augmentations (albumentations.augmentations) ImgAug Helpers (albumentations.imgaug) PyTorch Helpers (albumentations.pytorch)","title":"API Reference"},{"location":"contributing/","text":"Contributing \u00b6 All development is done on GitHub: https://github.com/albumentations-team/albumentations If you find a bug or have a feature request file an issue at https://github.com/albumentations-team/albumentations/issues To create a pull request: Fork the repository. Clone the repository locally. Install pre-commit (a library for running pre-commit hooks), black (code formatter) and flake8 (code linter): pip install pre-commit black flake8 Initialize pre-commit : pre-commit install Install albumentations in development mode: pip install -e . [ tests ] Make changes to the code. Run tests: pytest Push the code to your forked repo. Create a pull request to https://github.com/albumentations-team/albumentations","title":"Contributing"},{"location":"contributing/#contributing","text":"All development is done on GitHub: https://github.com/albumentations-team/albumentations If you find a bug or have a feature request file an issue at https://github.com/albumentations-team/albumentations/issues To create a pull request: Fork the repository. Clone the repository locally. Install pre-commit (a library for running pre-commit hooks), black (code formatter) and flake8 (code linter): pip install pre-commit black flake8 Initialize pre-commit : pre-commit install Install albumentations in development mode: pip install -e . [ tests ] Make changes to the code. Run tests: pytest Push the code to your forked repo. Create a pull request to https://github.com/albumentations-team/albumentations","title":"Contributing"},{"location":"faq/","text":"Frequently Asked Questions \u00b6 Installation I am receiving an error message Failed building wheel for imagecodecs when I am trying to install Albumentations. How can I fix the problem? I successfully installed the library, but when I am trying to import it I receive an error ImportError: libXrender.so.1: cannot open shared object file: No such file or directory . Examples Why do you call cv2.cvtColor(image, cv2.COLOR_BGR2RGB) in your examples? Usage Which transformation should I use to convert a NumPy array with an image or a mask to a PyTorch tensor: ToTensor() or ToTensorV2() ? How can I find which augmentations were applied to the input data and which parameters they used? My computer vision pipeline works with a sequence of images. I want to apply the same augmentations with the same parameters to each image in the sequence. Can Albumentations do it? I want to augment 16-bit TIFF images. Can Albumentations work with them? Augmentations have a parameter named p that sets the probability of applying that augmentation, but they also have the always_apply parameter that can either be True or False . What is the difference between p and always_apply ? Is always_apply=True equals to p=1.0 ? When I use augmentations with the border_mode parameter (such as Rotate ) and set border_mode to cv2.BORDER_REFLECT or cv2.BORDER_REFLECT_101 Albumentations mirrors regions of images and masks but doesn't mirror bounding boxes and keypoints. Is it a bug? I created annotations for bounding boxes using labeling service or labeling software. How can I use those annotations in Albumentations? Installation \u00b6 I am receiving an error message Failed building wheel for imagecodecs when I am trying to install Albumentations. How can I fix the problem? \u00b6 Try to update pip by running the following command: python3 -m pip install --upgrade pip I successfully installed the library, but when I am trying to import it I receive an error ImportError: libXrender.so.1: cannot open shared object file: No such file or directory . \u00b6 Probably your system doesn't have libXrender . To install the libXrender package on Ubuntu or Debian run: sudo apt-get update sudo apt-get install libxrender1 To install the package on other operating systems, consult the documentation for the OS' package manager. Examples \u00b6 Why do you call cv2.cvtColor(image, cv2.COLOR_BGR2RGB) in your examples? \u00b6 For historical reasons , OpenCV reads an image in BGR format (so color channels of the image have the following order: Blue, Green, Red). Albumentations uses the most common and popular RGB image format. So when using OpenCV, we need to convert the image format to RGB explicitly. Usage \u00b6 Which transformation should I use to convert a NumPy array with an image or a mask to a PyTorch tensor: ToTensor() or ToTensorV2() ? \u00b6 Always use ToTensorV2() . ToTensor() is a legacy transformation that contains complex and unnecessary logic for mask transformation. We don't want to break the existing pipelines that use that transformation, so instead of changing the behavior of the original ToTensor() , we created a new, more simple transformation. ToTensor() is now deprecated and will be removed in future versions. For all new projects, you should always use ToTensorV2(). How can I find which augmentations were applied to the input data and which parameters they used? \u00b6 To save and inspect parameters of augmentations, you can replace Compose with ReplayCompose. ReplayCompose behaves just like regular Compose, but it also saves information about which augmentations were applied and which parameters were uses. Take a look at the example that shows how you can use ReplayCompose. My computer vision pipeline works with a sequence of images. I want to apply the same augmentations with the same parameters to each image in the sequence. Can Albumentations do it? \u00b6 Yes. You can define additional images, masks, bounding boxes, or keypoints through the additional_targets argument to Compose . You can then pass those additional targets to the augmentation pipeline, and Albumentations will augment them in the same way. See this example for more info. I want to augment 16-bit TIFF images. Can Albumentations work with them? \u00b6 Yes. Albumentations can also work with non-8-bit images. See this example for more info. Augmentations have a parameter named p that sets the probability of applying that augmentation, but they also have the always_apply parameter that can either be True or False . What is the difference between p and always_apply ? Is always_apply=True equals to p=1.0 ? \u00b6 When always_apply is set to True , Albumentations will always apply that transform, even if p is set to a value less than 1.0 . However, always_apply=True doesn't equal to p=1.0 because with always_apply=True , Albumentations will apply a transform even in a case when top-level containers are not applied. Let's look at an example when a container Compose contains one augmentation Resize : transform = A . Compose ([ A . Resize ( height = 256 , width = 256 , p = 1.0 ), ], p = 0.9 ) If you set p=1.0 for Resize and p=0.9 for Compose , then Resize has a 90% chance to be applied, because there is a 90% chance for Compose to be applied and if Compose is applied, there is a 100% chance for Resize to be applied. But if you set always_apply=True for Resize , Albumentations will apply it with 100% probability even if Albumentations decides not to apply the parent container ( Compose in the example): transform = A . Compose ([ A . Resize ( height = 256 , width = 256 , always_apply = True ), ], p = 0.9 ) When I use augmentations with the border_mode parameter (such as Rotate ) and set border_mode to cv2.BORDER_REFLECT or cv2.BORDER_REFLECT_101 Albumentations mirrors regions of images and masks but doesn't mirror bounding boxes and keypoints. Is it a bug? \u00b6 Unfortunately, adding extra bounding boxes or keypoints to reflected regions of the image is not supported. You can change border_mode mode to cv2.BORDER_CONSTANT if this causes a significant impact on the training of your model. I created annotations for bounding boxes using labeling service or labeling software. How can I use those annotations in Albumentations? \u00b6 You need to convert those annotations to one of the formats, supported by Albumentations. For the list of formats, please refer to this article . Consult the documentation of the labeling service to see how you can export annotations in those formats.","title":"Frequently Asked Questions"},{"location":"faq/#frequently-asked-questions","text":"Installation I am receiving an error message Failed building wheel for imagecodecs when I am trying to install Albumentations. How can I fix the problem? I successfully installed the library, but when I am trying to import it I receive an error ImportError: libXrender.so.1: cannot open shared object file: No such file or directory . Examples Why do you call cv2.cvtColor(image, cv2.COLOR_BGR2RGB) in your examples? Usage Which transformation should I use to convert a NumPy array with an image or a mask to a PyTorch tensor: ToTensor() or ToTensorV2() ? How can I find which augmentations were applied to the input data and which parameters they used? My computer vision pipeline works with a sequence of images. I want to apply the same augmentations with the same parameters to each image in the sequence. Can Albumentations do it? I want to augment 16-bit TIFF images. Can Albumentations work with them? Augmentations have a parameter named p that sets the probability of applying that augmentation, but they also have the always_apply parameter that can either be True or False . What is the difference between p and always_apply ? Is always_apply=True equals to p=1.0 ? When I use augmentations with the border_mode parameter (such as Rotate ) and set border_mode to cv2.BORDER_REFLECT or cv2.BORDER_REFLECT_101 Albumentations mirrors regions of images and masks but doesn't mirror bounding boxes and keypoints. Is it a bug? I created annotations for bounding boxes using labeling service or labeling software. How can I use those annotations in Albumentations?","title":"Frequently Asked Questions"},{"location":"faq/#installation","text":"","title":"Installation"},{"location":"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem","text":"Try to update pip by running the following command: python3 -m pip install --upgrade pip","title":"I am receiving an error message Failed building wheel for imagecodecs when I am trying to install Albumentations. How can I fix the problem?"},{"location":"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory","text":"Probably your system doesn't have libXrender . To install the libXrender package on Ubuntu or Debian run: sudo apt-get update sudo apt-get install libxrender1 To install the package on other operating systems, consult the documentation for the OS' package manager.","title":"I successfully installed the library, but when I am trying to import it I receive an error ImportError: libXrender.so.1: cannot open shared object file: No such file or directory."},{"location":"faq/#examples","text":"","title":"Examples"},{"location":"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples","text":"For historical reasons , OpenCV reads an image in BGR format (so color channels of the image have the following order: Blue, Green, Red). Albumentations uses the most common and popular RGB image format. So when using OpenCV, we need to convert the image format to RGB explicitly.","title":"Why do you call cv2.cvtColor(image, cv2.COLOR_BGR2RGB) in your examples?"},{"location":"faq/#usage","text":"","title":"Usage"},{"location":"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2","text":"Always use ToTensorV2() . ToTensor() is a legacy transformation that contains complex and unnecessary logic for mask transformation. We don't want to break the existing pipelines that use that transformation, so instead of changing the behavior of the original ToTensor() , we created a new, more simple transformation. ToTensor() is now deprecated and will be removed in future versions. For all new projects, you should always use ToTensorV2().","title":"Which transformation should I use to convert a NumPy array with an image or a mask to a PyTorch tensor: ToTensor() or ToTensorV2()?"},{"location":"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used","text":"To save and inspect parameters of augmentations, you can replace Compose with ReplayCompose. ReplayCompose behaves just like regular Compose, but it also saves information about which augmentations were applied and which parameters were uses. Take a look at the example that shows how you can use ReplayCompose.","title":"How can I find which augmentations were applied to the input data and which parameters they used?"},{"location":"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it","text":"Yes. You can define additional images, masks, bounding boxes, or keypoints through the additional_targets argument to Compose . You can then pass those additional targets to the augmentation pipeline, and Albumentations will augment them in the same way. See this example for more info.","title":"My computer vision pipeline works with a sequence of images. I want to apply the same augmentations with the same parameters to each image in the sequence. Can Albumentations do it?"},{"location":"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them","text":"Yes. Albumentations can also work with non-8-bit images. See this example for more info.","title":"I want to augment 16-bit TIFF images. Can Albumentations work with them?"},{"location":"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10","text":"When always_apply is set to True , Albumentations will always apply that transform, even if p is set to a value less than 1.0 . However, always_apply=True doesn't equal to p=1.0 because with always_apply=True , Albumentations will apply a transform even in a case when top-level containers are not applied. Let's look at an example when a container Compose contains one augmentation Resize : transform = A . Compose ([ A . Resize ( height = 256 , width = 256 , p = 1.0 ), ], p = 0.9 ) If you set p=1.0 for Resize and p=0.9 for Compose , then Resize has a 90% chance to be applied, because there is a 90% chance for Compose to be applied and if Compose is applied, there is a 100% chance for Resize to be applied. But if you set always_apply=True for Resize , Albumentations will apply it with 100% probability even if Albumentations decides not to apply the parent container ( Compose in the example): transform = A . Compose ([ A . Resize ( height = 256 , width = 256 , always_apply = True ), ], p = 0.9 )","title":"Augmentations have a parameter named p that sets the probability of applying that augmentation, but they also have the always_apply parameter that can either be True or False. What is the difference between p and always_apply? Is always_apply=True equals to p=1.0?"},{"location":"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug","text":"Unfortunately, adding extra bounding boxes or keypoints to reflected regions of the image is not supported. You can change border_mode mode to cv2.BORDER_CONSTANT if this causes a significant impact on the training of your model.","title":"When I use augmentations with the border_mode parameter (such as Rotate) and set border_mode to cv2.BORDER_REFLECT or cv2.BORDER_REFLECT_101 Albumentations mirrors regions of images and masks but doesn't mirror bounding boxes and keypoints. Is it a bug?"},{"location":"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations","text":"You need to convert those annotations to one of the formats, supported by Albumentations. For the list of formats, please refer to this article . Consult the documentation of the labeling service to see how you can export annotations in those formats.","title":"I created annotations for bounding boxes using labeling service or labeling software. How can I use those annotations in Albumentations?"},{"location":"release_notes/","text":"Release notes \u00b6 0.4.6 \u00b6 Improvements \u00b6 Change the ImgAug dependency version from \u201cimgaug>=0.2.5,<0.2.7\u201d to \u201cimgaug>=0.4.0\". Now Albumentations won\u2019t downgrade your existing ImgAug installation to the old version. PR #658 . Do not try to resize an image if it already has the required height and width. That eliminates the redundant call to the OpenCV function that requires additional copying of the input data. PR #639 . ReplayCompose is now serializable. PR #623 by IlyaOvodov Documentation fixes and updates. Bug Fixes \u00b6 Fix a bug that causes some keypoints and bounding boxes to lie outside the visible part of the augmented image if an augmentation pipeline contained augmentations that increase the height and width of an image (such as PadIfNeeded ). That happened because Albumentations checked which bounding boxes and keypoints lie outside the image only after applying all augmentations. Now Albumentations will check and remove keypoints and bounding boxes that lie outside the image after each augmentation. If, for some reason, you need the old behavior, pass check_each_transform=False in your KeypointParams or BboxParams . Issue #565 and PR #566 . Fix a bug that causes an exception when Albumentations received images with the number of color channels that are even but are not multiples of 4 (such as 6, 10, etc.). PR #638 . Fix the off-by-one error in applying steps for GridDistortion. Commit 9c225a9 Fix bugs that prevent serialization of ImageCompression and GaussNoise . PR #569 Fix a bug that causes errors with some values for label_fields in BboxParams . PR #504 by IlyaOvodov Fix a bug that prevents HueSaturationValue for working with grayscale images. PR #500 .","title":"Release notes"},{"location":"release_notes/#release-notes","text":"","title":"Release notes"},{"location":"release_notes/#046","text":"","title":"0.4.6"},{"location":"release_notes/#improvements","text":"Change the ImgAug dependency version from \u201cimgaug>=0.2.5,<0.2.7\u201d to \u201cimgaug>=0.4.0\". Now Albumentations won\u2019t downgrade your existing ImgAug installation to the old version. PR #658 . Do not try to resize an image if it already has the required height and width. That eliminates the redundant call to the OpenCV function that requires additional copying of the input data. PR #639 . ReplayCompose is now serializable. PR #623 by IlyaOvodov Documentation fixes and updates.","title":"Improvements"},{"location":"release_notes/#bug-fixes","text":"Fix a bug that causes some keypoints and bounding boxes to lie outside the visible part of the augmented image if an augmentation pipeline contained augmentations that increase the height and width of an image (such as PadIfNeeded ). That happened because Albumentations checked which bounding boxes and keypoints lie outside the image only after applying all augmentations. Now Albumentations will check and remove keypoints and bounding boxes that lie outside the image after each augmentation. If, for some reason, you need the old behavior, pass check_each_transform=False in your KeypointParams or BboxParams . Issue #565 and PR #566 . Fix a bug that causes an exception when Albumentations received images with the number of color channels that are even but are not multiples of 4 (such as 6, 10, etc.). PR #638 . Fix the off-by-one error in applying steps for GridDistortion. Commit 9c225a9 Fix bugs that prevent serialization of ImageCompression and GaussNoise . PR #569 Fix a bug that causes errors with some values for label_fields in BboxParams . PR #504 by IlyaOvodov Fix a bug that prevents HueSaturationValue for working with grayscale images. PR #500 .","title":"Bug Fixes"},{"location":"api_reference/","text":"Core API (albumentations.core) Composition API (albumentations.core.composition) Serialization API (albumentations.core.serialization) Transforms Interface (albumentations.core.transforms_interface) Augmentations (albumentations.augmentations) Transforms (albumentations.augmentations.transforms) Functional transforms (albumentations.augmentations.functional) Helper functions for working with bounding boxes (albumentations.augmentations.bbox_utils) Helper functions for working with keypoints (albumentations.augmentations.keypoints_utils) ImgAug Helpers (albumentations.imgaug) Transforms (albumentations.imgaug.transforms) PyTorch Helpers (albumentations.pytorch) Transforms (albumentations.pytorch.transforms)","title":"Index"},{"location":"api_reference/augmentations/","text":"Transforms (albumentations.augmentations.transforms) Functional transforms (albumentations.augmentations.functional) Helper functions for working with bounding boxes (albumentations.augmentations.bbox_utils) Helper functions for working with keypoints (albumentations.augmentations.keypoints_utils)","title":"Index"},{"location":"api_reference/augmentations/bbox_utils/","text":"Helper functions for working with bounding boxes (augmentations.bbox_utils) \u00b6 \u00b6 def albumentations.augmentations.bbox_utils.calculate_bbox_area ( bbox , rows , cols ) [view source on GitHub] \u00b6 Calculate the area of a bounding box in pixels. Parameters: Name Type Description bbox tuple A bounding box (x_min, y_min, x_max, y_max) . rows int Image height. cols int Image width. Returns: Type Description int Area of a bounding box in pixels. def albumentations.augmentations.bbox_utils.check_bbox ( bbox ) [view source on GitHub] \u00b6 Check if bbox boundaries are in range 0, 1 and minimums are lesser then maximums def albumentations.augmentations.bbox_utils.check_bboxes ( bboxes ) [view source on GitHub] \u00b6 Check if bboxes boundaries are in range 0, 1 and minimums are lesser then maximums def albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations ( bbox , target_format , rows , cols , check_validity = False ) [view source on GitHub] \u00b6 Convert a bounding box from the format used by albumentations to a format, specified in target_format . Parameters: Name Type Description bbox tuple An albumentation bounding box (x_min, y_min, x_max, y_max) . target_format str required format of the output bounding box. Should be 'coco', 'pascal_voc' or 'yolo'. rows int Image height. cols int Image width. check_validity bool Check if all boxes are valid boxes. Returns: Type Description tuple A bounding box. Note: The coco format of a bounding box looks like [x_min, y_min, width, height] , e.g. [97, 12, 150, 200]. The pascal_voc format of a bounding box looks like [x_min, y_min, x_max, y_max] , e.g. [97, 12, 247, 212]. The yolo format of a bounding box looks like [x, y, width, height] , e.g. [0.3, 0.1, 0.05, 0.07]. Exceptions: Type Description ValueError if target_format is not equal to coco , pascal_voc or yolo . def albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations ( bbox , source_format , rows , cols , check_validity = False ) [view source on GitHub] \u00b6 Convert a bounding box from a format specified in source_format to the format used by albumentations: normalized coordinates of bottom-left and top-right corners of the bounding box in a form of (x_min, y_min, x_max, y_max) e.g. (0.15, 0.27, 0.67, 0.5) . Parameters: Name Type Description bbox tuple A bounding box tuple. source_format str format of the bounding box. Should be 'coco', 'pascal_voc', or 'yolo'. check_validity bool Check if all boxes are valid boxes. rows int Image height. cols int Image width. Returns: Type Description tuple A bounding box (x_min, y_min, x_max, y_max) . Note: The coco format of a bounding box looks like (x_min, y_min, width, height) , e.g. (97, 12, 150, 200). The pascal_voc format of a bounding box looks like (x_min, y_min, x_max, y_max) , e.g. (97, 12, 247, 212). The yolo format of a bounding box looks like (x, y, width, height) , e.g. (0.3, 0.1, 0.05, 0.07); where x , y coordinates of the center of the box, all values normalized to 1 by image height and width. Exceptions: Type Description ValueError if target_format is not equal to coco or pascal_voc , ot yolo . ValueError If in YOLO format all labels not in range (0, 1). def albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations ( bboxes , target_format , rows , cols , check_validity = False ) [view source on GitHub] \u00b6 Convert a list of bounding boxes from the format used by albumentations to a format, specified in target_format . Parameters: Name Type Description bboxes List[tuple] List of albumentation bounding box (x_min, y_min, x_max, y_max) . target_format str required format of the output bounding box. Should be 'coco', 'pascal_voc' or 'yolo'. rows int Image height. cols int Image width. check_validity bool Check if all boxes are valid boxes. Returns: Type Description list[tuple] List of bounding box. def albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations ( bboxes , source_format , rows , cols , check_validity = False ) [view source on GitHub] \u00b6 Convert a list bounding boxes from a format specified in source_format to the format used by albumentations def albumentations.augmentations.bbox_utils.denormalize_bbox ( bbox , rows , cols ) [view source on GitHub] \u00b6 Denormalize coordinates of a bounding box. Multiply x-coordinates by image width and y-coordinates by image height. This is an inverse operation for :func: ~albumentations.augmentations.bbox.normalize_bbox . Parameters: Name Type Description bbox tuple Normalized bounding box (x_min, y_min, x_max, y_max) . rows int Image height. cols int Image width. Returns: Type Description tuple Denormalized bounding box (x_min, y_min, x_max, y_max) . Exceptions: Type Description ValueError If rows or cols is less or equal zero def albumentations.augmentations.bbox_utils.denormalize_bboxes ( bboxes , rows , cols ) [view source on GitHub] \u00b6 Denormalize a list of bounding boxes. Parameters: Name Type Description bboxes List[tuple] Normalized bounding boxes [(x_min, y_min, x_max, y_max)] . rows int Image height. cols int Image width. Returns: Type Description List[tuple] Denormalized bounding boxes [(x_min, y_min, x_max, y_max)] . def albumentations.augmentations.bbox_utils.filter_bboxes ( bboxes , rows , cols , min_area = 0.0 , min_visibility = 0.0 ) [view source on GitHub] \u00b6 Remove bounding boxes that either lie outside of the visible area by more then min_visibility or whose area in pixels is under the threshold set by min_area . Also it crops boxes to final image size. Parameters: Name Type Description bboxes List[tuple] List of albumentation bounding box (x_min, y_min, x_max, y_max) . rows int Image height. cols int Image width. min_area float Minimum area of a bounding box. All bounding boxes whose visible area in pixels. is less than this value will be removed. Default: 0.0. min_visibility float Minimum fraction of area for a bounding box to remain this box in list. Default: 0.0. Returns: Type Description List[tuple] List of bounding box. def albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility ( original_shape , bboxes , transformed_shape , transformed_bboxes , threshold = 0.0 , min_area = 0.0 ) [view source on GitHub] \u00b6 Filter bounding boxes and return only those boxes whose visibility after transformation is above the threshold and minimal area of bounding box in pixels is more then min_area. Parameters: Name Type Description original_shape tuple Original image shape (height, width) . bboxes List[tuple] Original bounding boxes [(x_min, y_min, x_max, y_max)] . transformed_shape tuple Transformed image shape (height, width) . transformed_bboxes List[tuple] Transformed bounding boxes [(x_min, y_min, x_max, y_max)] . threshold float visibility threshold. Should be a value in the range [0.0, 1.0]. min_area float Minimal area threshold. Returns: Type Description List[tuple] Filtered bounding boxes [(x_min, y_min, x_max, y_max)] . def albumentations.augmentations.bbox_utils.normalize_bbox ( bbox , rows , cols ) [view source on GitHub] \u00b6 Normalize coordinates of a bounding box. Divide x-coordinates by image width and y-coordinates by image height. Parameters: Name Type Description bbox tuple Denormalized bounding box (x_min, y_min, x_max, y_max) . rows int Image height. cols int Image width. Returns: Type Description tuple Normalized bounding box (x_min, y_min, x_max, y_max) . Exceptions: Type Description ValueError If rows or cols is less or equal zero def albumentations.augmentations.bbox_utils.normalize_bboxes ( bboxes , rows , cols ) [view source on GitHub] \u00b6 Normalize a list of bounding boxes. Parameters: Name Type Description bboxes List[tuple] Denormalized bounding boxes [(x_min, y_min, x_max, y_max)] . rows int Image height. cols int Image width. Returns: Type Description List[tuple] Normalized bounding boxes [(x_min, y_min, x_max, y_max)] . def albumentations.augmentations.bbox_utils.union_of_bboxes ( height , width , bboxes , erosion_rate = 0.0 ) [view source on GitHub] \u00b6 Calculate union of bounding boxes. Parameters: Name Type Description height float Height of image or space. width float Width of image or space. bboxes List[tuple] List like bounding boxes. Format is [(x_min, y_min, x_max, y_max)] . erosion_rate float How much each bounding box can be shrinked, useful for erosive cropping. Set this in range [0, 1]. 0 will not be erosive at all, 1.0 can make any bbox to lose its volume. Returns: Type Description tuple A bounding box (x_min, y_min, x_max, y_max) .","title":"Helper functions for working with bounding boxes (augmentations.bbox_utils)"},{"location":"api_reference/augmentations/bbox_utils/#helper-functions-for-working-with-bounding-boxes-augmentationsbbox_utils","text":"","title":"Helper functions for working with bounding boxes (augmentations.bbox_utils)"},{"location":"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils","text":"","title":"albumentations.augmentations.bbox_utils"},{"location":"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area","text":"Calculate the area of a bounding box in pixels. Parameters: Name Type Description bbox tuple A bounding box (x_min, y_min, x_max, y_max) . rows int Image height. cols int Image width. Returns: Type Description int Area of a bounding box in pixels.","title":"calculate_bbox_area()"},{"location":"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bbox","text":"Check if bbox boundaries are in range 0, 1 and minimums are lesser then maximums","title":"check_bbox()"},{"location":"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bboxes","text":"Check if bboxes boundaries are in range 0, 1 and minimums are lesser then maximums","title":"check_bboxes()"},{"location":"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations","text":"Convert a bounding box from the format used by albumentations to a format, specified in target_format . Parameters: Name Type Description bbox tuple An albumentation bounding box (x_min, y_min, x_max, y_max) . target_format str required format of the output bounding box. Should be 'coco', 'pascal_voc' or 'yolo'. rows int Image height. cols int Image width. check_validity bool Check if all boxes are valid boxes. Returns: Type Description tuple A bounding box. Note: The coco format of a bounding box looks like [x_min, y_min, width, height] , e.g. [97, 12, 150, 200]. The pascal_voc format of a bounding box looks like [x_min, y_min, x_max, y_max] , e.g. [97, 12, 247, 212]. The yolo format of a bounding box looks like [x, y, width, height] , e.g. [0.3, 0.1, 0.05, 0.07]. Exceptions: Type Description ValueError if target_format is not equal to coco , pascal_voc or yolo .","title":"convert_bbox_from_albumentations()"},{"location":"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations","text":"Convert a bounding box from a format specified in source_format to the format used by albumentations: normalized coordinates of bottom-left and top-right corners of the bounding box in a form of (x_min, y_min, x_max, y_max) e.g. (0.15, 0.27, 0.67, 0.5) . Parameters: Name Type Description bbox tuple A bounding box tuple. source_format str format of the bounding box. Should be 'coco', 'pascal_voc', or 'yolo'. check_validity bool Check if all boxes are valid boxes. rows int Image height. cols int Image width. Returns: Type Description tuple A bounding box (x_min, y_min, x_max, y_max) . Note: The coco format of a bounding box looks like (x_min, y_min, width, height) , e.g. (97, 12, 150, 200). The pascal_voc format of a bounding box looks like (x_min, y_min, x_max, y_max) , e.g. (97, 12, 247, 212). The yolo format of a bounding box looks like (x, y, width, height) , e.g. (0.3, 0.1, 0.05, 0.07); where x , y coordinates of the center of the box, all values normalized to 1 by image height and width. Exceptions: Type Description ValueError if target_format is not equal to coco or pascal_voc , ot yolo . ValueError If in YOLO format all labels not in range (0, 1).","title":"convert_bbox_to_albumentations()"},{"location":"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations","text":"Convert a list of bounding boxes from the format used by albumentations to a format, specified in target_format . Parameters: Name Type Description bboxes List[tuple] List of albumentation bounding box (x_min, y_min, x_max, y_max) . target_format str required format of the output bounding box. Should be 'coco', 'pascal_voc' or 'yolo'. rows int Image height. cols int Image width. check_validity bool Check if all boxes are valid boxes. Returns: Type Description list[tuple] List of bounding box.","title":"convert_bboxes_from_albumentations()"},{"location":"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations","text":"Convert a list bounding boxes from a format specified in source_format to the format used by albumentations","title":"convert_bboxes_to_albumentations()"},{"location":"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox","text":"Denormalize coordinates of a bounding box. Multiply x-coordinates by image width and y-coordinates by image height. This is an inverse operation for :func: ~albumentations.augmentations.bbox.normalize_bbox . Parameters: Name Type Description bbox tuple Normalized bounding box (x_min, y_min, x_max, y_max) . rows int Image height. cols int Image width. Returns: Type Description tuple Denormalized bounding box (x_min, y_min, x_max, y_max) . Exceptions: Type Description ValueError If rows or cols is less or equal zero","title":"denormalize_bbox()"},{"location":"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes","text":"Denormalize a list of bounding boxes. Parameters: Name Type Description bboxes List[tuple] Normalized bounding boxes [(x_min, y_min, x_max, y_max)] . rows int Image height. cols int Image width. Returns: Type Description List[tuple] Denormalized bounding boxes [(x_min, y_min, x_max, y_max)] .","title":"denormalize_bboxes()"},{"location":"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes","text":"Remove bounding boxes that either lie outside of the visible area by more then min_visibility or whose area in pixels is under the threshold set by min_area . Also it crops boxes to final image size. Parameters: Name Type Description bboxes List[tuple] List of albumentation bounding box (x_min, y_min, x_max, y_max) . rows int Image height. cols int Image width. min_area float Minimum area of a bounding box. All bounding boxes whose visible area in pixels. is less than this value will be removed. Default: 0.0. min_visibility float Minimum fraction of area for a bounding box to remain this box in list. Default: 0.0. Returns: Type Description List[tuple] List of bounding box.","title":"filter_bboxes()"},{"location":"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility","text":"Filter bounding boxes and return only those boxes whose visibility after transformation is above the threshold and minimal area of bounding box in pixels is more then min_area. Parameters: Name Type Description original_shape tuple Original image shape (height, width) . bboxes List[tuple] Original bounding boxes [(x_min, y_min, x_max, y_max)] . transformed_shape tuple Transformed image shape (height, width) . transformed_bboxes List[tuple] Transformed bounding boxes [(x_min, y_min, x_max, y_max)] . threshold float visibility threshold. Should be a value in the range [0.0, 1.0]. min_area float Minimal area threshold. Returns: Type Description List[tuple] Filtered bounding boxes [(x_min, y_min, x_max, y_max)] .","title":"filter_bboxes_by_visibility()"},{"location":"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox","text":"Normalize coordinates of a bounding box. Divide x-coordinates by image width and y-coordinates by image height. Parameters: Name Type Description bbox tuple Denormalized bounding box (x_min, y_min, x_max, y_max) . rows int Image height. cols int Image width. Returns: Type Description tuple Normalized bounding box (x_min, y_min, x_max, y_max) . Exceptions: Type Description ValueError If rows or cols is less or equal zero","title":"normalize_bbox()"},{"location":"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes","text":"Normalize a list of bounding boxes. Parameters: Name Type Description bboxes List[tuple] Denormalized bounding boxes [(x_min, y_min, x_max, y_max)] . rows int Image height. cols int Image width. Returns: Type Description List[tuple] Normalized bounding boxes [(x_min, y_min, x_max, y_max)] .","title":"normalize_bboxes()"},{"location":"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes","text":"Calculate union of bounding boxes. Parameters: Name Type Description height float Height of image or space. width float Width of image or space. bboxes List[tuple] List like bounding boxes. Format is [(x_min, y_min, x_max, y_max)] . erosion_rate float How much each bounding box can be shrinked, useful for erosive cropping. Set this in range [0, 1]. 0 will not be erosive at all, 1.0 can make any bbox to lose its volume. Returns: Type Description tuple A bounding box (x_min, y_min, x_max, y_max) .","title":"union_of_bboxes()"},{"location":"api_reference/augmentations/functional/","text":"Functional transforms (augmentations.functional) \u00b6 \u00b6 def albumentations.augmentations.functional.add_fog ( img , fog_coef , alpha_coef , haze_list ) [view source on GitHub] \u00b6 Add fog to the image. From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description img numpy.ndarray Image. fog_coef float Fog coefficient. alpha_coef float Alpha coefficient. haze_list list Returns: Type Description numpy.ndarray Image. def albumentations.augmentations.functional.add_rain ( img , slant , drop_length , drop_width , drop_color , blur_value , brightness_coefficient , rain_drops ) [view source on GitHub] \u00b6 From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description img numpy.ndarray Image. slant int drop_length drop_width drop_color blur_value int Rainy view are blurry. brightness_coefficient float Rainy days are usually shady. rain_drops Returns: Type Description numpy.ndarray Image. def albumentations.augmentations.functional.add_shadow ( img , vertices_list ) [view source on GitHub] \u00b6 Add shadows to the image. From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description img numpy.ndarray vertices_list list Returns: Type Description numpy.ndarray def albumentations.augmentations.functional.add_snow ( img , snow_point , brightness_coeff ) [view source on GitHub] \u00b6 Bleaches out pixels, imitation snow. From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description img numpy.ndarray Image. snow_point Number of show points. brightness_coeff Brightness coefficient. Returns: Type Description numpy.ndarray Image. def albumentations.augmentations.functional.add_sun_flare ( img , flare_center_x , flare_center_y , src_radius , src_color , circles ) [view source on GitHub] \u00b6 Add sun flare. From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description img numpy.ndarray flare_center_x float flare_center_y float src_radius src_color int, int, int circles list Returns: Type Description numpy.ndarray def albumentations.augmentations.functional.bbox_crop ( bbox , x_min , y_min , x_max , y_max , rows , cols ) [view source on GitHub] \u00b6 Crop a bounding box. Parameters: Name Type Description bbox tuple A bounding box (x_min, y_min, x_max, y_max) . x_min int y_min int x_max int y_max int rows int Image rows. cols int Image cols. Returns: Type Description tuple A cropped bounding box (x_min, y_min, x_max, y_max) . def albumentations.augmentations.functional.bbox_flip ( bbox , d , rows , cols ) [view source on GitHub] \u00b6 Flip a bounding box either vertically, horizontally or both depending on the value of d . Parameters: Name Type Description bbox tuple A bounding box (x_min, y_min, x_max, y_max) . d int rows int Image rows. cols int Image cols. Returns: Type Description tuple A bounding box (x_min, y_min, x_max, y_max) . Exceptions: Type Description ValueError if value of d is not -1, 0 or 1. def albumentations.augmentations.functional.bbox_hflip ( bbox , rows , cols ) [view source on GitHub] \u00b6 Flip a bounding box horizontally around the y-axis. Parameters: Name Type Description bbox tuple A bounding box (x_min, y_min, x_max, y_max) . rows int Image rows. cols int Image cols. Returns: Type Description tuple A bounding box (x_min, y_min, x_max, y_max) . def albumentations.augmentations.functional.bbox_rot90 ( bbox , factor , rows , cols ) [view source on GitHub] \u00b6 Rotates a bounding box by 90 degrees CCW (see np.rot90) Parameters: Name Type Description bbox tuple A bounding box tuple (x_min, y_min, x_max, y_max). factor int Number of CCW rotations. Must be in set {0, 1, 2, 3} See np.rot90. rows int Image rows. cols int Image cols. Returns: Type Description tuple A bounding box tuple (x_min, y_min, x_max, y_max). def albumentations.augmentations.functional.bbox_rotate ( bbox , angle , rows , cols ) [view source on GitHub] \u00b6 Rotates a bounding box by angle degrees. Parameters: Name Type Description bbox tuple A bounding box (x_min, y_min, x_max, y_max) . angle int Angle of rotation in degrees. rows int Image rows. cols int Image cols. Returns: Type Description A bounding box (x_min, y_min, x_max, y_max) . def albumentations.augmentations.functional.bbox_transpose ( bbox , axis , rows , cols ) [view source on GitHub] \u00b6 Transposes a bounding box along given axis. Parameters: Name Type Description bbox tuple A bounding box (x_min, y_min, x_max, y_max) . axis int 0 - main axis, 1 - secondary axis. rows int Image rows. cols int Image cols. Returns: Type Description tuple A bounding box tuple (x_min, y_min, x_max, y_max) . Exceptions: Type Description ValueError If axis not equal to 0 or 1. def albumentations.augmentations.functional.bbox_vflip ( bbox , rows , cols ) [view source on GitHub] \u00b6 Flip a bounding box vertically around the x-axis. Parameters: Name Type Description bbox tuple A bounding box (x_min, y_min, x_max, y_max) . rows int Image rows. cols int Image cols. Returns: Type Description tuple A bounding box (x_min, y_min, x_max, y_max) . def albumentations.augmentations.functional.crop_bbox_by_coords ( bbox , crop_coords , crop_height , crop_width , rows , cols ) [view source on GitHub] \u00b6 Crop a bounding box using the provided coordinates of bottom-left and top-right corners in pixels and the required height and width of the crop. Parameters: Name Type Description bbox tuple A cropped box (x_min, y_min, x_max, y_max) . crop_coords tuple Crop coordinates (x1, y1, x2, y2) . crop_height int crop_width int rows int Image rows. cols int Image cols. Returns: Type Description tuple A cropped bounding box (x_min, y_min, x_max, y_max) . def albumentations.augmentations.functional.crop_keypoint_by_coords ( keypoint , crop_coords , crop_height , crop_width , rows , cols ) [view source on GitHub] \u00b6 Crop a keypoint using the provided coordinates of bottom-left and top-right corners in pixels and the required height and width of the crop. Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . crop_coords tuple Crop box coords (x1, x2, y1, y2) . crop height (int Crop height. crop_width int Crop width. rows int Image height. cols int Image width. Returns: Type Description A keypoint (x, y, angle, scale) . def albumentations.augmentations.functional.elastic_transform ( img , alpha , sigma , alpha_affine , interpolation = 1 , border_mode = 4 , value = None , random_state = None , approximate = False ) [view source on GitHub] \u00b6 Elastic deformation of images as described in [Simard2003]_ (with modifications). Based on https://gist.github.com/erniejunior/601cdf56d2b424757de5 .. [Simard2003] Simard, Steinkraus and Platt, \"Best Practices for Convolutional Neural Networks applied to Visual Document Analysis\", in Proc. of the International Conference on Document Analysis and Recognition, 2003. def albumentations.augmentations.functional.elastic_transform_approx ( img , alpha , sigma , alpha_affine , interpolation = 1 , border_mode = 4 , value = None , random_state = None ) [view source on GitHub] \u00b6 Elastic deformation of images as described in [Simard2003]_ (with modifications for speed). Based on https://gist.github.com/erniejunior/601cdf56d2b424757de5 .. [Simard2003] Simard, Steinkraus and Platt, \"Best Practices for Convolutional Neural Networks applied to Visual Document Analysis\", in Proc. of the International Conference on Document Analysis and Recognition, 2003. def albumentations.augmentations.functional.equalize ( img , mask = None , mode = 'cv' , by_channels = True ) [view source on GitHub] \u00b6 Equalize the image histogram. Parameters: Name Type Description img numpy.ndarray RGB or grayscale image. mask numpy.ndarray An optional mask. If given, only the pixels selected by the mask are included in the analysis. Maybe 1 channel or 3 channel array. mode str {'cv', 'pil'}. Use OpenCV or Pillow equalization method. by_channels bool If True, use equalization by channels separately, else convert image to YCbCr representation and use equalization by Y channel. Returns: Type Description numpy.ndarray Equalized image. def albumentations.augmentations.functional.fancy_pca ( img , alpha = 0.1 ) [view source on GitHub] \u00b6 Perform 'Fancy PCA' augmentation from: http://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf Parameters: Name Type Description img numpy array with (h, w, rgb) shape, as ints between 0-255) alpha how much to perturb/scale the eigen vecs and vals the paper used std=0.1 Returns: Type Description numpy image-like array as float range(0, 1) def albumentations.augmentations.functional.grid_distortion ( img , num_steps = 10 , xsteps = (), ysteps = (), interpolation = 1 , border_mode = 4 , value = None ) [view source on GitHub] \u00b6 Reference: http://pythology.blogspot.sg/2014/03/interpolation-on-regular-distorted-grid.html def albumentations.augmentations.functional.iso_noise ( image , color_shift = 0.05 , intensity = 0.5 , random_state = None , ** kwargs ) [view source on GitHub] \u00b6 Apply poisson noise to image to simulate camera sensor noise. Parameters: Name Type Description image numpy.ndarray Input image, currently, only RGB, uint8 images are supported. color_shift float intensity float Multiplication factor for noise values. Values of ~0.5 are produce noticeable, yet acceptable level of noise. random_state **kwargs Returns: Type Description numpy.ndarray Noised image def albumentations.augmentations.functional.keypoint_center_crop ( keypoint , crop_height , crop_width , rows , cols ) [view source on GitHub] \u00b6 Keypoint center crop. Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . crop_height int Crop height. crop_width int Crop width. h_start int Crop height start. w_start int Crop width start. rows int Image height. cols int Image width. Returns: Type Description tuple A keypoint (x, y, angle, scale) . def albumentations.augmentations.functional.keypoint_flip ( keypoint , d , rows , cols ) [view source on GitHub] \u00b6 Flip a keypoint either vertically, horizontally or both depending on the value of d . Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . d int Number of flip. Must be -1, 0 or 1: * 0 - vertical flip, * 1 - horizontal flip, * -1 - vertical and horizontal flip. rows int Image height. cols int Image width. Returns: Type Description tuple A keypoint (x, y, angle, scale) . Exceptions: Type Description ValueError if value of d is not -1, 0 or 1. def albumentations.augmentations.functional.keypoint_hflip ( keypoint , rows , cols ) [view source on GitHub] \u00b6 Flip a keypoint horizontally around the y-axis. Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . rows int Image height. cols int Image width. Returns: Type Description tuple A keypoint (x, y, angle, scale) . def albumentations.augmentations.functional.keypoint_random_crop ( keypoint , crop_height , crop_width , h_start , w_start , rows , cols ) [view source on GitHub] \u00b6 Keypoint random crop. Parameters: Name Type Description keypoint (tuple): A keypoint (x, y, angle, scale) . crop_height int Crop height. crop_width int Crop width. h_start int Crop height start. w_start int Crop width start. rows int Image height. cols int Image width. Returns: Type Description A keypoint (x, y, angle, scale) . def albumentations.augmentations.functional.keypoint_rot90 ( keypoint , factor , rows , cols , ** params ) [view source on GitHub] \u00b6 Rotates a keypoint by 90 degrees CCW (see np.rot90) Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . factor int Number of CCW rotations. Must be in range [0;3] See np.rot90. rows int Image height. cols int Image width. Returns: Type Description tuple A keypoint (x, y, angle, scale) . Exceptions: Type Description ValueError if factor not in set {0, 1, 2, 3} def albumentations.augmentations.functional.keypoint_rotate ( keypoint , angle , rows , cols , ** params ) [view source on GitHub] \u00b6 Rotate a keypoint by angle. Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . angle float Rotation angle. rows int Image height. cols int Image width. Returns: Type Description tuple A keypoint (x, y, angle, scale) . def albumentations.augmentations.functional.keypoint_scale ( keypoint , scale_x , scale_y ) [view source on GitHub] \u00b6 Scales a keypoint by scale_x and scale_y. Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . scale_x int Scale coefficient x-axis. scale_y int Scale coefficient y-axis. Returns: Type Description A keypoint (x, y, angle, scale) . def albumentations.augmentations.functional.keypoint_transpose ( keypoint ) [view source on GitHub] \u00b6 Rotate a keypoint by angle. Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . Returns: Type Description tuple A keypoint (x, y, angle, scale) . def albumentations.augmentations.functional.keypoint_vflip ( keypoint , rows , cols ) [view source on GitHub] \u00b6 Flip a keypoint vertically around the x-axis. Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . rows int Image height. cols( int Image width. Returns: Type Description tuple A keypoint (x, y, angle, scale) . def albumentations.augmentations.functional.multiply ( img , multiplier ) [view source on GitHub] \u00b6 Parameters: Name Type Description img numpy.ndarray Image. multiplier numpy.ndarray Multiplier coefficient. Returns: Type Description numpy.ndarray Image multiplied by multiplier coefficient. def albumentations.augmentations.functional.optical_distortion ( img , k = 0 , dx = 0 , dy = 0 , interpolation = 1 , border_mode = 4 , value = None ) [view source on GitHub] \u00b6 Barrel / pincushion distortion. Unconventional augment. Reference: | https://stackoverflow.com/questions/6199636/formulas-for-barrel-pincushion-distortion | https://stackoverflow.com/questions/10364201/image-transformation-in-opencv | https://stackoverflow.com/questions/2477774/correcting-fisheye-distortion-programmatically | http://www.coldvision.io/2017/03/02/advanced-lane-finding-using-opencv/ def albumentations.augmentations.functional.posterize ( img , bits ) [view source on GitHub] \u00b6 Reduce the number of bits for each color channel. Parameters: Name Type Description img numpy.ndarray image to posterize. bits int number of high bits. Must be in range [0, 8] Returns: Type Description numpy.ndarray Image with reduced color channels. def albumentations.augmentations.functional.preserve_channel_dim ( func ) [view source on GitHub] \u00b6 Preserve dummy channel dim. def albumentations.augmentations.functional.preserve_shape ( func ) [view source on GitHub] \u00b6 Preserve shape of the image def albumentations.augmentations.functional.py3round ( number ) [view source on GitHub] \u00b6 Unified rounding in all python versions. def albumentations.augmentations.functional.solarize ( img , threshold = 128 ) [view source on GitHub] \u00b6 Invert all pixel values above a threshold. Parameters: Name Type Description img numpy.ndarray The image to solarize. threshold int All pixels above this greyscale level are inverted. Returns: Type Description numpy.ndarray Solarized image. def albumentations.augmentations.functional.swap_tiles_on_image ( image , tiles ) [view source on GitHub] \u00b6 Swap tiles on image. Parameters: Name Type Description image np.ndarray Input image. tiles np.ndarray array of tuples( current_left_up_corner_row, current_left_up_corner_col, old_left_up_corner_row, old_left_up_corner_col, height_tile, width_tile) Returns: Type Description np.ndarray Output image.","title":"Functional transforms (augmentations.functional)"},{"location":"api_reference/augmentations/functional/#functional-transforms-augmentationsfunctional","text":"","title":"Functional transforms (augmentations.functional)"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional","text":"","title":"albumentations.augmentations.functional"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog","text":"Add fog to the image. From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description img numpy.ndarray Image. fog_coef float Fog coefficient. alpha_coef float Alpha coefficient. haze_list list Returns: Type Description numpy.ndarray Image.","title":"add_fog()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain","text":"From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description img numpy.ndarray Image. slant int drop_length drop_width drop_color blur_value int Rainy view are blurry. brightness_coefficient float Rainy days are usually shady. rain_drops Returns: Type Description numpy.ndarray Image.","title":"add_rain()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow","text":"Add shadows to the image. From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description img numpy.ndarray vertices_list list Returns: Type Description numpy.ndarray","title":"add_shadow()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow","text":"Bleaches out pixels, imitation snow. From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description img numpy.ndarray Image. snow_point Number of show points. brightness_coeff Brightness coefficient. Returns: Type Description numpy.ndarray Image.","title":"add_snow()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare","text":"Add sun flare. From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description img numpy.ndarray flare_center_x float flare_center_y float src_radius src_color int, int, int circles list Returns: Type Description numpy.ndarray","title":"add_sun_flare()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop","text":"Crop a bounding box. Parameters: Name Type Description bbox tuple A bounding box (x_min, y_min, x_max, y_max) . x_min int y_min int x_max int y_max int rows int Image rows. cols int Image cols. Returns: Type Description tuple A cropped bounding box (x_min, y_min, x_max, y_max) .","title":"bbox_crop()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip","text":"Flip a bounding box either vertically, horizontally or both depending on the value of d . Parameters: Name Type Description bbox tuple A bounding box (x_min, y_min, x_max, y_max) . d int rows int Image rows. cols int Image cols. Returns: Type Description tuple A bounding box (x_min, y_min, x_max, y_max) . Exceptions: Type Description ValueError if value of d is not -1, 0 or 1.","title":"bbox_flip()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip","text":"Flip a bounding box horizontally around the y-axis. Parameters: Name Type Description bbox tuple A bounding box (x_min, y_min, x_max, y_max) . rows int Image rows. cols int Image cols. Returns: Type Description tuple A bounding box (x_min, y_min, x_max, y_max) .","title":"bbox_hflip()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90","text":"Rotates a bounding box by 90 degrees CCW (see np.rot90) Parameters: Name Type Description bbox tuple A bounding box tuple (x_min, y_min, x_max, y_max). factor int Number of CCW rotations. Must be in set {0, 1, 2, 3} See np.rot90. rows int Image rows. cols int Image cols. Returns: Type Description tuple A bounding box tuple (x_min, y_min, x_max, y_max).","title":"bbox_rot90()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate","text":"Rotates a bounding box by angle degrees. Parameters: Name Type Description bbox tuple A bounding box (x_min, y_min, x_max, y_max) . angle int Angle of rotation in degrees. rows int Image rows. cols int Image cols. Returns: Type Description A bounding box (x_min, y_min, x_max, y_max) .","title":"bbox_rotate()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose","text":"Transposes a bounding box along given axis. Parameters: Name Type Description bbox tuple A bounding box (x_min, y_min, x_max, y_max) . axis int 0 - main axis, 1 - secondary axis. rows int Image rows. cols int Image cols. Returns: Type Description tuple A bounding box tuple (x_min, y_min, x_max, y_max) . Exceptions: Type Description ValueError If axis not equal to 0 or 1.","title":"bbox_transpose()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip","text":"Flip a bounding box vertically around the x-axis. Parameters: Name Type Description bbox tuple A bounding box (x_min, y_min, x_max, y_max) . rows int Image rows. cols int Image cols. Returns: Type Description tuple A bounding box (x_min, y_min, x_max, y_max) .","title":"bbox_vflip()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords","text":"Crop a bounding box using the provided coordinates of bottom-left and top-right corners in pixels and the required height and width of the crop. Parameters: Name Type Description bbox tuple A cropped box (x_min, y_min, x_max, y_max) . crop_coords tuple Crop coordinates (x1, y1, x2, y2) . crop_height int crop_width int rows int Image rows. cols int Image cols. Returns: Type Description tuple A cropped bounding box (x_min, y_min, x_max, y_max) .","title":"crop_bbox_by_coords()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords","text":"Crop a keypoint using the provided coordinates of bottom-left and top-right corners in pixels and the required height and width of the crop. Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . crop_coords tuple Crop box coords (x1, x2, y1, y2) . crop height (int Crop height. crop_width int Crop width. rows int Image height. cols int Image width. Returns: Type Description A keypoint (x, y, angle, scale) .","title":"crop_keypoint_by_coords()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform","text":"Elastic deformation of images as described in [Simard2003]_ (with modifications). Based on https://gist.github.com/erniejunior/601cdf56d2b424757de5 .. [Simard2003] Simard, Steinkraus and Platt, \"Best Practices for Convolutional Neural Networks applied to Visual Document Analysis\", in Proc. of the International Conference on Document Analysis and Recognition, 2003.","title":"elastic_transform()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx","text":"Elastic deformation of images as described in [Simard2003]_ (with modifications for speed). Based on https://gist.github.com/erniejunior/601cdf56d2b424757de5 .. [Simard2003] Simard, Steinkraus and Platt, \"Best Practices for Convolutional Neural Networks applied to Visual Document Analysis\", in Proc. of the International Conference on Document Analysis and Recognition, 2003.","title":"elastic_transform_approx()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize","text":"Equalize the image histogram. Parameters: Name Type Description img numpy.ndarray RGB or grayscale image. mask numpy.ndarray An optional mask. If given, only the pixels selected by the mask are included in the analysis. Maybe 1 channel or 3 channel array. mode str {'cv', 'pil'}. Use OpenCV or Pillow equalization method. by_channels bool If True, use equalization by channels separately, else convert image to YCbCr representation and use equalization by Y channel. Returns: Type Description numpy.ndarray Equalized image.","title":"equalize()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca","text":"Perform 'Fancy PCA' augmentation from: http://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf Parameters: Name Type Description img numpy array with (h, w, rgb) shape, as ints between 0-255) alpha how much to perturb/scale the eigen vecs and vals the paper used std=0.1 Returns: Type Description numpy image-like array as float range(0, 1)","title":"fancy_pca()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.grid_distortion","text":"Reference: http://pythology.blogspot.sg/2014/03/interpolation-on-regular-distorted-grid.html","title":"grid_distortion()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise","text":"Apply poisson noise to image to simulate camera sensor noise. Parameters: Name Type Description image numpy.ndarray Input image, currently, only RGB, uint8 images are supported. color_shift float intensity float Multiplication factor for noise values. Values of ~0.5 are produce noticeable, yet acceptable level of noise. random_state **kwargs Returns: Type Description numpy.ndarray Noised image","title":"iso_noise()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop","text":"Keypoint center crop. Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . crop_height int Crop height. crop_width int Crop width. h_start int Crop height start. w_start int Crop width start. rows int Image height. cols int Image width. Returns: Type Description tuple A keypoint (x, y, angle, scale) .","title":"keypoint_center_crop()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip","text":"Flip a keypoint either vertically, horizontally or both depending on the value of d . Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . d int Number of flip. Must be -1, 0 or 1: * 0 - vertical flip, * 1 - horizontal flip, * -1 - vertical and horizontal flip. rows int Image height. cols int Image width. Returns: Type Description tuple A keypoint (x, y, angle, scale) . Exceptions: Type Description ValueError if value of d is not -1, 0 or 1.","title":"keypoint_flip()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip","text":"Flip a keypoint horizontally around the y-axis. Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . rows int Image height. cols int Image width. Returns: Type Description tuple A keypoint (x, y, angle, scale) .","title":"keypoint_hflip()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop","text":"Keypoint random crop. Parameters: Name Type Description keypoint (tuple): A keypoint (x, y, angle, scale) . crop_height int Crop height. crop_width int Crop width. h_start int Crop height start. w_start int Crop width start. rows int Image height. cols int Image width. Returns: Type Description A keypoint (x, y, angle, scale) .","title":"keypoint_random_crop()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90","text":"Rotates a keypoint by 90 degrees CCW (see np.rot90) Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . factor int Number of CCW rotations. Must be in range [0;3] See np.rot90. rows int Image height. cols int Image width. Returns: Type Description tuple A keypoint (x, y, angle, scale) . Exceptions: Type Description ValueError if factor not in set {0, 1, 2, 3}","title":"keypoint_rot90()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate","text":"Rotate a keypoint by angle. Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . angle float Rotation angle. rows int Image height. cols int Image width. Returns: Type Description tuple A keypoint (x, y, angle, scale) .","title":"keypoint_rotate()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale","text":"Scales a keypoint by scale_x and scale_y. Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . scale_x int Scale coefficient x-axis. scale_y int Scale coefficient y-axis. Returns: Type Description A keypoint (x, y, angle, scale) .","title":"keypoint_scale()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_transpose","text":"Rotate a keypoint by angle. Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . Returns: Type Description tuple A keypoint (x, y, angle, scale) .","title":"keypoint_transpose()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip","text":"Flip a keypoint vertically around the x-axis. Parameters: Name Type Description keypoint tuple A keypoint (x, y, angle, scale) . rows int Image height. cols( int Image width. Returns: Type Description tuple A keypoint (x, y, angle, scale) .","title":"keypoint_vflip()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.multiply","text":"Parameters: Name Type Description img numpy.ndarray Image. multiplier numpy.ndarray Multiplier coefficient. Returns: Type Description numpy.ndarray Image multiplied by multiplier coefficient.","title":"multiply()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion","text":"Barrel / pincushion distortion. Unconventional augment. Reference: | https://stackoverflow.com/questions/6199636/formulas-for-barrel-pincushion-distortion | https://stackoverflow.com/questions/10364201/image-transformation-in-opencv | https://stackoverflow.com/questions/2477774/correcting-fisheye-distortion-programmatically | http://www.coldvision.io/2017/03/02/advanced-lane-finding-using-opencv/","title":"optical_distortion()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize","text":"Reduce the number of bits for each color channel. Parameters: Name Type Description img numpy.ndarray image to posterize. bits int number of high bits. Must be in range [0, 8] Returns: Type Description numpy.ndarray Image with reduced color channels.","title":"posterize()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.preserve_channel_dim","text":"Preserve dummy channel dim.","title":"preserve_channel_dim()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.preserve_shape","text":"Preserve shape of the image","title":"preserve_shape()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.py3round","text":"Unified rounding in all python versions.","title":"py3round()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize","text":"Invert all pixel values above a threshold. Parameters: Name Type Description img numpy.ndarray The image to solarize. threshold int All pixels above this greyscale level are inverted. Returns: Type Description numpy.ndarray Solarized image.","title":"solarize()"},{"location":"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image","text":"Swap tiles on image. Parameters: Name Type Description image np.ndarray Input image. tiles np.ndarray array of tuples( current_left_up_corner_row, current_left_up_corner_col, old_left_up_corner_row, old_left_up_corner_col, height_tile, width_tile) Returns: Type Description np.ndarray Output image.","title":"swap_tiles_on_image()"},{"location":"api_reference/augmentations/keypoints_utils/","text":"Helper functions for working with keypoints (augmentations.keypoints_utils) \u00b6 \u00b6 def albumentations.augmentations.keypoints_utils.check_keypoint ( kp , rows , cols ) [view source on GitHub] \u00b6 Check if keypoint coordinates are less than image shapes def albumentations.augmentations.keypoints_utils.check_keypoints ( keypoints , rows , cols ) [view source on GitHub] \u00b6 Check if keypoints boundaries are less than image shapes","title":"Helper functions for working with keypoints (augmentations.keypoints_utils)"},{"location":"api_reference/augmentations/keypoints_utils/#helper-functions-for-working-with-keypoints-augmentationskeypoints_utils","text":"","title":"Helper functions for working with keypoints (augmentations.keypoints_utils)"},{"location":"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils","text":"","title":"albumentations.augmentations.keypoints_utils"},{"location":"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoint","text":"Check if keypoint coordinates are less than image shapes","title":"check_keypoint()"},{"location":"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoints","text":"Check if keypoints boundaries are less than image shapes","title":"check_keypoints()"},{"location":"api_reference/augmentations/transforms/","text":"Transforms (augmentations.transforms) \u00b6 \u00b6 class albumentations.augmentations.transforms.Blur ( blur_limit = 7 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Blur the input image using a random-sized kernel. Parameters: Name Type Description blur_limit int, [int, int] maximum kernel size for blurring the input image. Should be in range [3, inf). Default: (3, 7). p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.CenterCrop ( height , width , always_apply = False , p = 1.0 ) [view source on GitHub] \u00b6 Crop the central part of the input. Parameters: Name Type Description height int height of the crop. width int width of the crop. p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 Note: It is recommended to use uint8 images as input. Otherwise the operation will require internal conversion float32 -> uint8 -> float32 that causes worse performance. class albumentations.augmentations.transforms.ChannelDropout ( channel_drop_range = ( 1 , 1 ), fill_value = 0 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Randomly Drop Channels in the input Image. Parameters: Name Type Description channel_drop_range [int, int] range from which we choose the number of channels to drop. fill_value int, float pixel value for the dropped channel. p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, uint16, unit32, float32 class albumentations.augmentations.transforms.ChannelShuffle [view source on GitHub] \u00b6 Randomly rearrange channels of the input RGB image. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.CLAHE ( clip_limit = 4.0 , tile_grid_size = ( 8 , 8 ), always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Apply Contrast Limited Adaptive Histogram Equalization to the input image. Parameters: Name Type Description clip_limit float or [float, float] upper threshold value for contrast limiting. If clip_limit is a single float value, the range will be (1, clip_limit). Default: (1, 4). tile_grid_size [int, int] size of grid for histogram equalization. Default: (8, 8). p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8 class albumentations.augmentations.transforms.CoarseDropout ( max_holes = 8 , max_height = 8 , max_width = 8 , min_holes = None , min_height = None , min_width = None , fill_value = 0 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 CoarseDropout of the rectangular regions in the image. Parameters: Name Type Description max_holes int Maximum number of regions to zero out. max_height int Maximum height of the hole. max_width int Maximum width of the hole. min_holes int Minimum number of regions to zero out. If None , min_holes is be set to max_holes . Default: None . min_height int Minimum height of the hole. Default: None. If None , min_height is set to max_height . Default: None . min_width int Minimum width of the hole. If None , min_height is set to max_width . Default: None . fill_value int, float, lisf of int, list of float value for dropped pixels. Targets: image Image types: uint8, float32 Reference: | https://arxiv.org/abs/1708.04552 | https://github.com/uoguelph-mlrg/Cutout/blob/master/util/cutout.py | https://github.com/aleju/imgaug/blob/master/imgaug/augmenters/arithmetic.py class albumentations.augmentations.transforms.Crop ( x_min = 0 , y_min = 0 , x_max = 1024 , y_max = 1024 , always_apply = False , p = 1.0 ) [view source on GitHub] \u00b6 Crop region from image. Parameters: Name Type Description x_min int Minimum upper left x coordinate. y_min int Minimum upper left y coordinate. x_max int Maximum lower right x coordinate. y_max int Maximum lower right y coordinate. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 class albumentations.augmentations.transforms.CropNonEmptyMaskIfExists ( height , width , ignore_values = None , ignore_channels = None , always_apply = False , p = 1.0 ) [view source on GitHub] \u00b6 Crop area with mask if mask is non-empty, else make random crop. Parameters: Name Type Description height int vertical size of crop in pixels width int horizontal size of crop in pixels ignore_values list of int values to ignore in mask, 0 values are always ignored (e.g. if background value is 5 set ignore_values=[5] to ignore) ignore_channels list of int channels to ignore in mask (e.g. if background is a first channel set ignore_channels=[0] to ignore) p float probability of applying the transform. Default: 1.0. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 class albumentations.augmentations.transforms.Cutout ( num_holes = 8 , max_h_size = 8 , max_w_size = 8 , fill_value = 0 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 CoarseDropout of the square regions in the image. Parameters: Name Type Description num_holes int number of regions to zero out max_h_size int maximum height of the hole max_w_size int maximum width of the hole fill_value int, float, lisf of int, list of float value for dropped pixels. Targets: image Image types: uint8, float32 Reference: | https://arxiv.org/abs/1708.04552 | https://github.com/uoguelph-mlrg/Cutout/blob/master/util/cutout.py | https://github.com/aleju/imgaug/blob/master/imgaug/augmenters/arithmetic.py class albumentations.augmentations.transforms.Downscale ( scale_min = 0.25 , scale_max = 0.25 , interpolation = 0 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Decreases image quality by downscaling and upscaling back. Parameters: Name Type Description scale_min float lower bound on the image scale. Should be < 1. scale_max float lower bound on the image scale. Should be . interpolation cv2 interpolation method. cv2.INTER_NEAREST by default Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.ElasticTransform ( alpha = 1 , sigma = 50 , alpha_affine = 50 , interpolation = 1 , border_mode = 4 , value = None , mask_value = None , always_apply = False , approximate = False , p = 0.5 ) [view source on GitHub] \u00b6 Elastic deformation of images as described in [Simard2003]_ (with modifications). Based on https://gist.github.com/erniejunior/601cdf56d2b424757de5 .. [Simard2003] Simard, Steinkraus and Platt, \"Best Practices for Convolutional Neural Networks applied to Visual Document Analysis\", in Proc. of the International Conference on Document Analysis and Recognition, 2003. Parameters: Name Type Description alpha float sigma float Gaussian filter parameter. alpha_affine float The range will be (-alpha_affine, alpha_affine) interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. border_mode OpenCV flag flag that is used to specify the pixel extrapolation method. Should be one of: cv2.BORDER_CONSTANT, cv2.BORDER_REPLICATE, cv2.BORDER_REFLECT, cv2.BORDER_WRAP, cv2.BORDER_REFLECT_101. Default: cv2.BORDER_REFLECT_101 value int, float, list of ints, list of float padding value if border_mode is cv2.BORDER_CONSTANT. mask_value int, float, list of ints, list of float padding value if border_mode is cv2.BORDER_CONSTANT applied for masks. approximate boolean Whether to smooth displacement map with fixed kernel size. Enabling this option gives ~2X speedup on large images. Targets: image, mask Image types: uint8, float32 class albumentations.augmentations.transforms.Equalize ( mode = 'cv' , by_channels = True , mask = None , mask_params = (), always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Equalize the image histogram. Parameters: Name Type Description mode str {'cv', 'pil'}. Use OpenCV or Pillow equalization method. by_channels bool If True, use equalization by channels separately, else convert image to YCbCr representation and use equalization by Y channel. mask np.ndarray, callable If given, only the pixels selected by the mask are included in the analysis. Maybe 1 channel or 3 channel array or callable. Function signature must include image argument. mask_params list of str Params for mask function. Targets: image Image types: uint8 class albumentations.augmentations.transforms.FancyPCA ( alpha = 0.1 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Augment RGB image using FancyPCA from Krizhevsky's paper \"ImageNet Classification with Deep Convolutional Neural Networks\" Parameters: Name Type Description alpha float how much to perturb/scale the eigen vecs and vals. scale is samples from gaussian distribution (mu=0, sigma=alpha) Targets: image Image types: 3-channel uint8 images only Credit: http://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf https://deshanadesai.github.io/notes/Fancy-PCA-with-Scikit-Image https://pixelatedbrian.github.io/2018-04-29-fancy_pca/ albumentations.augmentations.transforms.FancyPCA.__init__ ( self , alpha = 0.1 , always_apply = False , p = 0.5 ) special \u00b6 class albumentations.augmentations.transforms.Flip [view source on GitHub] \u00b6 Flip the input either horizontally, vertically or both horizontally and vertically. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 albumentations.augmentations.transforms.Flip.apply ( self , img , d = 0 , ** params ) \u00b6 d (int): code that specifies how to flip the input. 0 for vertical flipping, 1 for horizontal flipping, -1 for both vertical and horizontal flipping (which is also could be seen as rotating the input by 180 degrees). class albumentations.augmentations.transforms.FromFloat ( dtype = 'uint16' , max_value = None , always_apply = False , p = 1.0 ) [view source on GitHub] \u00b6 Take an input array where all values should lie in the range [0, 1.0], multiply them by max_value and then cast the resulted value to a type specified by dtype . If max_value is None the transform will try to infer the maximum value for the data type from the dtype argument. This is the inverse transform for :class: ~albumentations.augmentations.transforms.ToFloat . Parameters: Name Type Description max_value float maximum possible input value. Default: None. dtype string or numpy data type data type of the output. See the 'Data types' page from the NumPy docs _. Default: 'uint16'. p float probability of applying the transform. Default: 1.0. Targets: image Image types: float32 .. _'Data types' page from the NumPy docs: https://docs.scipy.org/doc/numpy/user/basics.types.html class albumentations.augmentations.transforms.GaussianBlur ( blur_limit = ( 3 , 7 ), sigma_limit = 0 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Blur the input image using using a Gaussian filter with a random kernel size. Parameters: Name Type Description blur_limit int, [int, int] maximum Gaussian kernel size for blurring the input image. Must be zero or odd and in range [0, inf). If set to 0 it will be computed from sigma as round(sigma * (3 if img.dtype == np.uint8 else 4) * 2 + 1) + 1 . If set single value blur_limit will be in range (0, blur_limit). Default: (3, 7). sigma_limit float, [float, float] Gaussian kernel standard deviation. Must be greater in range [0, inf). If set single value sigma_limit will be in range (0, sigma_limit). If set to 0 sigma will be computed as sigma = 0.3*((ksize-1)*0.5 - 1) + 0.8 . Default: 0. p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.GaussNoise ( var_limit = ( 10.0 , 50.0 ), mean = 0 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Apply gaussian noise to the input image. Parameters: Name Type Description var_limit [float, float] or float variance range for noise. If var_limit is a single float, the range will be (0, var_limit). Default: (10.0, 50.0). mean float mean of the noise. Default: 0 p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.GlassBlur ( sigma = 0.7 , max_delta = 4 , iterations = 2 , always_apply = False , mode = 'fast' , p = 0.5 ) [view source on GitHub] \u00b6 Apply glass noise to the input image. Parameters: Name Type Description sigma float standard deviation for Gaussian kernel. max_delta int max distance between pixels which are swapped. iterations int number of repeats. Should be in range [1, inf). Default: (2). mode str mode of computation: fast or exact. Default: \"fast\". p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32 Reference: | https://arxiv.org/abs/1903.12261 | https://github.com/hendrycks/robustness/blob/master/ImageNet-C/create_c/make_imagenet_c.py class albumentations.augmentations.transforms.GridDistortion ( num_steps = 5 , distort_limit = 0.3 , interpolation = 1 , border_mode = 4 , value = None , mask_value = None , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Parameters: Name Type Description num_steps int count of grid cells on each side. distort_limit float, [float, float] If distort_limit is a single float, the range will be (-distort_limit, distort_limit). Default: (-0.03, 0.03). interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. border_mode OpenCV flag flag that is used to specify the pixel extrapolation method. Should be one of: cv2.BORDER_CONSTANT, cv2.BORDER_REPLICATE, cv2.BORDER_REFLECT, cv2.BORDER_WRAP, cv2.BORDER_REFLECT_101. Default: cv2.BORDER_REFLECT_101 value int, float, list of ints, list of float padding value if border_mode is cv2.BORDER_CONSTANT. mask_value int, float, list of ints, list of float padding value if border_mode is cv2.BORDER_CONSTANT applied for masks. Targets: image, mask Image types: uint8, float32 class albumentations.augmentations.transforms.GridDropout ( ratio = 0.5 , unit_size_min = None , unit_size_max = None , holes_number_x = None , holes_number_y = None , shift_x = 0 , shift_y = 0 , random_offset = False , fill_value = 0 , mask_fill_value = None , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 GridDropout, drops out rectangular regions of an image and the corresponding mask in a grid fashion. Parameters: Name Type Description ratio float the ratio of the mask holes to the unit_size (same for horizontal and vertical directions). Must be between 0 and 1. Default: 0.5. unit_size_min int minimum size of the grid unit. Must be between 2 and the image shorter edge. If 'None', holes_number_x and holes_number_y are used to setup the grid. Default: None . unit_size_max int maximum size of the grid unit. Must be between 2 and the image shorter edge. If 'None', holes_number_x and holes_number_y are used to setup the grid. Default: None . holes_number_x int the number of grid units in x direction. Must be between 1 and image width//2. If 'None', grid unit width is set as image_width//10. Default: None . holes_number_y int the number of grid units in y direction. Must be between 1 and image height//2. If None , grid unit height is set equal to the grid unit width or image height, whatever is smaller. shift_x int offsets of the grid start in x direction from (0,0) coordinate. Clipped between 0 and grid unit_width - hole_width. Default: 0. shift_y int offsets of the grid start in y direction from (0,0) coordinate. Clipped between 0 and grid unit height - hole_height. Default: 0. random_offset boolean weather to offset the grid randomly between 0 and grid unit size - hole size If 'True', entered shift_x, shift_y are ignored and set randomly. Default: False . fill_value int value for the dropped pixels. Default = 0 mask_fill_value int value for the dropped pixels in mask. If None , tranformation is not applied to the mask. Default: None . Targets: image, mask Image types: uint8, float32 References: https://arxiv.org/abs/2001.04086 class albumentations.augmentations.transforms.HorizontalFlip [view source on GitHub] \u00b6 Flip the input horizontally around the y-axis. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 class albumentations.augmentations.transforms.HueSaturationValue ( hue_shift_limit = 20 , sat_shift_limit = 30 , val_shift_limit = 20 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Randomly change hue, saturation and value of the input image. Parameters: Name Type Description hue_shift_limit [int, int] or int range for changing hue. If hue_shift_limit is a single int, the range will be (-hue_shift_limit, hue_shift_limit). Default: (-20, 20). sat_shift_limit [int, int] or int range for changing saturation. If sat_shift_limit is a single int, the range will be (-sat_shift_limit, sat_shift_limit). Default: (-30, 30). val_shift_limit [int, int] or int range for changing value. If val_shift_limit is a single int, the range will be (-val_shift_limit, val_shift_limit). Default: (-20, 20). p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.ImageCompression ( quality_lower = 99 , quality_upper = 100 , compression_type =< ImageCompressionType . JPEG : 0 > , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Decrease Jpeg, WebP compression of an image. Parameters: Name Type Description quality_lower float lower bound on the image quality. Should be in [0, 100] range for jpeg and [1, 100] for webp. quality_upper float upper bound on the image quality. Should be in [0, 100] range for jpeg and [1, 100] for webp. compression_type ImageCompressionType should be ImageCompressionType.JPEG or ImageCompressionType.WEBP. Default: ImageCompressionType.JPEG Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.ImageCompression.ImageCompressionType \u00b6 An enumeration. class albumentations.augmentations.transforms.InvertImg [view source on GitHub] \u00b6 Invert the input image by subtracting pixel values from 255. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8 class albumentations.augmentations.transforms.ISONoise ( color_shift = ( 0.01 , 0.05 ), intensity = ( 0.1 , 0.5 ), always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Apply camera sensor noise. Parameters: Name Type Description color_shift [float, float] variance range for color hue change. Measured as a fraction of 360 degree Hue angle in HLS colorspace. intensity [float, float] Multiplicative factor that control strength of color and luminace noise. p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8 class albumentations.augmentations.transforms.JpegCompression ( quality_lower = 99 , quality_upper = 100 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Decrease Jpeg compression of an image. Parameters: Name Type Description quality_lower float lower bound on the jpeg quality. Should be in [0, 100] range quality_upper float upper bound on the jpeg quality. Should be in [0, 100] range Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.Lambda ( image = None , mask = None , keypoint = None , bbox = None , name = None , always_apply = False , p = 1.0 ) [view source on GitHub] \u00b6 A flexible transformation class for using user-defined transformation functions per targets. Function signature must include **kwargs to accept optinal arguments like interpolation method, image size, etc: Parameters: Name Type Description image callable Image transformation function. mask callable Mask transformation function. keypoint callable Keypoint transformation function. bbox callable BBox transformation function. always_apply bool Indicates whether this transformation should be always applied. p float probability of applying the transform. Default: 1.0. Targets: image, mask, bboxes, keypoints Image types: Any class albumentations.augmentations.transforms.LongestMaxSize ( max_size = 1024 , interpolation = 1 , always_apply = False , p = 1 ) [view source on GitHub] \u00b6 Rescale an image so that maximum side is equal to max_size, keeping the aspect ratio of the initial image. Parameters: Name Type Description max_size int maximum size of the image after the transformation. interpolation OpenCV flag interpolation method. Default: cv2.INTER_LINEAR. p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 class albumentations.augmentations.transforms.MaskDropout ( max_objects = 1 , image_fill_value = 0 , mask_fill_value = 0 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Image & mask augmentation that zero out mask and image regions corresponding to randomly chosen object instance from mask. Mask must be single-channel image, zero values treated as background. Image can be any number of channels. Inspired by https://www.kaggle.com/c/severstal-steel-defect-detection/discussion/114254 albumentations.augmentations.transforms.MaskDropout.__init__ ( self , max_objects = 1 , image_fill_value = 0 , mask_fill_value = 0 , always_apply = False , p = 0.5 ) special \u00b6 Parameters: Name Type Description max_objects Maximum number of labels that can be zeroed out. Can be tuple, in this case it's [min, max] image_fill_value Fill value to use when filling image. Can be 'inpaint' to apply inpaining (works only for 3-chahnel images) mask_fill_value Fill value to use when filling mask. Targets: image, mask Image types: uint8, float32 class albumentations.augmentations.transforms.MedianBlur ( blur_limit = 7 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Blur the input image using using a median filter with a random aperture linear size. Parameters: Name Type Description blur_limit int maximum aperture linear size for blurring the input image. Must be odd and in range [3, inf). Default: (3, 7). p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.MotionBlur [view source on GitHub] \u00b6 Apply motion blur to the input image using a random-sized kernel. Parameters: Name Type Description blur_limit int maximum kernel size for blurring the input image. Should be in range [3, inf). Default: (3, 7). p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.MultiplicativeNoise ( multiplier = ( 0.9 , 1.1 ), per_channel = False , elementwise = False , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Multiply image to random number or array of numbers. Parameters: Name Type Description multiplier float or tuple of floats If single float image will be multiplied to this number. If tuple of float multiplier will be in range [multiplier[0], multiplier[1]) . Default: (0.9, 1.1). per_channel bool If False , same values for all channels will be used. If True use sample values for each channels. Default False. elementwise bool If False multiply multiply all pixels in an image with a random value sampled once. If True Multiply image pixels with values that are pixelwise randomly sampled. Defaule: False. Targets: image Image types: Any class albumentations.augmentations.transforms.Normalize ( mean = ( 0.485 , 0.456 , 0.406 ), std = ( 0.229 , 0.224 , 0.225 ), max_pixel_value = 255.0 , always_apply = False , p = 1.0 ) [view source on GitHub] \u00b6 Divide pixel values by 255 = 2**8 - 1, subtract mean per channel and divide by std per channel. Parameters: Name Type Description mean float, list of float mean values std (float, list of float std values max_pixel_value float maximum possible pixel value Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.OpticalDistortion ( distort_limit = 0.05 , shift_limit = 0.05 , interpolation = 1 , border_mode = 4 , value = None , mask_value = None , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Parameters: Name Type Description distort_limit float, [float, float] If distort_limit is a single float, the range will be (-distort_limit, distort_limit). Default: (-0.05, 0.05). shift_limit float, [float, float] If shift_limit is a single float, the range will be (-shift_limit, shift_limit). Default: (-0.05, 0.05). interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. border_mode OpenCV flag flag that is used to specify the pixel extrapolation method. Should be one of: cv2.BORDER_CONSTANT, cv2.BORDER_REPLICATE, cv2.BORDER_REFLECT, cv2.BORDER_WRAP, cv2.BORDER_REFLECT_101. Default: cv2.BORDER_REFLECT_101 value int, float, list of ints, list of float padding value if border_mode is cv2.BORDER_CONSTANT. mask_value int, float, list of ints, list of float padding value if border_mode is cv2.BORDER_CONSTANT applied for masks. Targets: image, mask Image types: uint8, float32 class albumentations.augmentations.transforms.PadIfNeeded ( min_height = 1024 , min_width = 1024 , border_mode = 4 , value = None , mask_value = None , always_apply = False , p = 1.0 ) [view source on GitHub] \u00b6 Pad side of the image / max if side is less than desired number. Parameters: Name Type Description min_height int minimal result image height. min_width int minimal result image width. border_mode OpenCV flag OpenCV border mode. value int, float, list of int, lisft of float padding value if border_mode is cv2.BORDER_CONSTANT. mask_value int, float, list of int, lisft of float padding value for mask if border_mode is cv2.BORDER_CONSTANT. p float probability of applying the transform. Default: 1.0. Targets: image, mask, bbox, keypoints Image types: uint8, float32 class albumentations.augmentations.transforms.Posterize ( num_bits = 4 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Reduce the number of bits for each color channel. Parameters: Name Type Description num_bits [int, int] or int, or list of ints [r, g, b], or list of ints [[r1, r1], [g1, g2], [b1, b2]] number of high bits. If num_bits is a single value, the range will be [num_bits, num_bits]. Must be in range [0, 8]. Default: 4. p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8 class albumentations.augmentations.transforms.RandomBrightness ( limit = 0.2 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Randomly change brightness of the input image. Parameters: Name Type Description limit [float, float] or float factor range for changing brightness. If limit is a single float, the range will be (-limit, limit). Default: (-0.2, 0.2). p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.RandomBrightnessContrast ( brightness_limit = 0.2 , contrast_limit = 0.2 , brightness_by_max = True , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Randomly change brightness and contrast of the input image. Parameters: Name Type Description brightness_limit [float, float] or float factor range for changing brightness. If limit is a single float, the range will be (-limit, limit). Default: (-0.2, 0.2). contrast_limit [float, float] or float factor range for changing contrast. If limit is a single float, the range will be (-limit, limit). Default: (-0.2, 0.2). brightness_by_max Boolean If True adjust contrast by image dtype maximum, else adjust contrast by image mean. p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.RandomContrast ( limit = 0.2 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Randomly change contrast of the input image. Parameters: Name Type Description limit [float, float] or float factor range for changing contrast. If limit is a single float, the range will be (-limit, limit). Default: (-0.2, 0.2). p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.RandomCrop ( height , width , always_apply = False , p = 1.0 ) [view source on GitHub] \u00b6 Crop a random part of the input. Parameters: Name Type Description height int height of the crop. width int width of the crop. p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 class albumentations.augmentations.transforms.RandomCropNearBBox ( max_part_shift = 0.3 , always_apply = False , p = 1.0 ) [view source on GitHub] \u00b6 Crop bbox from image with random shift by x,y coordinates Parameters: Name Type Description max_part_shift float float value in (0.0, 1.0) range. Default 0.3 p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 class albumentations.augmentations.transforms.RandomFog ( fog_coef_lower = 0.3 , fog_coef_upper = 1 , alpha_coef = 0.08 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Simulates fog for the image From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description fog_coef_lower float lower limit for fog intensity coefficient. Should be in [0, 1] range. fog_coef_upper float upper limit for fog intensity coefficient. Should be in [0, 1] range. alpha_coef float transparency of the fog circles. Should be in [0, 1] range. Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.RandomGamma ( gamma_limit = ( 80 , 120 ), eps = None , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Parameters: Name Type Description gamma_limit float or [float, float] If gamma_limit is a single float value, the range will be (-gamma_limit, gamma_limit). Default: (80, 120). eps Deprecated. Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.RandomGridShuffle ( grid = ( 3 , 3 ), always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Random shuffle grid's cells on image. Parameters: Name Type Description grid [int, int] size of grid for splitting image. Targets: image, mask Image types: uint8, float32 class albumentations.augmentations.transforms.RandomRain ( slant_lower =- 10 , slant_upper = 10 , drop_length = 20 , drop_width = 1 , drop_color = ( 200 , 200 , 200 ), blur_value = 7 , brightness_coefficient = 0.7 , rain_type = None , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Adds rain effects. From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description slant_lower should be in range [-20, 20]. slant_upper should be in range [-20, 20]. drop_length should be in range [0, 100]. drop_width should be in range [1, 5]. drop_color list of (r, g, b rain lines color. blur_value int rainy view are blurry brightness_coefficient float rainy days are usually shady. Should be in range [0, 1]. rain_type One of [None, \"drizzle\", \"heavy\", \"torrestial\"] Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.RandomResizedCrop ( height , width , scale = ( 0.08 , 1.0 ), ratio = ( 0.75 , 1.3333333333333333 ), interpolation = 1 , always_apply = False , p = 1.0 ) [view source on GitHub] \u00b6 Torchvision's variant of crop a random part of the input and rescale it to some size. Parameters: Name Type Description height int height after crop and resize. width int width after crop and resize. scale [float, float] range of size of the origin size cropped ratio [float, float] range of aspect ratio of the origin aspect ratio cropped interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 class albumentations.augmentations.transforms.RandomRotate90 [view source on GitHub] \u00b6 Randomly rotate the input by 90 degrees zero or more times. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 albumentations.augmentations.transforms.RandomRotate90.apply ( self , img , factor = 0 , ** params ) \u00b6 Parameters: Name Type Description factor int number of times the input will be rotated by 90 degrees. class albumentations.augmentations.transforms.RandomScale ( scale_limit = 0.1 , interpolation = 1 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Randomly resize the input. Output image size is different from the input image size. Parameters: Name Type Description scale_limit [float, float] or float scaling factor range. If scale_limit is a single float value, the range will be (1 - scale_limit, 1 + scale_limit). Default: (0.9, 1.1). interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. p float probability of applying the transform. Default: 0.5. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 class albumentations.augmentations.transforms.RandomShadow ( shadow_roi = ( 0 , 0.5 , 1 , 1 ), num_shadows_lower = 1 , num_shadows_upper = 2 , shadow_dimension = 5 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Simulates shadows for the image From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description shadow_roi float, float, float, float region of the image where shadows will appear (x_min, y_min, x_max, y_max). All values should be in range [0, 1]. num_shadows_lower int Lower limit for the possible number of shadows. Should be in range [0, num_shadows_upper ]. num_shadows_upper int Lower limit for the possible number of shadows. Should be in range [ num_shadows_lower , inf]. shadow_dimension int number of edges in the shadow polygons Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop ( height , width , erosion_rate = 0.0 , interpolation = 1 , always_apply = False , p = 1.0 ) [view source on GitHub] \u00b6 Crop a random part of the input and rescale it to some size without loss of bboxes. Parameters: Name Type Description height int height after crop and resize. width int width after crop and resize. erosion_rate float erosion rate applied on input image height before crop. interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes Image types: uint8, float32 class albumentations.augmentations.transforms.RandomSizedCrop ( min_max_height , height , width , w2h_ratio = 1.0 , interpolation = 1 , always_apply = False , p = 1.0 ) [view source on GitHub] \u00b6 Crop a random part of the input and rescale it to some size. Parameters: Name Type Description min_max_height [int, int] crop size limits. height int height after crop and resize. width int width after crop and resize. w2h_ratio float aspect ratio of crop. interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 class albumentations.augmentations.transforms.RandomSnow ( snow_point_lower = 0.1 , snow_point_upper = 0.3 , brightness_coeff = 2.5 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Bleach out some pixel values simulating snow. From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description snow_point_lower float lower_bond of the amount of snow. Should be in [0, 1] range snow_point_upper float upper_bond of the amount of snow. Should be in [0, 1] range brightness_coeff float larger number will lead to a more snow on the image. Should be >= 0 Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.RandomSunFlare ( flare_roi = ( 0 , 0 , 1 , 0.5 ), angle_lower = 0 , angle_upper = 1 , num_flare_circles_lower = 6 , num_flare_circles_upper = 10 , src_radius = 400 , src_color = ( 255 , 255 , 255 ), always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Simulates Sun Flare for the image From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description flare_roi float, float, float, float region of the image where flare will appear (x_min, y_min, x_max, y_max). All values should be in range [0, 1]. angle_lower float should be in range [0, angle_upper ]. angle_upper float should be in range [ angle_lower , 1]. num_flare_circles_lower int lower limit for the number of flare circles. Should be in range [0, num_flare_circles_upper ]. num_flare_circles_upper int upper limit for the number of flare circles. Should be in range [ num_flare_circles_lower , inf]. src_radius int src_color int, int, int color of the flare Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.Resize ( height , width , interpolation = 1 , always_apply = False , p = 1 ) [view source on GitHub] \u00b6 Resize the input to the given height and width. Parameters: Name Type Description height int desired height of the output. width int desired width of the output. interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 class albumentations.augmentations.transforms.RGBShift ( r_shift_limit = 20 , g_shift_limit = 20 , b_shift_limit = 20 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Randomly shift values for each channel of the input RGB image. Parameters: Name Type Description r_shift_limit [int, int] or int range for changing values for the red channel. If r_shift_limit is a single int, the range will be (-r_shift_limit, r_shift_limit). Default: (-20, 20). g_shift_limit [int, int] or int range for changing values for the green channel. If g_shift_limit is a single int, the range will be (-g_shift_limit, g_shift_limit). Default: (-20, 20). b_shift_limit [int, int] or int range for changing values for the blue channel. If b_shift_limit is a single int, the range will be (-b_shift_limit, b_shift_limit). Default: (-20, 20). p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.Rotate ( limit = 90 , interpolation = 1 , border_mode = 4 , value = None , mask_value = None , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Rotate the input by an angle selected randomly from the uniform distribution. Parameters: Name Type Description limit [int, int] or int range from which a random angle is picked. If limit is a single int an angle is picked from (-limit, limit). Default: (-90, 90) interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. border_mode OpenCV flag flag that is used to specify the pixel extrapolation method. Should be one of: cv2.BORDER_CONSTANT, cv2.BORDER_REPLICATE, cv2.BORDER_REFLECT, cv2.BORDER_WRAP, cv2.BORDER_REFLECT_101. Default: cv2.BORDER_REFLECT_101 value int, float, list of ints, list of float padding value if border_mode is cv2.BORDER_CONSTANT. mask_value int, float, list of ints, list of float padding value if border_mode is cv2.BORDER_CONSTANT applied for masks. p float probability of applying the transform. Default: 0.5. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 class albumentations.augmentations.transforms.ShiftScaleRotate ( shift_limit = 0.0625 , scale_limit = 0.1 , rotate_limit = 45 , interpolation = 1 , border_mode = 4 , value = None , mask_value = None , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Randomly apply affine transforms: translate, scale and rotate the input. Parameters: Name Type Description shift_limit [float, float] or float shift factor range for both height and width. If shift_limit is a single float value, the range will be (-shift_limit, shift_limit). Absolute values for lower and upper bounds should lie in range [0, 1]. Default: (-0.0625, 0.0625). scale_limit [float, float] or float scaling factor range. If scale_limit is a single float value, the range will be (-scale_limit, scale_limit). Default: (-0.1, 0.1). rotate_limit [int, int] or int rotation range. If rotate_limit is a single int value, the range will be (-rotate_limit, rotate_limit). Default: (-45, 45). interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. border_mode OpenCV flag flag that is used to specify the pixel extrapolation method. Should be one of: cv2.BORDER_CONSTANT, cv2.BORDER_REPLICATE, cv2.BORDER_REFLECT, cv2.BORDER_WRAP, cv2.BORDER_REFLECT_101. Default: cv2.BORDER_REFLECT_101 value int, float, list of int, list of float padding value if border_mode is cv2.BORDER_CONSTANT. mask_value int, float, list of int, list of float padding value if border_mode is cv2.BORDER_CONSTANT applied for masks. p float probability of applying the transform. Default: 0.5. Targets: image, mask, keypoints Image types: uint8, float32 class albumentations.augmentations.transforms.SmallestMaxSize ( max_size = 1024 , interpolation = 1 , always_apply = False , p = 1 ) [view source on GitHub] \u00b6 Rescale an image so that minimum side is equal to max_size, keeping the aspect ratio of the initial image. Parameters: Name Type Description max_size int maximum size of smallest side of the image after the transformation. interpolation OpenCV flag interpolation method. Default: cv2.INTER_LINEAR. p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 class albumentations.augmentations.transforms.Solarize ( threshold = 128 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Invert all pixel values above a threshold. Parameters: Name Type Description threshold [int, int] or int, or [float, float] or float range for solarizing threshold. If threshold is a single value, the range will be [threshold, threshold]. Default 128. p float probability of applying the transform. Default: 0.5. Targets: image Image types: any class albumentations.augmentations.transforms.ToFloat ( max_value = None , always_apply = False , p = 1.0 ) [view source on GitHub] \u00b6 Divide pixel values by max_value to get a float32 output array where all values lie in the range [0, 1.0]. If max_value is None the transform will try to infer the maximum value by inspecting the data type of the input image. See Also: :class: ~albumentations.augmentations.transforms.FromFloat Parameters: Name Type Description max_value float maximum possible input value. Default: None. p float probability of applying the transform. Default: 1.0. Targets: image Image types: any type class albumentations.augmentations.transforms.ToGray [view source on GitHub] \u00b6 Convert the input RGB image to grayscale. If the mean pixel value for the resulting image is greater than 127, invert the resulting grayscale image. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.ToSepia ( always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Applies sepia filter to the input RGB image Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32 class albumentations.augmentations.transforms.Transpose [view source on GitHub] \u00b6 Transpose the input by swapping rows and columns. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 class albumentations.augmentations.transforms.VerticalFlip [view source on GitHub] \u00b6 Flip the input vertically around the x-axis. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"Transforms (augmentations.transforms)"},{"location":"api_reference/augmentations/transforms/#transforms-augmentationstransforms","text":"","title":"Transforms (augmentations.transforms)"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms","text":"","title":"albumentations.augmentations.transforms"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur","text":"Blur the input image using a random-sized kernel. Parameters: Name Type Description blur_limit int, [int, int] maximum kernel size for blurring the input image. Should be in range [3, inf). Default: (3, 7). p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32","title":"Blur"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop","text":"Crop the central part of the input. Parameters: Name Type Description height int height of the crop. width int width of the crop. p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 Note: It is recommended to use uint8 images as input. Otherwise the operation will require internal conversion float32 -> uint8 -> float32 that causes worse performance.","title":"CenterCrop"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout","text":"Randomly Drop Channels in the input Image. Parameters: Name Type Description channel_drop_range [int, int] range from which we choose the number of channels to drop. fill_value int, float pixel value for the dropped channel. p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, uint16, unit32, float32","title":"ChannelDropout"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle","text":"Randomly rearrange channels of the input RGB image. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32","title":"ChannelShuffle"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE","text":"Apply Contrast Limited Adaptive Histogram Equalization to the input image. Parameters: Name Type Description clip_limit float or [float, float] upper threshold value for contrast limiting. If clip_limit is a single float value, the range will be (1, clip_limit). Default: (1, 4). tile_grid_size [int, int] size of grid for histogram equalization. Default: (8, 8). p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8","title":"CLAHE"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout","text":"CoarseDropout of the rectangular regions in the image. Parameters: Name Type Description max_holes int Maximum number of regions to zero out. max_height int Maximum height of the hole. max_width int Maximum width of the hole. min_holes int Minimum number of regions to zero out. If None , min_holes is be set to max_holes . Default: None . min_height int Minimum height of the hole. Default: None. If None , min_height is set to max_height . Default: None . min_width int Minimum width of the hole. If None , min_height is set to max_width . Default: None . fill_value int, float, lisf of int, list of float value for dropped pixels. Targets: image Image types: uint8, float32 Reference: | https://arxiv.org/abs/1708.04552 | https://github.com/uoguelph-mlrg/Cutout/blob/master/util/cutout.py | https://github.com/aleju/imgaug/blob/master/imgaug/augmenters/arithmetic.py","title":"CoarseDropout"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop","text":"Crop region from image. Parameters: Name Type Description x_min int Minimum upper left x coordinate. y_min int Minimum upper left y coordinate. x_max int Maximum lower right x coordinate. y_max int Maximum lower right y coordinate. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"Crop"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists","text":"Crop area with mask if mask is non-empty, else make random crop. Parameters: Name Type Description height int vertical size of crop in pixels width int horizontal size of crop in pixels ignore_values list of int values to ignore in mask, 0 values are always ignored (e.g. if background value is 5 set ignore_values=[5] to ignore) ignore_channels list of int channels to ignore in mask (e.g. if background is a first channel set ignore_channels=[0] to ignore) p float probability of applying the transform. Default: 1.0. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"CropNonEmptyMaskIfExists"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout","text":"CoarseDropout of the square regions in the image. Parameters: Name Type Description num_holes int number of regions to zero out max_h_size int maximum height of the hole max_w_size int maximum width of the hole fill_value int, float, lisf of int, list of float value for dropped pixels. Targets: image Image types: uint8, float32 Reference: | https://arxiv.org/abs/1708.04552 | https://github.com/uoguelph-mlrg/Cutout/blob/master/util/cutout.py | https://github.com/aleju/imgaug/blob/master/imgaug/augmenters/arithmetic.py","title":"Cutout"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale","text":"Decreases image quality by downscaling and upscaling back. Parameters: Name Type Description scale_min float lower bound on the image scale. Should be < 1. scale_max float lower bound on the image scale. Should be . interpolation cv2 interpolation method. cv2.INTER_NEAREST by default Targets: image Image types: uint8, float32","title":"Downscale"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform","text":"Elastic deformation of images as described in [Simard2003]_ (with modifications). Based on https://gist.github.com/erniejunior/601cdf56d2b424757de5 .. [Simard2003] Simard, Steinkraus and Platt, \"Best Practices for Convolutional Neural Networks applied to Visual Document Analysis\", in Proc. of the International Conference on Document Analysis and Recognition, 2003. Parameters: Name Type Description alpha float sigma float Gaussian filter parameter. alpha_affine float The range will be (-alpha_affine, alpha_affine) interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. border_mode OpenCV flag flag that is used to specify the pixel extrapolation method. Should be one of: cv2.BORDER_CONSTANT, cv2.BORDER_REPLICATE, cv2.BORDER_REFLECT, cv2.BORDER_WRAP, cv2.BORDER_REFLECT_101. Default: cv2.BORDER_REFLECT_101 value int, float, list of ints, list of float padding value if border_mode is cv2.BORDER_CONSTANT. mask_value int, float, list of ints, list of float padding value if border_mode is cv2.BORDER_CONSTANT applied for masks. approximate boolean Whether to smooth displacement map with fixed kernel size. Enabling this option gives ~2X speedup on large images. Targets: image, mask Image types: uint8, float32","title":"ElasticTransform"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize","text":"Equalize the image histogram. Parameters: Name Type Description mode str {'cv', 'pil'}. Use OpenCV or Pillow equalization method. by_channels bool If True, use equalization by channels separately, else convert image to YCbCr representation and use equalization by Y channel. mask np.ndarray, callable If given, only the pixels selected by the mask are included in the analysis. Maybe 1 channel or 3 channel array or callable. Function signature must include image argument. mask_params list of str Params for mask function. Targets: image Image types: uint8","title":"Equalize"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA","text":"Augment RGB image using FancyPCA from Krizhevsky's paper \"ImageNet Classification with Deep Convolutional Neural Networks\" Parameters: Name Type Description alpha float how much to perturb/scale the eigen vecs and vals. scale is samples from gaussian distribution (mu=0, sigma=alpha) Targets: image Image types: 3-channel uint8 images only Credit: http://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf https://deshanadesai.github.io/notes/Fancy-PCA-with-Scikit-Image https://pixelatedbrian.github.io/2018-04-29-fancy_pca/","title":"FancyPCA"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA.__init__","text":"","title":"__init__()"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip","text":"Flip the input either horizontally, vertically or both horizontally and vertically. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"Flip"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply","text":"d (int): code that specifies how to flip the input. 0 for vertical flipping, 1 for horizontal flipping, -1 for both vertical and horizontal flipping (which is also could be seen as rotating the input by 180 degrees).","title":"apply()"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat","text":"Take an input array where all values should lie in the range [0, 1.0], multiply them by max_value and then cast the resulted value to a type specified by dtype . If max_value is None the transform will try to infer the maximum value for the data type from the dtype argument. This is the inverse transform for :class: ~albumentations.augmentations.transforms.ToFloat . Parameters: Name Type Description max_value float maximum possible input value. Default: None. dtype string or numpy data type data type of the output. See the 'Data types' page from the NumPy docs _. Default: 'uint16'. p float probability of applying the transform. Default: 1.0. Targets: image Image types: float32 .. _'Data types' page from the NumPy docs: https://docs.scipy.org/doc/numpy/user/basics.types.html","title":"FromFloat"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur","text":"Blur the input image using using a Gaussian filter with a random kernel size. Parameters: Name Type Description blur_limit int, [int, int] maximum Gaussian kernel size for blurring the input image. Must be zero or odd and in range [0, inf). If set to 0 it will be computed from sigma as round(sigma * (3 if img.dtype == np.uint8 else 4) * 2 + 1) + 1 . If set single value blur_limit will be in range (0, blur_limit). Default: (3, 7). sigma_limit float, [float, float] Gaussian kernel standard deviation. Must be greater in range [0, inf). If set single value sigma_limit will be in range (0, sigma_limit). If set to 0 sigma will be computed as sigma = 0.3*((ksize-1)*0.5 - 1) + 0.8 . Default: 0. p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32","title":"GaussianBlur"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise","text":"Apply gaussian noise to the input image. Parameters: Name Type Description var_limit [float, float] or float variance range for noise. If var_limit is a single float, the range will be (0, var_limit). Default: (10.0, 50.0). mean float mean of the noise. Default: 0 p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32","title":"GaussNoise"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur","text":"Apply glass noise to the input image. Parameters: Name Type Description sigma float standard deviation for Gaussian kernel. max_delta int max distance between pixels which are swapped. iterations int number of repeats. Should be in range [1, inf). Default: (2). mode str mode of computation: fast or exact. Default: \"fast\". p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32 Reference: | https://arxiv.org/abs/1903.12261 | https://github.com/hendrycks/robustness/blob/master/ImageNet-C/create_c/make_imagenet_c.py","title":"GlassBlur"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion","text":"Parameters: Name Type Description num_steps int count of grid cells on each side. distort_limit float, [float, float] If distort_limit is a single float, the range will be (-distort_limit, distort_limit). Default: (-0.03, 0.03). interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. border_mode OpenCV flag flag that is used to specify the pixel extrapolation method. Should be one of: cv2.BORDER_CONSTANT, cv2.BORDER_REPLICATE, cv2.BORDER_REFLECT, cv2.BORDER_WRAP, cv2.BORDER_REFLECT_101. Default: cv2.BORDER_REFLECT_101 value int, float, list of ints, list of float padding value if border_mode is cv2.BORDER_CONSTANT. mask_value int, float, list of ints, list of float padding value if border_mode is cv2.BORDER_CONSTANT applied for masks. Targets: image, mask Image types: uint8, float32","title":"GridDistortion"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout","text":"GridDropout, drops out rectangular regions of an image and the corresponding mask in a grid fashion. Parameters: Name Type Description ratio float the ratio of the mask holes to the unit_size (same for horizontal and vertical directions). Must be between 0 and 1. Default: 0.5. unit_size_min int minimum size of the grid unit. Must be between 2 and the image shorter edge. If 'None', holes_number_x and holes_number_y are used to setup the grid. Default: None . unit_size_max int maximum size of the grid unit. Must be between 2 and the image shorter edge. If 'None', holes_number_x and holes_number_y are used to setup the grid. Default: None . holes_number_x int the number of grid units in x direction. Must be between 1 and image width//2. If 'None', grid unit width is set as image_width//10. Default: None . holes_number_y int the number of grid units in y direction. Must be between 1 and image height//2. If None , grid unit height is set equal to the grid unit width or image height, whatever is smaller. shift_x int offsets of the grid start in x direction from (0,0) coordinate. Clipped between 0 and grid unit_width - hole_width. Default: 0. shift_y int offsets of the grid start in y direction from (0,0) coordinate. Clipped between 0 and grid unit height - hole_height. Default: 0. random_offset boolean weather to offset the grid randomly between 0 and grid unit size - hole size If 'True', entered shift_x, shift_y are ignored and set randomly. Default: False . fill_value int value for the dropped pixels. Default = 0 mask_fill_value int value for the dropped pixels in mask. If None , tranformation is not applied to the mask. Default: None . Targets: image, mask Image types: uint8, float32 References: https://arxiv.org/abs/2001.04086","title":"GridDropout"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip","text":"Flip the input horizontally around the y-axis. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"HorizontalFlip"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue","text":"Randomly change hue, saturation and value of the input image. Parameters: Name Type Description hue_shift_limit [int, int] or int range for changing hue. If hue_shift_limit is a single int, the range will be (-hue_shift_limit, hue_shift_limit). Default: (-20, 20). sat_shift_limit [int, int] or int range for changing saturation. If sat_shift_limit is a single int, the range will be (-sat_shift_limit, sat_shift_limit). Default: (-30, 30). val_shift_limit [int, int] or int range for changing value. If val_shift_limit is a single int, the range will be (-val_shift_limit, val_shift_limit). Default: (-20, 20). p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32","title":"HueSaturationValue"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression","text":"Decrease Jpeg, WebP compression of an image. Parameters: Name Type Description quality_lower float lower bound on the image quality. Should be in [0, 100] range for jpeg and [1, 100] for webp. quality_upper float upper bound on the image quality. Should be in [0, 100] range for jpeg and [1, 100] for webp. compression_type ImageCompressionType should be ImageCompressionType.JPEG or ImageCompressionType.WEBP. Default: ImageCompressionType.JPEG Targets: image Image types: uint8, float32","title":"ImageCompression"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression.ImageCompressionType","text":"An enumeration.","title":"ImageCompressionType"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg","text":"Invert the input image by subtracting pixel values from 255. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8","title":"InvertImg"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise","text":"Apply camera sensor noise. Parameters: Name Type Description color_shift [float, float] variance range for color hue change. Measured as a fraction of 360 degree Hue angle in HLS colorspace. intensity [float, float] Multiplicative factor that control strength of color and luminace noise. p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8","title":"ISONoise"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression","text":"Decrease Jpeg compression of an image. Parameters: Name Type Description quality_lower float lower bound on the jpeg quality. Should be in [0, 100] range quality_upper float upper bound on the jpeg quality. Should be in [0, 100] range Targets: image Image types: uint8, float32","title":"JpegCompression"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda","text":"A flexible transformation class for using user-defined transformation functions per targets. Function signature must include **kwargs to accept optinal arguments like interpolation method, image size, etc: Parameters: Name Type Description image callable Image transformation function. mask callable Mask transformation function. keypoint callable Keypoint transformation function. bbox callable BBox transformation function. always_apply bool Indicates whether this transformation should be always applied. p float probability of applying the transform. Default: 1.0. Targets: image, mask, bboxes, keypoints Image types: Any","title":"Lambda"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize","text":"Rescale an image so that maximum side is equal to max_size, keeping the aspect ratio of the initial image. Parameters: Name Type Description max_size int maximum size of the image after the transformation. interpolation OpenCV flag interpolation method. Default: cv2.INTER_LINEAR. p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"LongestMaxSize"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout","text":"Image & mask augmentation that zero out mask and image regions corresponding to randomly chosen object instance from mask. Mask must be single-channel image, zero values treated as background. Image can be any number of channels. Inspired by https://www.kaggle.com/c/severstal-steel-defect-detection/discussion/114254","title":"MaskDropout"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__","text":"Parameters: Name Type Description max_objects Maximum number of labels that can be zeroed out. Can be tuple, in this case it's [min, max] image_fill_value Fill value to use when filling image. Can be 'inpaint' to apply inpaining (works only for 3-chahnel images) mask_fill_value Fill value to use when filling mask. Targets: image, mask Image types: uint8, float32","title":"__init__()"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur","text":"Blur the input image using using a median filter with a random aperture linear size. Parameters: Name Type Description blur_limit int maximum aperture linear size for blurring the input image. Must be odd and in range [3, inf). Default: (3, 7). p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32","title":"MedianBlur"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur","text":"Apply motion blur to the input image using a random-sized kernel. Parameters: Name Type Description blur_limit int maximum kernel size for blurring the input image. Should be in range [3, inf). Default: (3, 7). p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32","title":"MotionBlur"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise","text":"Multiply image to random number or array of numbers. Parameters: Name Type Description multiplier float or tuple of floats If single float image will be multiplied to this number. If tuple of float multiplier will be in range [multiplier[0], multiplier[1]) . Default: (0.9, 1.1). per_channel bool If False , same values for all channels will be used. If True use sample values for each channels. Default False. elementwise bool If False multiply multiply all pixels in an image with a random value sampled once. If True Multiply image pixels with values that are pixelwise randomly sampled. Defaule: False. Targets: image Image types: Any","title":"MultiplicativeNoise"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize","text":"Divide pixel values by 255 = 2**8 - 1, subtract mean per channel and divide by std per channel. Parameters: Name Type Description mean float, list of float mean values std (float, list of float std values max_pixel_value float maximum possible pixel value Targets: image Image types: uint8, float32","title":"Normalize"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion","text":"Parameters: Name Type Description distort_limit float, [float, float] If distort_limit is a single float, the range will be (-distort_limit, distort_limit). Default: (-0.05, 0.05). shift_limit float, [float, float] If shift_limit is a single float, the range will be (-shift_limit, shift_limit). Default: (-0.05, 0.05). interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. border_mode OpenCV flag flag that is used to specify the pixel extrapolation method. Should be one of: cv2.BORDER_CONSTANT, cv2.BORDER_REPLICATE, cv2.BORDER_REFLECT, cv2.BORDER_WRAP, cv2.BORDER_REFLECT_101. Default: cv2.BORDER_REFLECT_101 value int, float, list of ints, list of float padding value if border_mode is cv2.BORDER_CONSTANT. mask_value int, float, list of ints, list of float padding value if border_mode is cv2.BORDER_CONSTANT applied for masks. Targets: image, mask Image types: uint8, float32","title":"OpticalDistortion"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded","text":"Pad side of the image / max if side is less than desired number. Parameters: Name Type Description min_height int minimal result image height. min_width int minimal result image width. border_mode OpenCV flag OpenCV border mode. value int, float, list of int, lisft of float padding value if border_mode is cv2.BORDER_CONSTANT. mask_value int, float, list of int, lisft of float padding value for mask if border_mode is cv2.BORDER_CONSTANT. p float probability of applying the transform. Default: 1.0. Targets: image, mask, bbox, keypoints Image types: uint8, float32","title":"PadIfNeeded"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize","text":"Reduce the number of bits for each color channel. Parameters: Name Type Description num_bits [int, int] or int, or list of ints [r, g, b], or list of ints [[r1, r1], [g1, g2], [b1, b2]] number of high bits. If num_bits is a single value, the range will be [num_bits, num_bits]. Must be in range [0, 8]. Default: 4. p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8","title":"Posterize"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness","text":"Randomly change brightness of the input image. Parameters: Name Type Description limit [float, float] or float factor range for changing brightness. If limit is a single float, the range will be (-limit, limit). Default: (-0.2, 0.2). p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32","title":"RandomBrightness"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast","text":"Randomly change brightness and contrast of the input image. Parameters: Name Type Description brightness_limit [float, float] or float factor range for changing brightness. If limit is a single float, the range will be (-limit, limit). Default: (-0.2, 0.2). contrast_limit [float, float] or float factor range for changing contrast. If limit is a single float, the range will be (-limit, limit). Default: (-0.2, 0.2). brightness_by_max Boolean If True adjust contrast by image dtype maximum, else adjust contrast by image mean. p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32","title":"RandomBrightnessContrast"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast","text":"Randomly change contrast of the input image. Parameters: Name Type Description limit [float, float] or float factor range for changing contrast. If limit is a single float, the range will be (-limit, limit). Default: (-0.2, 0.2). p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32","title":"RandomContrast"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop","text":"Crop a random part of the input. Parameters: Name Type Description height int height of the crop. width int width of the crop. p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"RandomCrop"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox","text":"Crop bbox from image with random shift by x,y coordinates Parameters: Name Type Description max_part_shift float float value in (0.0, 1.0) range. Default 0.3 p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"RandomCropNearBBox"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog","text":"Simulates fog for the image From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description fog_coef_lower float lower limit for fog intensity coefficient. Should be in [0, 1] range. fog_coef_upper float upper limit for fog intensity coefficient. Should be in [0, 1] range. alpha_coef float transparency of the fog circles. Should be in [0, 1] range. Targets: image Image types: uint8, float32","title":"RandomFog"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma","text":"Parameters: Name Type Description gamma_limit float or [float, float] If gamma_limit is a single float value, the range will be (-gamma_limit, gamma_limit). Default: (80, 120). eps Deprecated. Targets: image Image types: uint8, float32","title":"RandomGamma"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle","text":"Random shuffle grid's cells on image. Parameters: Name Type Description grid [int, int] size of grid for splitting image. Targets: image, mask Image types: uint8, float32","title":"RandomGridShuffle"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain","text":"Adds rain effects. From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description slant_lower should be in range [-20, 20]. slant_upper should be in range [-20, 20]. drop_length should be in range [0, 100]. drop_width should be in range [1, 5]. drop_color list of (r, g, b rain lines color. blur_value int rainy view are blurry brightness_coefficient float rainy days are usually shady. Should be in range [0, 1]. rain_type One of [None, \"drizzle\", \"heavy\", \"torrestial\"] Targets: image Image types: uint8, float32","title":"RandomRain"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop","text":"Torchvision's variant of crop a random part of the input and rescale it to some size. Parameters: Name Type Description height int height after crop and resize. width int width after crop and resize. scale [float, float] range of size of the origin size cropped ratio [float, float] range of aspect ratio of the origin aspect ratio cropped interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"RandomResizedCrop"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90","text":"Randomly rotate the input by 90 degrees zero or more times. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"RandomRotate90"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90.apply","text":"Parameters: Name Type Description factor int number of times the input will be rotated by 90 degrees.","title":"apply()"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale","text":"Randomly resize the input. Output image size is different from the input image size. Parameters: Name Type Description scale_limit [float, float] or float scaling factor range. If scale_limit is a single float value, the range will be (1 - scale_limit, 1 + scale_limit). Default: (0.9, 1.1). interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. p float probability of applying the transform. Default: 0.5. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"RandomScale"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow","text":"Simulates shadows for the image From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description shadow_roi float, float, float, float region of the image where shadows will appear (x_min, y_min, x_max, y_max). All values should be in range [0, 1]. num_shadows_lower int Lower limit for the possible number of shadows. Should be in range [0, num_shadows_upper ]. num_shadows_upper int Lower limit for the possible number of shadows. Should be in range [ num_shadows_lower , inf]. shadow_dimension int number of edges in the shadow polygons Targets: image Image types: uint8, float32","title":"RandomShadow"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop","text":"Crop a random part of the input and rescale it to some size without loss of bboxes. Parameters: Name Type Description height int height after crop and resize. width int width after crop and resize. erosion_rate float erosion rate applied on input image height before crop. interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes Image types: uint8, float32","title":"RandomSizedBBoxSafeCrop"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop","text":"Crop a random part of the input and rescale it to some size. Parameters: Name Type Description min_max_height [int, int] crop size limits. height int height after crop and resize. width int width after crop and resize. w2h_ratio float aspect ratio of crop. interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"RandomSizedCrop"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow","text":"Bleach out some pixel values simulating snow. From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description snow_point_lower float lower_bond of the amount of snow. Should be in [0, 1] range snow_point_upper float upper_bond of the amount of snow. Should be in [0, 1] range brightness_coeff float larger number will lead to a more snow on the image. Should be >= 0 Targets: image Image types: uint8, float32","title":"RandomSnow"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare","text":"Simulates Sun Flare for the image From https://github.com/UjjwalSaxena/Automold--Road-Augmentation-Library Parameters: Name Type Description flare_roi float, float, float, float region of the image where flare will appear (x_min, y_min, x_max, y_max). All values should be in range [0, 1]. angle_lower float should be in range [0, angle_upper ]. angle_upper float should be in range [ angle_lower , 1]. num_flare_circles_lower int lower limit for the number of flare circles. Should be in range [0, num_flare_circles_upper ]. num_flare_circles_upper int upper limit for the number of flare circles. Should be in range [ num_flare_circles_lower , inf]. src_radius int src_color int, int, int color of the flare Targets: image Image types: uint8, float32","title":"RandomSunFlare"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize","text":"Resize the input to the given height and width. Parameters: Name Type Description height int desired height of the output. width int desired width of the output. interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"Resize"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift","text":"Randomly shift values for each channel of the input RGB image. Parameters: Name Type Description r_shift_limit [int, int] or int range for changing values for the red channel. If r_shift_limit is a single int, the range will be (-r_shift_limit, r_shift_limit). Default: (-20, 20). g_shift_limit [int, int] or int range for changing values for the green channel. If g_shift_limit is a single int, the range will be (-g_shift_limit, g_shift_limit). Default: (-20, 20). b_shift_limit [int, int] or int range for changing values for the blue channel. If b_shift_limit is a single int, the range will be (-b_shift_limit, b_shift_limit). Default: (-20, 20). p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32","title":"RGBShift"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate","text":"Rotate the input by an angle selected randomly from the uniform distribution. Parameters: Name Type Description limit [int, int] or int range from which a random angle is picked. If limit is a single int an angle is picked from (-limit, limit). Default: (-90, 90) interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. border_mode OpenCV flag flag that is used to specify the pixel extrapolation method. Should be one of: cv2.BORDER_CONSTANT, cv2.BORDER_REPLICATE, cv2.BORDER_REFLECT, cv2.BORDER_WRAP, cv2.BORDER_REFLECT_101. Default: cv2.BORDER_REFLECT_101 value int, float, list of ints, list of float padding value if border_mode is cv2.BORDER_CONSTANT. mask_value int, float, list of ints, list of float padding value if border_mode is cv2.BORDER_CONSTANT applied for masks. p float probability of applying the transform. Default: 0.5. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"Rotate"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate","text":"Randomly apply affine transforms: translate, scale and rotate the input. Parameters: Name Type Description shift_limit [float, float] or float shift factor range for both height and width. If shift_limit is a single float value, the range will be (-shift_limit, shift_limit). Absolute values for lower and upper bounds should lie in range [0, 1]. Default: (-0.0625, 0.0625). scale_limit [float, float] or float scaling factor range. If scale_limit is a single float value, the range will be (-scale_limit, scale_limit). Default: (-0.1, 0.1). rotate_limit [int, int] or int rotation range. If rotate_limit is a single int value, the range will be (-rotate_limit, rotate_limit). Default: (-45, 45). interpolation OpenCV flag flag that is used to specify the interpolation algorithm. Should be one of: cv2.INTER_NEAREST, cv2.INTER_LINEAR, cv2.INTER_CUBIC, cv2.INTER_AREA, cv2.INTER_LANCZOS4. Default: cv2.INTER_LINEAR. border_mode OpenCV flag flag that is used to specify the pixel extrapolation method. Should be one of: cv2.BORDER_CONSTANT, cv2.BORDER_REPLICATE, cv2.BORDER_REFLECT, cv2.BORDER_WRAP, cv2.BORDER_REFLECT_101. Default: cv2.BORDER_REFLECT_101 value int, float, list of int, list of float padding value if border_mode is cv2.BORDER_CONSTANT. mask_value int, float, list of int, list of float padding value if border_mode is cv2.BORDER_CONSTANT applied for masks. p float probability of applying the transform. Default: 0.5. Targets: image, mask, keypoints Image types: uint8, float32","title":"ShiftScaleRotate"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize","text":"Rescale an image so that minimum side is equal to max_size, keeping the aspect ratio of the initial image. Parameters: Name Type Description max_size int maximum size of smallest side of the image after the transformation. interpolation OpenCV flag interpolation method. Default: cv2.INTER_LINEAR. p float probability of applying the transform. Default: 1. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"SmallestMaxSize"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize","text":"Invert all pixel values above a threshold. Parameters: Name Type Description threshold [int, int] or int, or [float, float] or float range for solarizing threshold. If threshold is a single value, the range will be [threshold, threshold]. Default 128. p float probability of applying the transform. Default: 0.5. Targets: image Image types: any","title":"Solarize"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat","text":"Divide pixel values by max_value to get a float32 output array where all values lie in the range [0, 1.0]. If max_value is None the transform will try to infer the maximum value by inspecting the data type of the input image. See Also: :class: ~albumentations.augmentations.transforms.FromFloat Parameters: Name Type Description max_value float maximum possible input value. Default: None. p float probability of applying the transform. Default: 1.0. Targets: image Image types: any type","title":"ToFloat"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray","text":"Convert the input RGB image to grayscale. If the mean pixel value for the resulting image is greater than 127, invert the resulting grayscale image. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32","title":"ToGray"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia","text":"Applies sepia filter to the input RGB image Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image Image types: uint8, float32","title":"ToSepia"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose","text":"Transpose the input by swapping rows and columns. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"Transpose"},{"location":"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip","text":"Flip the input vertically around the x-axis. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"VerticalFlip"},{"location":"api_reference/core/","text":"Composition API (albumentations.core.composition) Serialization API (albumentations.core.serialization) Transforms Interface (albumentations.core.transforms_interface)","title":"Index"},{"location":"api_reference/core/composition/","text":"Composition API (core.composition) \u00b6 \u00b6 class albumentations.core.composition.BboxParams ( format , label_fields = None , min_area = 0.0 , min_visibility = 0.0 , check_each_transform = True ) [view source on GitHub] \u00b6 Parameters of bounding boxes Parameters: Name Type Description format str format of bounding boxes. Should be 'coco', 'pascal_voc', 'albumentations' or 'yolo'. The coco format [x_min, y_min, width, height] , e.g. [97, 12, 150, 200]. The pascal_voc format [x_min, y_min, x_max, y_max] , e.g. [97, 12, 247, 212]. The albumentations format is like pascal_voc , but normalized, in other words: [x_min, y_min, x_max, y_max] , e.g. [0.2, 0.3, 0.4, 0.5]. The yolo format [x, y, width, height] , e.g. [0.1, 0.2, 0.3, 0.4]; x , y - normalized bbox center; width , height` - normalized bbox width and height. label_fields list list of fields that are joined with boxes, e.g labels. Should be same type as boxes. min_area float minimum area of a bounding box. All bounding boxes whose visible area in pixels is less than this value will be removed. Default: 0.0. min_visibility float minimum fraction of area for a bounding box to remain this box in list. Default: 0.0. check_each_transform bool if True , then bboxes will be checked after each dual transform. Default: True class albumentations.core.composition.Compose ( transforms , bbox_params = None , keypoint_params = None , additional_targets = None , p = 1.0 ) [view source on GitHub] \u00b6 Compose transforms and handle all transformations regrading bounding boxes Parameters: Name Type Description transforms list list of transformations to compose. bbox_params BboxParams Parameters for bounding boxes transforms keypoint_params KeypointParams Parameters for keypoints transforms additional_targets dict Dict with keys - new target name, values - old target name. ex: {'image2': 'image'} p float probability of applying all list of transforms. Default: 1.0. class albumentations.core.composition.KeypointParams ( format , label_fields = None , remove_invisible = True , angle_in_degrees = True , check_each_transform = True ) [view source on GitHub] \u00b6 Parameters of keypoints Parameters: Name Type Description format str format of keypoints. Should be 'xy', 'yx', 'xya', 'xys', 'xyas', 'xysa'. x - X coordinate, y - Y coordinate s - Keypoint scale a - Keypoint orientation in radians or degrees (depending on KeypointParams.angle_in_degrees) label_fields list list of fields that are joined with keypoints, e.g labels. Should be same type as keypoints. remove_invisible bool to remove invisible points after transform or not angle_in_degrees bool angle in degrees or radians in 'xya', 'xyas', 'xysa' keypoints check_each_transform bool if True , then keypoints will be checked after each dual transform. Default: True class albumentations.core.composition.OneOf ( transforms , p = 0.5 ) [view source on GitHub] \u00b6 Select one of transforms to apply. Selected transform will be called with force_apply=True . Transforms probabilities will be normalized to one 1, so in this case transforms probabilities works as weights. Parameters: Name Type Description transforms list list of transformations to compose. p float probability of applying selected transform. Default: 0.5. class albumentations.core.composition.OneOrOther ( first = None , second = None , transforms = None , p = 0.5 ) [view source on GitHub] \u00b6 Select one or another transform to apply. Selected transform will be called with force_apply=True . class albumentations.core.composition.PerChannel ( transforms , channels = None , p = 0.5 ) [view source on GitHub] \u00b6 Apply transformations per-channel Parameters: Name Type Description transforms list list of transformations to compose. channels list channels to apply the transform to. Pass None to apply to all. Default: None (apply to all) p float probability of applying the transform. Default: 0.5.","title":"Composition API (core.composition)"},{"location":"api_reference/core/composition/#composition-api-corecomposition","text":"","title":"Composition API (core.composition)"},{"location":"api_reference/core/composition/#albumentations.core.composition","text":"","title":"albumentations.core.composition"},{"location":"api_reference/core/composition/#albumentations.core.composition.BboxParams","text":"Parameters of bounding boxes Parameters: Name Type Description format str format of bounding boxes. Should be 'coco', 'pascal_voc', 'albumentations' or 'yolo'. The coco format [x_min, y_min, width, height] , e.g. [97, 12, 150, 200]. The pascal_voc format [x_min, y_min, x_max, y_max] , e.g. [97, 12, 247, 212]. The albumentations format is like pascal_voc , but normalized, in other words: [x_min, y_min, x_max, y_max] , e.g. [0.2, 0.3, 0.4, 0.5]. The yolo format [x, y, width, height] , e.g. [0.1, 0.2, 0.3, 0.4]; x , y - normalized bbox center; width , height` - normalized bbox width and height. label_fields list list of fields that are joined with boxes, e.g labels. Should be same type as boxes. min_area float minimum area of a bounding box. All bounding boxes whose visible area in pixels is less than this value will be removed. Default: 0.0. min_visibility float minimum fraction of area for a bounding box to remain this box in list. Default: 0.0. check_each_transform bool if True , then bboxes will be checked after each dual transform. Default: True","title":"BboxParams"},{"location":"api_reference/core/composition/#albumentations.core.composition.Compose","text":"Compose transforms and handle all transformations regrading bounding boxes Parameters: Name Type Description transforms list list of transformations to compose. bbox_params BboxParams Parameters for bounding boxes transforms keypoint_params KeypointParams Parameters for keypoints transforms additional_targets dict Dict with keys - new target name, values - old target name. ex: {'image2': 'image'} p float probability of applying all list of transforms. Default: 1.0.","title":"Compose"},{"location":"api_reference/core/composition/#albumentations.core.composition.KeypointParams","text":"Parameters of keypoints Parameters: Name Type Description format str format of keypoints. Should be 'xy', 'yx', 'xya', 'xys', 'xyas', 'xysa'. x - X coordinate, y - Y coordinate s - Keypoint scale a - Keypoint orientation in radians or degrees (depending on KeypointParams.angle_in_degrees) label_fields list list of fields that are joined with keypoints, e.g labels. Should be same type as keypoints. remove_invisible bool to remove invisible points after transform or not angle_in_degrees bool angle in degrees or radians in 'xya', 'xyas', 'xysa' keypoints check_each_transform bool if True , then keypoints will be checked after each dual transform. Default: True","title":"KeypointParams"},{"location":"api_reference/core/composition/#albumentations.core.composition.OneOf","text":"Select one of transforms to apply. Selected transform will be called with force_apply=True . Transforms probabilities will be normalized to one 1, so in this case transforms probabilities works as weights. Parameters: Name Type Description transforms list list of transformations to compose. p float probability of applying selected transform. Default: 0.5.","title":"OneOf"},{"location":"api_reference/core/composition/#albumentations.core.composition.OneOrOther","text":"Select one or another transform to apply. Selected transform will be called with force_apply=True .","title":"OneOrOther"},{"location":"api_reference/core/composition/#albumentations.core.composition.PerChannel","text":"Apply transformations per-channel Parameters: Name Type Description transforms list list of transformations to compose. channels list channels to apply the transform to. Pass None to apply to all. Default: None (apply to all) p float probability of applying the transform. Default: 0.5.","title":"PerChannel"},{"location":"api_reference/core/serialization/","text":"Serialization API (core.serialization) \u00b6 \u00b6 class albumentations.core.serialization.SerializableMeta [view source on GitHub] \u00b6 A metaclass that is used to register classes in SERIALIZABLE_REGISTRY so they can be found later while deserializing transformation pipeline using classes full names. albumentations.core.serialization.SerializableMeta.__new__ ( cls , name , bases , class_dict ) special staticmethod \u00b6 Create and return a new object. See help(type) for accurate signature. def albumentations.core.serialization.from_dict ( transform_dict , lambda_transforms = None ) [view source on GitHub] \u00b6 Parameters: Name Type Description transform dict A dictionary with serialized transform pipeline. lambda_transforms dict A dictionary that contains lambda transforms, that is instances of the Lambda class. This dictionary is required when you are restoring a pipeline that contains lambda transforms. Keys in that dictionary should be named same as name arguments in respective lambda transforms from a serialized pipeline. def albumentations.core.serialization.load ( filepath , data_format = 'json' , lambda_transforms = None ) [view source on GitHub] \u00b6 Load a serialized pipeline from a json or yaml file and construct a transform pipeline. Parameters: Name Type Description transform obj Transform to serialize. filepath str Filepath to read from. data_format str Serialization format. Should be either json or 'yaml'. lambda_transforms dict A dictionary that contains lambda transforms, that is instances of the Lambda class. This dictionary is required when you are restoring a pipeline that contains lambda transforms. Keys in that dictionary should be named same as name arguments in respective lambda transforms from a serialized pipeline. def albumentations.core.serialization.save ( transform , filepath , data_format = 'json' , on_not_implemented_error = 'raise' ) [view source on GitHub] \u00b6 Take a transform pipeline, serialize it and save a serialized version to a file using either json or yaml format. Parameters: Name Type Description transform obj Transform to serialize. filepath str Filepath to write to. data_format str Serialization format. Should be either json or 'yaml'. on_not_implemented_error str Parameter that describes what to do if a transform doesn't implement the to_dict method. If 'raise' then NotImplementedError is raised, if warn then the exception will be ignored and no transform arguments will be saved. def albumentations.core.serialization.to_dict ( transform , on_not_implemented_error = 'raise' ) [view source on GitHub] \u00b6 Take a transform pipeline and convert it to a serializable representation that uses only standard python data types: dictionaries, lists, strings, integers, and floats. Parameters: Name Type Description transform object A transform that should be serialized. If the transform doesn't implement the to_dict method and on_not_implemented_error equals to 'raise' then NotImplementedError is raised. If on_not_implemented_error equals to 'warn' then NotImplementedError will be ignored but no transform parameters will be serialized.","title":"Serialization API (core.serialization)"},{"location":"api_reference/core/serialization/#serialization-api-coreserialization","text":"","title":"Serialization API (core.serialization)"},{"location":"api_reference/core/serialization/#albumentations.core.serialization","text":"","title":"albumentations.core.serialization"},{"location":"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta","text":"A metaclass that is used to register classes in SERIALIZABLE_REGISTRY so they can be found later while deserializing transformation pipeline using classes full names.","title":"SerializableMeta"},{"location":"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta.__new__","text":"Create and return a new object. See help(type) for accurate signature.","title":"__new__()"},{"location":"api_reference/core/serialization/#albumentations.core.serialization.from_dict","text":"Parameters: Name Type Description transform dict A dictionary with serialized transform pipeline. lambda_transforms dict A dictionary that contains lambda transforms, that is instances of the Lambda class. This dictionary is required when you are restoring a pipeline that contains lambda transforms. Keys in that dictionary should be named same as name arguments in respective lambda transforms from a serialized pipeline.","title":"from_dict()"},{"location":"api_reference/core/serialization/#albumentations.core.serialization.load","text":"Load a serialized pipeline from a json or yaml file and construct a transform pipeline. Parameters: Name Type Description transform obj Transform to serialize. filepath str Filepath to read from. data_format str Serialization format. Should be either json or 'yaml'. lambda_transforms dict A dictionary that contains lambda transforms, that is instances of the Lambda class. This dictionary is required when you are restoring a pipeline that contains lambda transforms. Keys in that dictionary should be named same as name arguments in respective lambda transforms from a serialized pipeline.","title":"load()"},{"location":"api_reference/core/serialization/#albumentations.core.serialization.save","text":"Take a transform pipeline, serialize it and save a serialized version to a file using either json or yaml format. Parameters: Name Type Description transform obj Transform to serialize. filepath str Filepath to write to. data_format str Serialization format. Should be either json or 'yaml'. on_not_implemented_error str Parameter that describes what to do if a transform doesn't implement the to_dict method. If 'raise' then NotImplementedError is raised, if warn then the exception will be ignored and no transform arguments will be saved.","title":"save()"},{"location":"api_reference/core/serialization/#albumentations.core.serialization.to_dict","text":"Take a transform pipeline and convert it to a serializable representation that uses only standard python data types: dictionaries, lists, strings, integers, and floats. Parameters: Name Type Description transform object A transform that should be serialized. If the transform doesn't implement the to_dict method and on_not_implemented_error equals to 'raise' then NotImplementedError is raised. If on_not_implemented_error equals to 'warn' then NotImplementedError will be ignored but no transform parameters will be serialized.","title":"to_dict()"},{"location":"api_reference/core/transforms_interface/","text":"Transforms Interface (core.transforms_interface) \u00b6 \u00b6 class albumentations.core.transforms_interface.BasicTransform ( always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 albumentations.core.transforms_interface.BasicTransform.add_targets ( self , additional_targets ) \u00b6 Add targets to transform them the same way as one of existing targets ex: {'target_image': 'image'} ex: {'obj1_mask': 'mask', 'obj2_mask': 'mask'} by the way you must have at least one object with key 'image' Parameters: Name Type Description additional_targets dict keys - new target name, values - old target name. ex: {'image2': 'image'} class albumentations.core.transforms_interface.DualTransform [view source on GitHub] \u00b6 Transform for segmentation task. class albumentations.core.transforms_interface.ImageOnlyTransform [view source on GitHub] \u00b6 Transform applied to image only. class albumentations.core.transforms_interface.NoOp [view source on GitHub] \u00b6 Does nothing def albumentations.core.transforms_interface.to_tuple ( param , low = None , bias = None ) [view source on GitHub] \u00b6 Convert input argument to min-max tuple Parameters: Name Type Description param scalar, tuple or list of 2+ elements Input value. If value is scalar, return value would be (offset - value, offset + value). If value is tuple, return value would be value + offset (broadcasted). low Second element of tuple can be passed as optional argument bias An offset factor added to each element","title":"Transforms Interface (core.transforms_interface)"},{"location":"api_reference/core/transforms_interface/#transforms-interface-coretransforms_interface","text":"","title":"Transforms Interface (core.transforms_interface)"},{"location":"api_reference/core/transforms_interface/#albumentations.core.transforms_interface","text":"","title":"albumentations.core.transforms_interface"},{"location":"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform","text":"","title":"BasicTransform"},{"location":"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets","text":"Add targets to transform them the same way as one of existing targets ex: {'target_image': 'image'} ex: {'obj1_mask': 'mask', 'obj2_mask': 'mask'} by the way you must have at least one object with key 'image' Parameters: Name Type Description additional_targets dict keys - new target name, values - old target name. ex: {'image2': 'image'}","title":"add_targets()"},{"location":"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.DualTransform","text":"Transform for segmentation task.","title":"DualTransform"},{"location":"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.ImageOnlyTransform","text":"Transform applied to image only.","title":"ImageOnlyTransform"},{"location":"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.NoOp","text":"Does nothing","title":"NoOp"},{"location":"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple","text":"Convert input argument to min-max tuple Parameters: Name Type Description param scalar, tuple or list of 2+ elements Input value. If value is scalar, return value would be (offset - value, offset + value). If value is tuple, return value would be value + offset (broadcasted). low Second element of tuple can be passed as optional argument bias An offset factor added to each element","title":"to_tuple()"},{"location":"api_reference/imgaug/","text":"Transforms (albumentations.imgaug.transforms)","title":"Index"},{"location":"api_reference/imgaug/transforms/","text":"Transforms (imgaug.transforms) \u00b6 \u00b6 class albumentations.imgaug.transforms.IAAAdditiveGaussianNoise ( loc = 0 , scale = ( 2.5500000000000003 , 12.75 ), per_channel = False , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Add gaussian noise to the input image. Parameters: Name Type Description loc int mean of the normal distribution that generates the noise. Default: 0. scale [float, float] standard deviation of the normal distribution that generates the noise. Default: (0.01 * 255, 0.05 * 255). p float probability of applying the transform. Default: 0.5. Targets: image class albumentations.imgaug.transforms.IAAAffine ( scale = 1.0 , translate_percent = None , translate_px = None , rotate = 0.0 , shear = 0.0 , order = 1 , cval = 0 , mode = 'reflect' , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Place a regular grid of points on the input and randomly move the neighbourhood of these point around via affine transformations. Note: This class introduce interpolation artifacts to mask if it has values other than {0;1} Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image, mask class albumentations.imgaug.transforms.IAAEmboss ( alpha = ( 0.2 , 0.5 ), strength = ( 0.2 , 0.7 ), always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Emboss the input image and overlays the result with the original image. Parameters: Name Type Description alpha [float, float] range to choose the visibility of the embossed image. At 0, only the original image is visible,at 1.0 only its embossed version is visible. Default: (0.2, 0.5). strength [float, float] strength range of the embossing. Default: (0.2, 0.7). p float probability of applying the transform. Default: 0.5. Targets: image class albumentations.imgaug.transforms.IAAPerspective ( scale = ( 0.05 , 0.1 ), keep_size = True , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Perform a random four point perspective transform of the input. Note: This class introduce interpolation artifacts to mask if it has values other than {0;1} Parameters: Name Type Description scale [float, float] standard deviation of the normal distributions. These are used to sample the random distances of the subimage's corners from the full image's corners. Default: (0.05, 0.1). p float probability of applying the transform. Default: 0.5. Targets: image, mask class albumentations.imgaug.transforms.IAAPiecewiseAffine ( scale = ( 0.03 , 0.05 ), nb_rows = 4 , nb_cols = 4 , order = 1 , cval = 0 , mode = 'constant' , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Place a regular grid of points on the input and randomly move the neighbourhood of these point around via affine transformations. Note: This class introduce interpolation artifacts to mask if it has values other than {0;1} Parameters: Name Type Description scale [float, float] factor range that determines how far each point is moved. Default: (0.03, 0.05). nb_rows int number of rows of points that the regular grid should have. Default: 4. nb_cols int number of columns of points that the regular grid should have. Default: 4. p float probability of applying the transform. Default: 0.5. Targets: image, mask class albumentations.imgaug.transforms.IAASharpen ( alpha = ( 0.2 , 0.5 ), lightness = ( 0.5 , 1.0 ), always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Sharpen the input image and overlays the result with the original image. Parameters: Name Type Description alpha [float, float] range to choose the visibility of the sharpened image. At 0, only the original image is visible, at 1.0 only its sharpened version is visible. Default: (0.2, 0.5). lightness [float, float] range to choose the lightness of the sharpened image. Default: (0.5, 1.0). p float probability of applying the transform. Default: 0.5. Targets: image class albumentations.imgaug.transforms.IAASuperpixels ( p_replace = 0.1 , n_segments = 100 , always_apply = False , p = 0.5 ) [view source on GitHub] \u00b6 Completely or partially transform the input image to its superpixel representation. Uses skimage's version of the SLIC algorithm. May be slow. Parameters: Name Type Description p_replace float defines the probability of any superpixel area being replaced by the superpixel, i.e. by the average pixel color within its area. Default: 0.1. n_segments int target number of superpixels to generate. Default: 100. p float probability of applying the transform. Default: 0.5. Targets: image","title":"Transforms (imgaug.transforms)"},{"location":"api_reference/imgaug/transforms/#transforms-imgaugtransforms","text":"","title":"Transforms (imgaug.transforms)"},{"location":"api_reference/imgaug/transforms/#albumentations.imgaug.transforms","text":"","title":"albumentations.imgaug.transforms"},{"location":"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise","text":"Add gaussian noise to the input image. Parameters: Name Type Description loc int mean of the normal distribution that generates the noise. Default: 0. scale [float, float] standard deviation of the normal distribution that generates the noise. Default: (0.01 * 255, 0.05 * 255). p float probability of applying the transform. Default: 0.5. Targets: image","title":"IAAAdditiveGaussianNoise"},{"location":"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine","text":"Place a regular grid of points on the input and randomly move the neighbourhood of these point around via affine transformations. Note: This class introduce interpolation artifacts to mask if it has values other than {0;1} Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. Targets: image, mask","title":"IAAAffine"},{"location":"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss","text":"Emboss the input image and overlays the result with the original image. Parameters: Name Type Description alpha [float, float] range to choose the visibility of the embossed image. At 0, only the original image is visible,at 1.0 only its embossed version is visible. Default: (0.2, 0.5). strength [float, float] strength range of the embossing. Default: (0.2, 0.7). p float probability of applying the transform. Default: 0.5. Targets: image","title":"IAAEmboss"},{"location":"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective","text":"Perform a random four point perspective transform of the input. Note: This class introduce interpolation artifacts to mask if it has values other than {0;1} Parameters: Name Type Description scale [float, float] standard deviation of the normal distributions. These are used to sample the random distances of the subimage's corners from the full image's corners. Default: (0.05, 0.1). p float probability of applying the transform. Default: 0.5. Targets: image, mask","title":"IAAPerspective"},{"location":"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine","text":"Place a regular grid of points on the input and randomly move the neighbourhood of these point around via affine transformations. Note: This class introduce interpolation artifacts to mask if it has values other than {0;1} Parameters: Name Type Description scale [float, float] factor range that determines how far each point is moved. Default: (0.03, 0.05). nb_rows int number of rows of points that the regular grid should have. Default: 4. nb_cols int number of columns of points that the regular grid should have. Default: 4. p float probability of applying the transform. Default: 0.5. Targets: image, mask","title":"IAAPiecewiseAffine"},{"location":"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen","text":"Sharpen the input image and overlays the result with the original image. Parameters: Name Type Description alpha [float, float] range to choose the visibility of the sharpened image. At 0, only the original image is visible, at 1.0 only its sharpened version is visible. Default: (0.2, 0.5). lightness [float, float] range to choose the lightness of the sharpened image. Default: (0.5, 1.0). p float probability of applying the transform. Default: 0.5. Targets: image","title":"IAASharpen"},{"location":"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels","text":"Completely or partially transform the input image to its superpixel representation. Uses skimage's version of the SLIC algorithm. May be slow. Parameters: Name Type Description p_replace float defines the probability of any superpixel area being replaced by the superpixel, i.e. by the average pixel color within its area. Default: 0.1. n_segments int target number of superpixels to generate. Default: 100. p float probability of applying the transform. Default: 0.5. Targets: image","title":"IAASuperpixels"},{"location":"api_reference/pytorch/","text":"Transforms (albumentations.pytorch.transforms)","title":"Index"},{"location":"api_reference/pytorch/transforms/","text":"Transforms (pytorch.transforms) \u00b6 \u00b6 class albumentations.pytorch.transforms.ToTensor ( num_classes = 1 , sigmoid = True , normalize = None ) [view source on GitHub] \u00b6 Convert image and mask to torch.Tensor and divide by 255 if image or mask are uint8 type. WARNING! Please use this with care and look into sources before usage. Parameters: Name Type Description num_classes int only for segmentation sigmoid bool only for segmentation, transform mask to LongTensor or not. normalize dict dict with keys [mean, std] to pass it into torchvision.normalize class albumentations.pytorch.transforms.ToTensorV2 ( always_apply = True , p = 1.0 ) [view source on GitHub] \u00b6 Convert image and mask to torch.Tensor .","title":"Transforms (pytorch.transforms)"},{"location":"api_reference/pytorch/transforms/#transforms-pytorchtransforms","text":"","title":"Transforms (pytorch.transforms)"},{"location":"api_reference/pytorch/transforms/#albumentations.pytorch.transforms","text":"","title":"albumentations.pytorch.transforms"},{"location":"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor","text":"Convert image and mask to torch.Tensor and divide by 255 if image or mask are uint8 type. WARNING! Please use this with care and look into sources before usage. Parameters: Name Type Description num_classes int only for segmentation sigmoid bool only for segmentation, transform mask to LongTensor or not. normalize dict dict with keys [mean, std] to pass it into torchvision.normalize","title":"ToTensor"},{"location":"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensorV2","text":"Convert image and mask to torch.Tensor .","title":"ToTensorV2"},{"location":"examples/","text":"List of examples \u00b6 Defining a simple augmentation pipeline for image augmentation Working with non-8-bit images Using Albumentations to augment bounding boxes for object detection tasks How to use Albumentations for detection tasks if you need to keep all bounding boxes Using Albumentations for a semantic segmentation task Using Albumentations to augment keypoints Applying the same augmentation with the same parameters to multiple images, masks, bounding boxes, or keypoints Weather augmentations in Albumentations Migrating from torchvision to Albumentations Debugging an augmentation pipeline with ReplayCompose How to save and load parameters of an augmentation pipeline Showcase. Cool augmentation examples on diverse set of images from various real-world tasks. Using Albumentations with Tensorflow","title":"List of examples"},{"location":"examples/#list-of-examples","text":"Defining a simple augmentation pipeline for image augmentation Working with non-8-bit images Using Albumentations to augment bounding boxes for object detection tasks How to use Albumentations for detection tasks if you need to keep all bounding boxes Using Albumentations for a semantic segmentation task Using Albumentations to augment keypoints Applying the same augmentation with the same parameters to multiple images, masks, bounding boxes, or keypoints Weather augmentations in Albumentations Migrating from torchvision to Albumentations Debugging an augmentation pipeline with ReplayCompose How to save and load parameters of an augmentation pipeline Showcase. Cool augmentation examples on diverse set of images from various real-world tasks. Using Albumentations with Tensorflow","title":"List of examples"},{"location":"examples/example/","text":"(function() { function addWidgetsRenderer() { var mimeElement = document.querySelector('script[type=\"application/vnd.jupyter.widget-view+json\"]'); var scriptElement = document.createElement('script'); var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js'; var widgetState; // Fallback for older version: try { widgetState = mimeElement && JSON.parse(mimeElement.innerHTML); if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) { widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js'; } } catch(e) {} scriptElement.src = widgetRendererSrc; document.body.appendChild(scriptElement); } document.addEventListener('DOMContentLoaded', addWidgetsRenderer); }()); Defining a simple augmentation pipeline for image augmentation \u00b6 This example shows how you can use Albumentations to define a simple augmentation pipeline. Import the required libraries \u00b6 import random import cv2 from matplotlib import pyplot as plt import albumentations as A Define the visualization function \u00b6 def visualize ( image ): plt . figure ( figsize = ( 10 , 10 )) plt . axis ( 'off' ) plt . imshow ( image ) Read the image from the disk and convert it from the BGR color space to the RGB color space \u00b6 For historical reasons , OpenCV reads an image in BGR format (so color channels of the image have the following order: Blue, Green, Red). Albumentations uses the most common and popular RGB image format. So when using OpenCV, we need to convert the image format to RGB explicitly. image = cv2 . imread ( 'images/image_3.jpg' ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) visualize ( image ) Define a single augmentation, pass the image to it and receive the augmented image \u00b6 We fix the random seed for visualization purposes, so the augmentation will always produce the same result. In a real computer vision pipeline, you shouldn't fix the random seed before applying a transform to the image because, in that case, the pipeline will always output the same image. The purpose of image augmentation is to use different transformations each time. transform = A . HorizontalFlip ( p = 0.5 ) random . seed ( 7 ) augmented_image = transform ( image = image )[ 'image' ] visualize ( augmented_image ) transform = A . ShiftScaleRotate ( p = 0.5 ) random . seed ( 7 ) augmented_image = transform ( image = image )[ 'image' ] visualize ( augmented_image ) Define an augmentation pipeline using Compose , pass the image to it and receive the augmented image \u00b6 transform = A . Compose ([ A . CLAHE (), A . RandomRotate90 (), A . Transpose (), A . ShiftScaleRotate ( shift_limit = 0.0625 , scale_limit = 0.50 , rotate_limit = 45 , p =. 75 ), A . Blur ( blur_limit = 3 ), A . OpticalDistortion (), A . GridDistortion (), A . HueSaturationValue (), ]) random . seed ( 42 ) augmented_image = transform ( image = image )[ 'image' ] visualize ( augmented_image ) transform = A . Compose ([ A . RandomRotate90 (), A . Flip (), A . Transpose (), A . OneOf ([ A . IAAAdditiveGaussianNoise (), A . GaussNoise (), ], p = 0.2 ), A . OneOf ([ A . MotionBlur ( p =. 2 ), A . MedianBlur ( blur_limit = 3 , p = 0.1 ), A . Blur ( blur_limit = 3 , p = 0.1 ), ], p = 0.2 ), A . ShiftScaleRotate ( shift_limit = 0.0625 , scale_limit = 0.2 , rotate_limit = 45 , p = 0.2 ), A . OneOf ([ A . OpticalDistortion ( p = 0.3 ), A . GridDistortion ( p =. 1 ), A . IAAPiecewiseAffine ( p = 0.3 ), ], p = 0.2 ), A . OneOf ([ A . CLAHE ( clip_limit = 2 ), A . IAASharpen (), A . IAAEmboss (), A . RandomBrightnessContrast (), ], p = 0.3 ), A . HueSaturationValue ( p = 0.3 ), ]) random . seed ( 42 ) augmented_image = transform ( image = image )[ 'image' ] visualize ( augmented_image )","title":"Defining a simple augmentation pipeline for image augmentation"},{"location":"examples/example/#defining-a-simple-augmentation-pipeline-for-image-augmentation","text":"This example shows how you can use Albumentations to define a simple augmentation pipeline.","title":"Defining a simple augmentation pipeline for image augmentation"},{"location":"examples/example/#import-the-required-libraries","text":"import random import cv2 from matplotlib import pyplot as plt import albumentations as A","title":"Import the required libraries"},{"location":"examples/example/#define-the-visualization-function","text":"def visualize ( image ): plt . figure ( figsize = ( 10 , 10 )) plt . axis ( 'off' ) plt . imshow ( image )","title":"Define the visualization function"},{"location":"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space","text":"For historical reasons , OpenCV reads an image in BGR format (so color channels of the image have the following order: Blue, Green, Red). Albumentations uses the most common and popular RGB image format. So when using OpenCV, we need to convert the image format to RGB explicitly. image = cv2 . imread ( 'images/image_3.jpg' ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) visualize ( image )","title":"Read the image from the disk and convert it from the BGR color space to the RGB color space"},{"location":"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image","text":"We fix the random seed for visualization purposes, so the augmentation will always produce the same result. In a real computer vision pipeline, you shouldn't fix the random seed before applying a transform to the image because, in that case, the pipeline will always output the same image. The purpose of image augmentation is to use different transformations each time. transform = A . HorizontalFlip ( p = 0.5 ) random . seed ( 7 ) augmented_image = transform ( image = image )[ 'image' ] visualize ( augmented_image ) transform = A . ShiftScaleRotate ( p = 0.5 ) random . seed ( 7 ) augmented_image = transform ( image = image )[ 'image' ] visualize ( augmented_image )","title":"Define a single augmentation, pass the image to it and receive the augmented image"},{"location":"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image","text":"transform = A . Compose ([ A . CLAHE (), A . RandomRotate90 (), A . Transpose (), A . ShiftScaleRotate ( shift_limit = 0.0625 , scale_limit = 0.50 , rotate_limit = 45 , p =. 75 ), A . Blur ( blur_limit = 3 ), A . OpticalDistortion (), A . GridDistortion (), A . HueSaturationValue (), ]) random . seed ( 42 ) augmented_image = transform ( image = image )[ 'image' ] visualize ( augmented_image ) transform = A . Compose ([ A . RandomRotate90 (), A . Flip (), A . Transpose (), A . OneOf ([ A . IAAAdditiveGaussianNoise (), A . GaussNoise (), ], p = 0.2 ), A . OneOf ([ A . MotionBlur ( p =. 2 ), A . MedianBlur ( blur_limit = 3 , p = 0.1 ), A . Blur ( blur_limit = 3 , p = 0.1 ), ], p = 0.2 ), A . ShiftScaleRotate ( shift_limit = 0.0625 , scale_limit = 0.2 , rotate_limit = 45 , p = 0.2 ), A . OneOf ([ A . OpticalDistortion ( p = 0.3 ), A . GridDistortion ( p =. 1 ), A . IAAPiecewiseAffine ( p = 0.3 ), ], p = 0.2 ), A . OneOf ([ A . CLAHE ( clip_limit = 2 ), A . IAASharpen (), A . IAAEmboss (), A . RandomBrightnessContrast (), ], p = 0.3 ), A . HueSaturationValue ( p = 0.3 ), ]) random . seed ( 42 ) augmented_image = transform ( image = image )[ 'image' ] visualize ( augmented_image )","title":"Define an augmentation pipeline using Compose, pass the image to it and receive the augmented image"},{"location":"examples/example_16_bit_tiff/","text":"(function() { function addWidgetsRenderer() { var mimeElement = document.querySelector('script[type=\"application/vnd.jupyter.widget-view+json\"]'); var scriptElement = document.createElement('script'); var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js'; var widgetState; // Fallback for older version: try { widgetState = mimeElement && JSON.parse(mimeElement.innerHTML); if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) { widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js'; } } catch(e) {} scriptElement.src = widgetRendererSrc; document.body.appendChild(scriptElement); } document.addEventListener('DOMContentLoaded', addWidgetsRenderer); }()); Working with non-8-bit images \u00b6 This example shows how you can augment 16-bit TIFF images. 16-bit images are used in satellite imagery. The following technique could also be applied to all non-8-bit images (i.e., 24-bit images, 32-bit images. etc.). Import the required libraries \u00b6 import random import cv2 from matplotlib import pyplot as plt import albumentations as A Define the visualization function \u00b6 def visualize ( image ): # Divide all values by 65535 so we can display the image using matplotlib image = image / 65535 plt . figure ( figsize = ( 10 , 10 )) plt . axis ( 'off' ) plt . imshow ( image ) Read the 16-bit TIFF image from the disk \u00b6 # The image is taken from http://www.brucelindbloom.com/index.html?ReferenceImages.html # \u00a9 Bruce Justin Lindbloom image = cv2 . imread ( 'images/DeltaE_16bit_gamma2.2.tif' , cv2 . IMREAD_UNCHANGED ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) visualize ( image ) Note: OpenCV may read incorrectly some TIFF files. Consider using tifffile - https://github.com/blink1073/tifffile Define an augmentation pipeline that works with 16-bit TIFF images \u00b6 Under the hood, Albumentations supports two data types that describe the intensity of pixels: - np.uint8 , an unsigned 8-bit integer that can define values between 0 and 255. - np.float32 , a floating-point number with single precision. For np.float32 input, Albumentations expects that value will lie in the range between 0.0 and 1.0. Albumentations has a dedicated transformation called ToFloat that takes a NumPy array with data types such as np.uint16 , np.uint32 , etc. (so any datatype that used values higher than 255 to represent pixel intensity) and converts it to a NumPy array with the np.float32 datatype. Additionally, this transformation divides all input values to lie in the range [0.0, 1.0] . By default, if the input data type is np.uint16 , all values are divided by 65536, and if the input data type is np.uint32 , all values are divided by 4294967295. You can specify your divider in the max_value parameter. The augmentation pipeline for non-8-bit images consists of the following stages: First, you use the ToFloat transform to convert an input image to float32. All values in the converted image will lie in the range [0.0, 1.0] . Then you use all the necessary image transforms. Optionally you could use the FromFloat transform at the end of the augmentation pipeline to convert the image back to its original data type. transform = A . Compose ([ A . ToFloat ( max_value = 65535.0 ), A . RandomRotate90 (), A . Flip (), A . OneOf ([ A . MotionBlur ( p = 0.2 ), A . MedianBlur ( blur_limit = 3 , p = 0.1 ), A . Blur ( blur_limit = 3 , p = 0.1 ), ], p = 0.2 ), A . ShiftScaleRotate ( shift_limit = 0.0625 , scale_limit = 0.2 , rotate_limit = 45 , p = 0.2 ), A . OneOf ([ A . OpticalDistortion ( p = 0.3 ), A . GridDistortion ( p = 0.1 ), ], p = 0.2 ), A . HueSaturationValue ( hue_shift_limit = 20 , sat_shift_limit = 0.1 , val_shift_limit = 0.1 , p = 0.3 ), A . FromFloat ( max_value = 65535.0 ), ]) We fix the random seed for visualization purposes, so the augmentation will always produce the same result. In a real computer vision pipeline, you shouldn't fix the random seed before applying a transform to the image because, in that case, the pipeline will always output the same image. The purpose of image augmentation is to use different transformations each time. random . seed ( 7 ) augmented = transform ( image = image ) visualize ( augmented [ 'image' ])","title":"Working with non-8-bit images"},{"location":"examples/example_16_bit_tiff/#working-with-non-8-bit-images","text":"This example shows how you can augment 16-bit TIFF images. 16-bit images are used in satellite imagery. The following technique could also be applied to all non-8-bit images (i.e., 24-bit images, 32-bit images. etc.).","title":"Working with non-8-bit images"},{"location":"examples/example_16_bit_tiff/#import-the-required-libraries","text":"import random import cv2 from matplotlib import pyplot as plt import albumentations as A","title":"Import the required libraries"},{"location":"examples/example_16_bit_tiff/#define-the-visualization-function","text":"def visualize ( image ): # Divide all values by 65535 so we can display the image using matplotlib image = image / 65535 plt . figure ( figsize = ( 10 , 10 )) plt . axis ( 'off' ) plt . imshow ( image )","title":"Define the visualization function"},{"location":"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk","text":"# The image is taken from http://www.brucelindbloom.com/index.html?ReferenceImages.html # \u00a9 Bruce Justin Lindbloom image = cv2 . imread ( 'images/DeltaE_16bit_gamma2.2.tif' , cv2 . IMREAD_UNCHANGED ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) visualize ( image ) Note: OpenCV may read incorrectly some TIFF files. Consider using tifffile - https://github.com/blink1073/tifffile","title":"Read the 16-bit TIFF image from the disk"},{"location":"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images","text":"Under the hood, Albumentations supports two data types that describe the intensity of pixels: - np.uint8 , an unsigned 8-bit integer that can define values between 0 and 255. - np.float32 , a floating-point number with single precision. For np.float32 input, Albumentations expects that value will lie in the range between 0.0 and 1.0. Albumentations has a dedicated transformation called ToFloat that takes a NumPy array with data types such as np.uint16 , np.uint32 , etc. (so any datatype that used values higher than 255 to represent pixel intensity) and converts it to a NumPy array with the np.float32 datatype. Additionally, this transformation divides all input values to lie in the range [0.0, 1.0] . By default, if the input data type is np.uint16 , all values are divided by 65536, and if the input data type is np.uint32 , all values are divided by 4294967295. You can specify your divider in the max_value parameter. The augmentation pipeline for non-8-bit images consists of the following stages: First, you use the ToFloat transform to convert an input image to float32. All values in the converted image will lie in the range [0.0, 1.0] . Then you use all the necessary image transforms. Optionally you could use the FromFloat transform at the end of the augmentation pipeline to convert the image back to its original data type. transform = A . Compose ([ A . ToFloat ( max_value = 65535.0 ), A . RandomRotate90 (), A . Flip (), A . OneOf ([ A . MotionBlur ( p = 0.2 ), A . MedianBlur ( blur_limit = 3 , p = 0.1 ), A . Blur ( blur_limit = 3 , p = 0.1 ), ], p = 0.2 ), A . ShiftScaleRotate ( shift_limit = 0.0625 , scale_limit = 0.2 , rotate_limit = 45 , p = 0.2 ), A . OneOf ([ A . OpticalDistortion ( p = 0.3 ), A . GridDistortion ( p = 0.1 ), ], p = 0.2 ), A . HueSaturationValue ( hue_shift_limit = 20 , sat_shift_limit = 0.1 , val_shift_limit = 0.1 , p = 0.3 ), A . FromFloat ( max_value = 65535.0 ), ]) We fix the random seed for visualization purposes, so the augmentation will always produce the same result. In a real computer vision pipeline, you shouldn't fix the random seed before applying a transform to the image because, in that case, the pipeline will always output the same image. The purpose of image augmentation is to use different transformations each time. random . seed ( 7 ) augmented = transform ( image = image ) visualize ( augmented [ 'image' ])","title":"Define an augmentation pipeline that works with 16-bit TIFF images"},{"location":"examples/example_bboxes/","text":"(function() { function addWidgetsRenderer() { var mimeElement = document.querySelector('script[type=\"application/vnd.jupyter.widget-view+json\"]'); var scriptElement = document.createElement('script'); var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js'; var widgetState; // Fallback for older version: try { widgetState = mimeElement && JSON.parse(mimeElement.innerHTML); if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) { widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js'; } } catch(e) {} scriptElement.src = widgetRendererSrc; document.body.appendChild(scriptElement); } document.addEventListener('DOMContentLoaded', addWidgetsRenderer); }()); Using Albumentations to augment bounding boxes for object detection tasks \u00b6 Import the required libraries \u00b6 % matplotlib inline import random import cv2 from matplotlib import pyplot as plt import albumentations as A Define functions to visualize bounding boxes and class labels on an image \u00b6 The visualization function is based on https://github.com/facebookresearch/Detectron/blob/master/detectron/utils/vis.py BOX_COLOR = ( 255 , 0 , 0 ) # Red TEXT_COLOR = ( 255 , 255 , 255 ) # White def visualize_bbox ( img , bbox , class_name , color = BOX_COLOR , thickness = 2 ): \"\"\"Visualizes a single bounding box on the image\"\"\" x_min , y_min , w , h = bbox x_min , x_max , y_min , y_max = int ( x_min ), int ( x_min + w ), int ( y_min ), int ( y_min + h ) cv2 . rectangle ( img , ( x_min , y_min ), ( x_max , y_max ), color = color , thickness = thickness ) (( text_width , text_height ), _ ) = cv2 . getTextSize ( class_name , cv2 . FONT_HERSHEY_SIMPLEX , 0.35 , 1 ) cv2 . rectangle ( img , ( x_min , y_min - int ( 1.3 * text_height )), ( x_min + text_width , y_min ), BOX_COLOR , - 1 ) cv2 . putText ( img , text = class_name , org = ( x_min , y_min - int ( 0.3 * text_height )), fontFace = cv2 . FONT_HERSHEY_SIMPLEX , fontScale = 0.35 , color = TEXT_COLOR , lineType = cv2 . LINE_AA , ) return img def visualize ( image , bboxes , category_ids , category_id_to_name ): img = image . copy () for bbox , category_id in zip ( bboxes , category_ids ): class_name = category_id_to_name [ category_id ] img = visualize_bbox ( img , bbox , class_name ) plt . figure ( figsize = ( 12 , 12 )) plt . axis ( 'off' ) plt . imshow ( img ) Get an image and annotations for it \u00b6 For this example we will use an image from the COCO dataset that have two associated boduning boxes. The image is available at http://cocodataset.org/#explore?id=386298 Load the image from the disk \u00b6 image = cv2 . imread ( 'images/000000386298.jpg' ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) Define two bounding boxes with coordinates and class labels \u00b6 Coordinates for those bounding boxes are declared using the coco format. Each bounding box is described using four values [x_min, y_min, width, height] . For the detailed description of different formats for bounding boxes coordinates, please refer to the documentation article about bounding boxes - https://albumentations.ai/docs/getting_started/bounding_boxes_augmentation/ . bboxes = [[ 5.66 , 138.95 , 147.09 , 164.88 ], [ 366.7 , 80.84 , 132.8 , 181.84 ]] category_ids = [ 17 , 18 ] # We will use the mapping from category_id to the class name # to visualize the class label for the bounding box on the image category_id_to_name = { 17 : 'cat' , 18 : 'dog' } Visuaize the original image with bounding boxes \u00b6 visualize ( image , bboxes , category_ids , category_id_to_name ) Define an augmentation pipeline \u00b6 To make an augmentation pipeline that works with bounding boxes, you need to pass an instance of BboxParams to Compose . In BboxParams you need to specify the format of coordinates for bounding boxes and optionally a few other parameters. For the detailed description of BboxParams please refer to the documentation article about bounding boxes - https://albumentations.ai/docs/getting_started/bounding_boxes_augmentation/ . transform = A . Compose ( [ A . HorizontalFlip ( p = 0.5 )], bbox_params = A . BboxParams ( format = 'coco' , label_fields = [ 'category_ids' ]), ) We fix the random seed for visualization purposes, so the augmentation will always produce the same result. In a real computer vision pipeline, you shouldn't fix the random seed before applying a transform to the image because, in that case, the pipeline will always output the same image. The purpose of image augmentation is to use different transformations each time. random . seed ( 7 ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , ) Another example \u00b6 transform = A . Compose ( [ A . ShiftScaleRotate ( p = 0.5 )], bbox_params = A . BboxParams ( format = 'coco' , label_fields = [ 'category_ids' ]), ) random . seed ( 7 ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , ) Define a complex augmentation piepline \u00b6 transform = A . Compose ([ A . HorizontalFlip ( p = 0.5 ), A . ShiftScaleRotate ( p = 0.5 ), A . RandomBrightnessContrast ( p = 0.3 ), A . RGBShift ( r_shift_limit = 30 , g_shift_limit = 30 , b_shift_limit = 30 , p = 0.3 ), ], bbox_params = A . BboxParams ( format = 'coco' , label_fields = [ 'category_ids' ]), ) random . seed ( 7 ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , ) min_area and min_visibility parameters \u00b6 The size of bounding boxes could change if you apply spatial augmentations, for example, when you crop a part of an image or when you resize an image. min_area and min_visibility parameters control what Albumentations should do to the augmented bounding boxes if their size has changed after augmentation. The size of bounding boxes could change if you apply spatial augmentations, for example, when you crop a part of an image or when you resize an image. min_area is a value in pixels. If the area of a bounding box after augmentation becomes smaller than min_area , Albumentations will drop that box. So the returned list of augmented bounding boxes won't contain that bounding box. min_visibility is a value between 0 and 1. If the ratio of the bounding box area after augmentation to the area of the bounding box before augmentation becomes smaller than min_visibility , Albumentations will drop that box. So if the augmentation process cuts the most of the bounding box, that box won't be present in the returned list of the augmented bounding boxes. Define an augmentation pipeline with the default values for min_area and min_visibilty \u00b6 If you don't pass the min_area and min_visibility parameters, Albumentations will use 0 as a default value for them. transform = A . Compose ( [ A . CenterCrop ( height = 280 , width = 280 , p = 1 )], bbox_params = A . BboxParams ( format = 'coco' , label_fields = [ 'category_ids' ]), ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , ) As you see the output contains two bounding boxes. Define an augmentation pipeline with min_area \u00b6 Next, we will set the min_area value to 4500 pixels. transform = A . Compose ( [ A . CenterCrop ( height = 280 , width = 280 , p = 1 )], bbox_params = A . BboxParams ( format = 'coco' , min_area = 4500 , label_fields = [ 'category_ids' ]), ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , ) The output contains only one bounding box because the area of the second bounding box became lower than 4500 pixels. Define an augmentation pipeline with min_visibility \u00b6 Finally, we will set min_visibility to 0.3. So if the area of the output bounding box is less than 30% of the original area, Albumentations won't return that bounding box. transform = A . Compose ( [ A . CenterCrop ( height = 280 , width = 280 , p = 1 )], bbox_params = A . BboxParams ( format = 'coco' , min_visibility = 0.3 , label_fields = [ 'category_ids' ]), ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , ) The output doesn't contain any bounding box. Note that you can declare both the min_area and min_visibility parameters simultaneously in one BboxParams instance.","title":"Using Albumentations to augment bounding boxes for object detection tasks"},{"location":"examples/example_bboxes/#using-albumentations-to-augment-bounding-boxes-for-object-detection-tasks","text":"","title":"Using Albumentations to augment bounding boxes for object detection tasks"},{"location":"examples/example_bboxes/#import-the-required-libraries","text":"% matplotlib inline import random import cv2 from matplotlib import pyplot as plt import albumentations as A","title":"Import the required libraries"},{"location":"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image","text":"The visualization function is based on https://github.com/facebookresearch/Detectron/blob/master/detectron/utils/vis.py BOX_COLOR = ( 255 , 0 , 0 ) # Red TEXT_COLOR = ( 255 , 255 , 255 ) # White def visualize_bbox ( img , bbox , class_name , color = BOX_COLOR , thickness = 2 ): \"\"\"Visualizes a single bounding box on the image\"\"\" x_min , y_min , w , h = bbox x_min , x_max , y_min , y_max = int ( x_min ), int ( x_min + w ), int ( y_min ), int ( y_min + h ) cv2 . rectangle ( img , ( x_min , y_min ), ( x_max , y_max ), color = color , thickness = thickness ) (( text_width , text_height ), _ ) = cv2 . getTextSize ( class_name , cv2 . FONT_HERSHEY_SIMPLEX , 0.35 , 1 ) cv2 . rectangle ( img , ( x_min , y_min - int ( 1.3 * text_height )), ( x_min + text_width , y_min ), BOX_COLOR , - 1 ) cv2 . putText ( img , text = class_name , org = ( x_min , y_min - int ( 0.3 * text_height )), fontFace = cv2 . FONT_HERSHEY_SIMPLEX , fontScale = 0.35 , color = TEXT_COLOR , lineType = cv2 . LINE_AA , ) return img def visualize ( image , bboxes , category_ids , category_id_to_name ): img = image . copy () for bbox , category_id in zip ( bboxes , category_ids ): class_name = category_id_to_name [ category_id ] img = visualize_bbox ( img , bbox , class_name ) plt . figure ( figsize = ( 12 , 12 )) plt . axis ( 'off' ) plt . imshow ( img )","title":"Define functions to visualize bounding boxes and class labels on an image"},{"location":"examples/example_bboxes/#get-an-image-and-annotations-for-it","text":"For this example we will use an image from the COCO dataset that have two associated boduning boxes. The image is available at http://cocodataset.org/#explore?id=386298","title":"Get an image and annotations for it"},{"location":"examples/example_bboxes/#load-the-image-from-the-disk","text":"image = cv2 . imread ( 'images/000000386298.jpg' ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB )","title":"Load the image from the disk"},{"location":"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels","text":"Coordinates for those bounding boxes are declared using the coco format. Each bounding box is described using four values [x_min, y_min, width, height] . For the detailed description of different formats for bounding boxes coordinates, please refer to the documentation article about bounding boxes - https://albumentations.ai/docs/getting_started/bounding_boxes_augmentation/ . bboxes = [[ 5.66 , 138.95 , 147.09 , 164.88 ], [ 366.7 , 80.84 , 132.8 , 181.84 ]] category_ids = [ 17 , 18 ] # We will use the mapping from category_id to the class name # to visualize the class label for the bounding box on the image category_id_to_name = { 17 : 'cat' , 18 : 'dog' }","title":"Define two bounding boxes with coordinates and class labels"},{"location":"examples/example_bboxes/#visuaize-the-original-image-with-bounding-boxes","text":"visualize ( image , bboxes , category_ids , category_id_to_name )","title":"Visuaize the original image with bounding boxes"},{"location":"examples/example_bboxes/#define-an-augmentation-pipeline","text":"To make an augmentation pipeline that works with bounding boxes, you need to pass an instance of BboxParams to Compose . In BboxParams you need to specify the format of coordinates for bounding boxes and optionally a few other parameters. For the detailed description of BboxParams please refer to the documentation article about bounding boxes - https://albumentations.ai/docs/getting_started/bounding_boxes_augmentation/ . transform = A . Compose ( [ A . HorizontalFlip ( p = 0.5 )], bbox_params = A . BboxParams ( format = 'coco' , label_fields = [ 'category_ids' ]), ) We fix the random seed for visualization purposes, so the augmentation will always produce the same result. In a real computer vision pipeline, you shouldn't fix the random seed before applying a transform to the image because, in that case, the pipeline will always output the same image. The purpose of image augmentation is to use different transformations each time. random . seed ( 7 ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , )","title":"Define an augmentation pipeline"},{"location":"examples/example_bboxes/#another-example","text":"transform = A . Compose ( [ A . ShiftScaleRotate ( p = 0.5 )], bbox_params = A . BboxParams ( format = 'coco' , label_fields = [ 'category_ids' ]), ) random . seed ( 7 ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , )","title":"Another example"},{"location":"examples/example_bboxes/#define-a-complex-augmentation-piepline","text":"transform = A . Compose ([ A . HorizontalFlip ( p = 0.5 ), A . ShiftScaleRotate ( p = 0.5 ), A . RandomBrightnessContrast ( p = 0.3 ), A . RGBShift ( r_shift_limit = 30 , g_shift_limit = 30 , b_shift_limit = 30 , p = 0.3 ), ], bbox_params = A . BboxParams ( format = 'coco' , label_fields = [ 'category_ids' ]), ) random . seed ( 7 ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , )","title":"Define a complex augmentation piepline"},{"location":"examples/example_bboxes/#min_area-and-min_visibility-parameters","text":"The size of bounding boxes could change if you apply spatial augmentations, for example, when you crop a part of an image or when you resize an image. min_area and min_visibility parameters control what Albumentations should do to the augmented bounding boxes if their size has changed after augmentation. The size of bounding boxes could change if you apply spatial augmentations, for example, when you crop a part of an image or when you resize an image. min_area is a value in pixels. If the area of a bounding box after augmentation becomes smaller than min_area , Albumentations will drop that box. So the returned list of augmented bounding boxes won't contain that bounding box. min_visibility is a value between 0 and 1. If the ratio of the bounding box area after augmentation to the area of the bounding box before augmentation becomes smaller than min_visibility , Albumentations will drop that box. So if the augmentation process cuts the most of the bounding box, that box won't be present in the returned list of the augmented bounding boxes.","title":"min_area and min_visibility parameters"},{"location":"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty","text":"If you don't pass the min_area and min_visibility parameters, Albumentations will use 0 as a default value for them. transform = A . Compose ( [ A . CenterCrop ( height = 280 , width = 280 , p = 1 )], bbox_params = A . BboxParams ( format = 'coco' , label_fields = [ 'category_ids' ]), ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , ) As you see the output contains two bounding boxes.","title":"Define an augmentation pipeline with the default values for min_area and min_visibilty"},{"location":"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area","text":"Next, we will set the min_area value to 4500 pixels. transform = A . Compose ( [ A . CenterCrop ( height = 280 , width = 280 , p = 1 )], bbox_params = A . BboxParams ( format = 'coco' , min_area = 4500 , label_fields = [ 'category_ids' ]), ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , ) The output contains only one bounding box because the area of the second bounding box became lower than 4500 pixels.","title":"Define an augmentation pipeline with min_area"},{"location":"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility","text":"Finally, we will set min_visibility to 0.3. So if the area of the output bounding box is less than 30% of the original area, Albumentations won't return that bounding box. transform = A . Compose ( [ A . CenterCrop ( height = 280 , width = 280 , p = 1 )], bbox_params = A . BboxParams ( format = 'coco' , min_visibility = 0.3 , label_fields = [ 'category_ids' ]), ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , ) The output doesn't contain any bounding box. Note that you can declare both the min_area and min_visibility parameters simultaneously in one BboxParams instance.","title":"Define an augmentation pipeline with min_visibility"},{"location":"examples/example_bboxes2/","text":"(function() { function addWidgetsRenderer() { var mimeElement = document.querySelector('script[type=\"application/vnd.jupyter.widget-view+json\"]'); var scriptElement = document.createElement('script'); var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js'; var widgetState; // Fallback for older version: try { widgetState = mimeElement && JSON.parse(mimeElement.innerHTML); if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) { widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js'; } } catch(e) {} scriptElement.src = widgetRendererSrc; document.body.appendChild(scriptElement); } document.addEventListener('DOMContentLoaded', addWidgetsRenderer); }()); How to use Albumentations for detection tasks if you need to keep all bounding boxes \u00b6 Some augmentations like RandomCrop and CenterCrop may transform an image so that it won't contain all original bounding boxes. This example shows how you can use the transform named RandomSizedBBoxSafeCrop to crop a part of the image but keep all bounding boxes from the original image. Import the required libraries \u00b6 import random import cv2 from matplotlib import pyplot as plt import albumentations as A Define functions to visualize bounding boxes and class labels on an image \u00b6 The visualization function is based on https://github.com/facebookresearch/Detectron/blob/master/detectron/utils/vis.py BOX_COLOR = ( 255 , 0 , 0 ) # Red TEXT_COLOR = ( 255 , 255 , 255 ) # White def visualize_bbox ( img , bbox , class_name , color = BOX_COLOR , thickness = 2 ): \"\"\"Visualizes a single bounding box on the image\"\"\" x_min , y_min , w , h = bbox x_min , x_max , y_min , y_max = int ( x_min ), int ( x_min + w ), int ( y_min ), int ( y_min + h ) cv2 . rectangle ( img , ( x_min , y_min ), ( x_max , y_max ), color = color , thickness = thickness ) (( text_width , text_height ), _ ) = cv2 . getTextSize ( class_name , cv2 . FONT_HERSHEY_SIMPLEX , 0.35 , 1 ) cv2 . rectangle ( img , ( x_min , y_min - int ( 1.3 * text_height )), ( x_min + text_width , y_min ), BOX_COLOR , - 1 ) cv2 . putText ( img , text = class_name , org = ( x_min , y_min - int ( 0.3 * text_height )), fontFace = cv2 . FONT_HERSHEY_SIMPLEX , fontScale = 0.35 , color = TEXT_COLOR , lineType = cv2 . LINE_AA , ) return img def visualize ( image , bboxes , category_ids , category_id_to_name ): img = image . copy () for bbox , category_id in zip ( bboxes , category_ids ): class_name = category_id_to_name [ category_id ] img = visualize_bbox ( img , bbox , class_name ) plt . figure ( figsize = ( 12 , 12 )) plt . axis ( 'off' ) plt . imshow ( img ) Get an image and annotations for it \u00b6 For this example we will use an image from the COCO dataset that have two associated boduning boxes. The image is available at http://cocodataset.org/#explore?id=386298 Load the image from the disk \u00b6 image = cv2 . imread ( 'images/000000386298.jpg' ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) Define two bounding boxes with coordinates and class labels \u00b6 Coordinates for those bounding boxes are declared using the coco format. Each bounding box is described using four values [x_min, y_min, width, height] . For the detailed description of different formats for bounding boxes coordinates, please refer to the documentation article about bounding boxes - https://albumentations.ai/docs/getting_started/bounding_boxes_augmentation/ . bboxes = [[ 5.66 , 138.95 , 147.09 , 164.88 ], [ 366.7 , 80.84 , 132.8 , 181.84 ]] category_ids = [ 17 , 18 ] # We will use the mapping from category_id to the class name # to visualize the class label for the bounding box on the image category_id_to_name = { 17 : 'cat' , 18 : 'dog' } Visuaize the image with bounding boxes \u00b6 visualize ( image , bboxes , category_ids , category_id_to_name ) Using RandomSizedBBoxSafeCrop to keep all bounding boxes from the original image \u00b6 RandomSizedBBoxSafeCrop crops a random part of the image. It ensures that the cropped part will contain all bounding boxes from the original image. Then the transform rescales the crop to height and width specified by the respective parameters. The erosion_rate parameter controls how much area of the original bounding box could be lost after cropping. erosion_rate = 0.2 means that the augmented bounding box's area could be up to 20% smaller than the area of the original bounding box. Define an augmentation pipeline \u00b6 transform = A . Compose ( [ A . RandomSizedBBoxSafeCrop ( width = 448 , height = 336 , erosion_rate = 0.2 )], bbox_params = A . BboxParams ( format = 'coco' , label_fields = [ 'category_ids' ]), ) Augment the input image with bounding boxes \u00b6 We fix the random seed for visualization purposes, so the augmentation will always produce the same result. In a real computer vision pipeline, you shouldn't fix the random seed before applying a transform to the image because, in that case, the pipeline will always output the same image. The purpose of image augmentation is to use different transformations each time. random . seed ( 7 ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , ) A few more examples with different random seeds \u00b6 random . seed ( 3 ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , ) random . seed ( 444 ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , )","title":"How to use Albumentations for detection tasks if you need to keep all bounding boxes"},{"location":"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes","text":"Some augmentations like RandomCrop and CenterCrop may transform an image so that it won't contain all original bounding boxes. This example shows how you can use the transform named RandomSizedBBoxSafeCrop to crop a part of the image but keep all bounding boxes from the original image.","title":"How to use Albumentations for detection tasks if you need to keep all bounding boxes"},{"location":"examples/example_bboxes2/#import-the-required-libraries","text":"import random import cv2 from matplotlib import pyplot as plt import albumentations as A","title":"Import the required libraries"},{"location":"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image","text":"The visualization function is based on https://github.com/facebookresearch/Detectron/blob/master/detectron/utils/vis.py BOX_COLOR = ( 255 , 0 , 0 ) # Red TEXT_COLOR = ( 255 , 255 , 255 ) # White def visualize_bbox ( img , bbox , class_name , color = BOX_COLOR , thickness = 2 ): \"\"\"Visualizes a single bounding box on the image\"\"\" x_min , y_min , w , h = bbox x_min , x_max , y_min , y_max = int ( x_min ), int ( x_min + w ), int ( y_min ), int ( y_min + h ) cv2 . rectangle ( img , ( x_min , y_min ), ( x_max , y_max ), color = color , thickness = thickness ) (( text_width , text_height ), _ ) = cv2 . getTextSize ( class_name , cv2 . FONT_HERSHEY_SIMPLEX , 0.35 , 1 ) cv2 . rectangle ( img , ( x_min , y_min - int ( 1.3 * text_height )), ( x_min + text_width , y_min ), BOX_COLOR , - 1 ) cv2 . putText ( img , text = class_name , org = ( x_min , y_min - int ( 0.3 * text_height )), fontFace = cv2 . FONT_HERSHEY_SIMPLEX , fontScale = 0.35 , color = TEXT_COLOR , lineType = cv2 . LINE_AA , ) return img def visualize ( image , bboxes , category_ids , category_id_to_name ): img = image . copy () for bbox , category_id in zip ( bboxes , category_ids ): class_name = category_id_to_name [ category_id ] img = visualize_bbox ( img , bbox , class_name ) plt . figure ( figsize = ( 12 , 12 )) plt . axis ( 'off' ) plt . imshow ( img )","title":"Define functions to visualize bounding boxes and class labels on an image"},{"location":"examples/example_bboxes2/#get-an-image-and-annotations-for-it","text":"For this example we will use an image from the COCO dataset that have two associated boduning boxes. The image is available at http://cocodataset.org/#explore?id=386298","title":"Get an image and annotations for it"},{"location":"examples/example_bboxes2/#load-the-image-from-the-disk","text":"image = cv2 . imread ( 'images/000000386298.jpg' ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB )","title":"Load the image from the disk"},{"location":"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels","text":"Coordinates for those bounding boxes are declared using the coco format. Each bounding box is described using four values [x_min, y_min, width, height] . For the detailed description of different formats for bounding boxes coordinates, please refer to the documentation article about bounding boxes - https://albumentations.ai/docs/getting_started/bounding_boxes_augmentation/ . bboxes = [[ 5.66 , 138.95 , 147.09 , 164.88 ], [ 366.7 , 80.84 , 132.8 , 181.84 ]] category_ids = [ 17 , 18 ] # We will use the mapping from category_id to the class name # to visualize the class label for the bounding box on the image category_id_to_name = { 17 : 'cat' , 18 : 'dog' }","title":"Define two bounding boxes with coordinates and class labels"},{"location":"examples/example_bboxes2/#visuaize-the-image-with-bounding-boxes","text":"visualize ( image , bboxes , category_ids , category_id_to_name )","title":"Visuaize the image with bounding boxes"},{"location":"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image","text":"RandomSizedBBoxSafeCrop crops a random part of the image. It ensures that the cropped part will contain all bounding boxes from the original image. Then the transform rescales the crop to height and width specified by the respective parameters. The erosion_rate parameter controls how much area of the original bounding box could be lost after cropping. erosion_rate = 0.2 means that the augmented bounding box's area could be up to 20% smaller than the area of the original bounding box.","title":"Using RandomSizedBBoxSafeCrop to keep all bounding boxes from the original image"},{"location":"examples/example_bboxes2/#define-an-augmentation-pipeline","text":"transform = A . Compose ( [ A . RandomSizedBBoxSafeCrop ( width = 448 , height = 336 , erosion_rate = 0.2 )], bbox_params = A . BboxParams ( format = 'coco' , label_fields = [ 'category_ids' ]), )","title":"Define an augmentation pipeline"},{"location":"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes","text":"We fix the random seed for visualization purposes, so the augmentation will always produce the same result. In a real computer vision pipeline, you shouldn't fix the random seed before applying a transform to the image because, in that case, the pipeline will always output the same image. The purpose of image augmentation is to use different transformations each time. random . seed ( 7 ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , )","title":"Augment the input image with bounding boxes"},{"location":"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds","text":"random . seed ( 3 ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , ) random . seed ( 444 ) transformed = transform ( image = image , bboxes = bboxes , category_ids = category_ids ) visualize ( transformed [ 'image' ], transformed [ 'bboxes' ], transformed [ 'category_ids' ], category_id_to_name , )","title":"A few more examples with different random seeds"},{"location":"examples/example_kaggle_salt/","text":"(function() { function addWidgetsRenderer() { var mimeElement = document.querySelector('script[type=\"application/vnd.jupyter.widget-view+json\"]'); var scriptElement = document.createElement('script'); var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js'; var widgetState; // Fallback for older version: try { widgetState = mimeElement && JSON.parse(mimeElement.innerHTML); if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) { widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js'; } } catch(e) {} scriptElement.src = widgetRendererSrc; document.body.appendChild(scriptElement); } document.addEventListener('DOMContentLoaded', addWidgetsRenderer); }()); Using Albumentations for a semantic segmentation task \u00b6 We will use images and data from the TGS Salt Identification Challenge . Import the required libraries \u00b6 import random import cv2 from matplotlib import pyplot as plt import albumentations as A Define a function to visualize images and masks \u00b6 def visualize ( image , mask , original_image = None , original_mask = None ): fontsize = 18 if original_image is None and original_mask is None : f , ax = plt . subplots ( 2 , 1 , figsize = ( 8 , 8 )) ax [ 0 ] . imshow ( image ) ax [ 1 ] . imshow ( mask ) else : f , ax = plt . subplots ( 2 , 2 , figsize = ( 8 , 8 )) ax [ 0 , 0 ] . imshow ( original_image ) ax [ 0 , 0 ] . set_title ( 'Original image' , fontsize = fontsize ) ax [ 1 , 0 ] . imshow ( original_mask ) ax [ 1 , 0 ] . set_title ( 'Original mask' , fontsize = fontsize ) ax [ 0 , 1 ] . imshow ( image ) ax [ 0 , 1 ] . set_title ( 'Transformed image' , fontsize = fontsize ) ax [ 1 , 1 ] . imshow ( mask ) ax [ 1 , 1 ] . set_title ( 'Transformed mask' , fontsize = fontsize ) Read an image and its mask from the disk \u00b6 image = cv2 . imread ( 'images/kaggle_salt/0fea4b5049_image.png' ) mask = cv2 . imread ( 'images/kaggle_salt/0fea4b5049.png' , cv2 . IMREAD_GRAYSCALE ) Original image \u00b6 print ( image . shape , mask . shape ) (101, 101, 3) (101, 101) original_height , original_width = image . shape [: 2 ] visualize ( image , mask ) # Padding UNet type architecture requires input image size be divisible by 2^N 2^N , where N N is the number of maxpooling layers. In the vanilla UNet N=5 N=5 \\Longrightarrow \\Longrightarrow , we need to pad input images to the closest divisible by 2^5 = 32 2^5 = 32 number, which is 128. This operation may be performed using PadIfNeeded transformation. It pads both the image and the mask on all four sides. Padding type (zero, constant, reflection) may be specified. The default padding is reflection padding. aug = A . PadIfNeeded ( min_height = 128 , min_width = 128 , p = 1 ) augmented = aug ( image = image , mask = mask ) image_padded = augmented [ 'image' ] mask_padded = augmented [ 'mask' ] print ( image_padded . shape , mask_padded . shape ) visualize ( image_padded , mask_padded , original_image = image , original_mask = mask ) (128, 128, 3) (128, 128) CenterCrop and Crop \u00b6 To get to the original image and mask from the padded version, we may use CenterCrop or Crop transformations. aug = A . CenterCrop ( p = 1 , height = original_height , width = original_width ) augmented = aug ( image = image_padded , mask = mask_padded ) image_center_cropped = augmented [ 'image' ] mask_center_cropped = augmented [ 'mask' ] print ( image_center_cropped . shape , mask_center_cropped . shape ) assert ( image - image_center_cropped ) . sum () == 0 assert ( mask - mask_center_cropped ) . sum () == 0 visualize ( image_padded , mask_padded , original_image = image_center_cropped , original_mask = mask_center_cropped ) (101, 101, 3) (101, 101) x_min = ( 128 - original_width ) // 2 y_min = ( 128 - original_height ) // 2 x_max = x_min + original_width y_max = y_min + original_height aug = A . Crop ( x_min = x_min , x_max = x_max , y_min = y_min , y_max = y_max , p = 1 ) augmented = aug ( image = image_padded , mask = mask_padded ) image_cropped = augmented [ 'image' ] mask_cropped = augmented [ 'mask' ] print ( image_cropped . shape , mask_cropped . shape ) assert ( image - image_cropped ) . sum () == 0 assert ( mask - mask_cropped ) . sum () == 0 visualize ( image_cropped , mask_cropped , original_image = image_padded , original_mask = mask_padded ) (101, 101, 3) (101, 101) Non destructive transformations. Dehidral group D4 \u00b6 For images for which there is no clear notion of top like this one, satellite and aerial imagery or medical imagery is typically a good idea to add transformations that do not add or lose the information. There are eight distinct ways to represent the same square on the plane. Combinations of the transformations HorizontalFlip , VerticalFlip , Transpose , RandomRotate90 will be able to get the original image to all eight states. ## HorizontalFlip aug = A . HorizontalFlip ( p = 1 ) augmented = aug ( image = image , mask = mask ) image_h_flipped = augmented [ 'image' ] mask_h_flipped = augmented [ 'mask' ] visualize ( image_h_flipped , mask_h_flipped , original_image = image , original_mask = mask ) VerticalFlip \u00b6 aug = A . VerticalFlip ( p = 1 ) augmented = aug ( image = image , mask = mask ) image_v_flipped = augmented [ 'image' ] mask_v_flipped = augmented [ 'mask' ] visualize ( image_v_flipped , mask_v_flipped , original_image = image , original_mask = mask ) RandomRotate90 (Randomly rotates by 0, 90, 180, 270 degrees) \u00b6 aug = A . RandomRotate90 ( p = 1 ) augmented = aug ( image = image , mask = mask ) image_rot90 = augmented [ 'image' ] mask_rot90 = augmented [ 'mask' ] visualize ( image_rot90 , mask_rot90 , original_image = image , original_mask = mask ) ## Transpose (switch X and Y axis) aug = A . Transpose ( p = 1 ) augmented = aug ( image = image , mask = mask ) image_transposed = augmented [ 'image' ] mask_transposed = augmented [ 'mask' ] visualize ( image_transposed , mask_transposed , original_image = image , original_mask = mask ) Non-rigid transformations: ElasticTransform, GridDistortion, OpticalDistortion \u00b6 In medical imaging problems, non-rigid transformations help to augment the data. It is unclear if they will help with this problem, but let's look at them. We will consider ElasticTransform , GridDistortion , OpticalDistortion . We fix the random seed for visualization purposes, so the augmentation will always produce the same result. In a real computer vision pipeline, you shouldn't fix the random seed before applying a transform to the image because, in that case, the pipeline will always output the same image. The purpose of image augmentation is to use different transformations each time. ElasticTransform \u00b6 aug = A . ElasticTransform ( p = 1 , alpha = 120 , sigma = 120 * 0.05 , alpha_affine = 120 * 0.03 ) random . seed ( 7 ) augmented = aug ( image = image , mask = mask ) image_elastic = augmented [ 'image' ] mask_elastic = augmented [ 'mask' ] visualize ( image_elastic , mask_elastic , original_image = image , original_mask = mask ) GridDistortion \u00b6 aug = A . GridDistortion ( p = 1 ) random . seed ( 7 ) augmented = aug ( image = image , mask = mask ) image_grid = augmented [ 'image' ] mask_grid = augmented [ 'mask' ] visualize ( image_grid , mask_grid , original_image = image , original_mask = mask ) OpticalDistortion \u00b6 aug = A . OpticalDistortion ( distort_limit = 2 , shift_limit = 0.5 , p = 1 ) random . seed ( 7 ) augmented = aug ( image = image , mask = mask ) image_optical = augmented [ 'image' ] mask_optical = augmented [ 'mask' ] visualize ( image_optical , mask_optical , original_image = image , original_mask = mask ) RandomSizedCrop \u00b6 One may combine RandomCrop and RandomScale but there is a transformation RandomSizedCrop that allows to combine them into one transformation. aug = A . RandomSizedCrop ( min_max_height = ( 50 , 101 ), height = original_height , width = original_width , p = 1 ) random . seed ( 7 ) augmented = aug ( image = image , mask = mask ) image_scaled = augmented [ 'image' ] mask_scaled = augmented [ 'mask' ] visualize ( image_scaled , mask_scaled , original_image = image , original_mask = mask ) Let's try to combine different transformations \u00b6 Light non-destructive augmentations. aug = A . Compose ([ A . VerticalFlip ( p = 0.5 ), A . RandomRotate90 ( p = 0.5 )] ) random . seed ( 7 ) augmented = aug ( image = image , mask = mask ) image_light = augmented [ 'image' ] mask_light = augmented [ 'mask' ] visualize ( image_light , mask_light , original_image = image , original_mask = mask ) Let's add non rigid transformations and RandomSizedCrop \u00b6 Medium augmentations \u00b6 aug = A . Compose ([ A . OneOf ([ A . RandomSizedCrop ( min_max_height = ( 50 , 101 ), height = original_height , width = original_width , p = 0.5 ), A . PadIfNeeded ( min_height = original_height , min_width = original_width , p = 0.5 ) ], p = 1 ), A . VerticalFlip ( p = 0.5 ), A . RandomRotate90 ( p = 0.5 ), A . OneOf ([ A . ElasticTransform ( p = 0.5 , alpha = 120 , sigma = 120 * 0.05 , alpha_affine = 120 * 0.03 ), A . GridDistortion ( p = 0.5 ), A . OpticalDistortion ( distort_limit = 1 , shift_limit = 0.5 , p = 1 ), ], p = 0.8 )]) random . seed ( 11 ) augmented = aug ( image = image , mask = mask ) image_medium = augmented [ 'image' ] mask_medium = augmented [ 'mask' ] visualize ( image_medium , mask_medium , original_image = image , original_mask = mask ) Let's add non-spatial stransformations. \u00b6 Many non-spatial transformations like CLAHE , RandomBrightness , RandomContrast , RandomGamma can be also added. They will be applied only to the image and not the mask. aug = A . Compose ([ A . OneOf ([ A . RandomSizedCrop ( min_max_height = ( 50 , 101 ), height = original_height , width = original_width , p = 0.5 ), A . PadIfNeeded ( min_height = original_height , min_width = original_width , p = 0.5 ) ], p = 1 ), A . VerticalFlip ( p = 0.5 ), A . RandomRotate90 ( p = 0.5 ), A . OneOf ([ A . ElasticTransform ( alpha = 120 , sigma = 120 * 0.05 , alpha_affine = 120 * 0.03 , p = 0.5 ), A . GridDistortion ( p = 0.5 ), A . OpticalDistortion ( distort_limit = 2 , shift_limit = 0.5 , p = 1 ) ], p = 0.8 ), A . CLAHE ( p = 0.8 ), A . RandomBrightnessContrast ( p = 0.8 ), A . RandomGamma ( p = 0.8 )]) random . seed ( 11 ) augmented = aug ( image = image , mask = mask ) image_heavy = augmented [ 'image' ] mask_heavy = augmented [ 'mask' ] visualize ( image_heavy , mask_heavy , original_image = image , original_mask = mask )","title":"Using Albumentations for a semantic segmentation task"},{"location":"examples/example_kaggle_salt/#using-albumentations-for-a-semantic-segmentation-task","text":"We will use images and data from the TGS Salt Identification Challenge .","title":"Using Albumentations for a semantic segmentation task"},{"location":"examples/example_kaggle_salt/#import-the-required-libraries","text":"import random import cv2 from matplotlib import pyplot as plt import albumentations as A","title":"Import the required libraries"},{"location":"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks","text":"def visualize ( image , mask , original_image = None , original_mask = None ): fontsize = 18 if original_image is None and original_mask is None : f , ax = plt . subplots ( 2 , 1 , figsize = ( 8 , 8 )) ax [ 0 ] . imshow ( image ) ax [ 1 ] . imshow ( mask ) else : f , ax = plt . subplots ( 2 , 2 , figsize = ( 8 , 8 )) ax [ 0 , 0 ] . imshow ( original_image ) ax [ 0 , 0 ] . set_title ( 'Original image' , fontsize = fontsize ) ax [ 1 , 0 ] . imshow ( original_mask ) ax [ 1 , 0 ] . set_title ( 'Original mask' , fontsize = fontsize ) ax [ 0 , 1 ] . imshow ( image ) ax [ 0 , 1 ] . set_title ( 'Transformed image' , fontsize = fontsize ) ax [ 1 , 1 ] . imshow ( mask ) ax [ 1 , 1 ] . set_title ( 'Transformed mask' , fontsize = fontsize )","title":"Define a function to visualize images and masks"},{"location":"examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk","text":"image = cv2 . imread ( 'images/kaggle_salt/0fea4b5049_image.png' ) mask = cv2 . imread ( 'images/kaggle_salt/0fea4b5049.png' , cv2 . IMREAD_GRAYSCALE )","title":"Read an image and its mask from the disk"},{"location":"examples/example_kaggle_salt/#original-image","text":"print ( image . shape , mask . shape ) (101, 101, 3) (101, 101) original_height , original_width = image . shape [: 2 ] visualize ( image , mask ) # Padding UNet type architecture requires input image size be divisible by 2^N 2^N , where N N is the number of maxpooling layers. In the vanilla UNet N=5 N=5 \\Longrightarrow \\Longrightarrow , we need to pad input images to the closest divisible by 2^5 = 32 2^5 = 32 number, which is 128. This operation may be performed using PadIfNeeded transformation. It pads both the image and the mask on all four sides. Padding type (zero, constant, reflection) may be specified. The default padding is reflection padding. aug = A . PadIfNeeded ( min_height = 128 , min_width = 128 , p = 1 ) augmented = aug ( image = image , mask = mask ) image_padded = augmented [ 'image' ] mask_padded = augmented [ 'mask' ] print ( image_padded . shape , mask_padded . shape ) visualize ( image_padded , mask_padded , original_image = image , original_mask = mask ) (128, 128, 3) (128, 128)","title":"Original image "},{"location":"examples/example_kaggle_salt/#centercrop-and-crop","text":"To get to the original image and mask from the padded version, we may use CenterCrop or Crop transformations. aug = A . CenterCrop ( p = 1 , height = original_height , width = original_width ) augmented = aug ( image = image_padded , mask = mask_padded ) image_center_cropped = augmented [ 'image' ] mask_center_cropped = augmented [ 'mask' ] print ( image_center_cropped . shape , mask_center_cropped . shape ) assert ( image - image_center_cropped ) . sum () == 0 assert ( mask - mask_center_cropped ) . sum () == 0 visualize ( image_padded , mask_padded , original_image = image_center_cropped , original_mask = mask_center_cropped ) (101, 101, 3) (101, 101) x_min = ( 128 - original_width ) // 2 y_min = ( 128 - original_height ) // 2 x_max = x_min + original_width y_max = y_min + original_height aug = A . Crop ( x_min = x_min , x_max = x_max , y_min = y_min , y_max = y_max , p = 1 ) augmented = aug ( image = image_padded , mask = mask_padded ) image_cropped = augmented [ 'image' ] mask_cropped = augmented [ 'mask' ] print ( image_cropped . shape , mask_cropped . shape ) assert ( image - image_cropped ) . sum () == 0 assert ( mask - mask_cropped ) . sum () == 0 visualize ( image_cropped , mask_cropped , original_image = image_padded , original_mask = mask_padded ) (101, 101, 3) (101, 101)","title":"CenterCrop and Crop"},{"location":"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4","text":"For images for which there is no clear notion of top like this one, satellite and aerial imagery or medical imagery is typically a good idea to add transformations that do not add or lose the information. There are eight distinct ways to represent the same square on the plane. Combinations of the transformations HorizontalFlip , VerticalFlip , Transpose , RandomRotate90 will be able to get the original image to all eight states. ## HorizontalFlip aug = A . HorizontalFlip ( p = 1 ) augmented = aug ( image = image , mask = mask ) image_h_flipped = augmented [ 'image' ] mask_h_flipped = augmented [ 'mask' ] visualize ( image_h_flipped , mask_h_flipped , original_image = image , original_mask = mask )","title":"Non destructive transformations. Dehidral group D4"},{"location":"examples/example_kaggle_salt/#verticalflip","text":"aug = A . VerticalFlip ( p = 1 ) augmented = aug ( image = image , mask = mask ) image_v_flipped = augmented [ 'image' ] mask_v_flipped = augmented [ 'mask' ] visualize ( image_v_flipped , mask_v_flipped , original_image = image , original_mask = mask )","title":"VerticalFlip"},{"location":"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees","text":"aug = A . RandomRotate90 ( p = 1 ) augmented = aug ( image = image , mask = mask ) image_rot90 = augmented [ 'image' ] mask_rot90 = augmented [ 'mask' ] visualize ( image_rot90 , mask_rot90 , original_image = image , original_mask = mask ) ## Transpose (switch X and Y axis) aug = A . Transpose ( p = 1 ) augmented = aug ( image = image , mask = mask ) image_transposed = augmented [ 'image' ] mask_transposed = augmented [ 'mask' ] visualize ( image_transposed , mask_transposed , original_image = image , original_mask = mask )","title":"RandomRotate90 (Randomly rotates by 0, 90, 180, 270 degrees)"},{"location":"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion","text":"In medical imaging problems, non-rigid transformations help to augment the data. It is unclear if they will help with this problem, but let's look at them. We will consider ElasticTransform , GridDistortion , OpticalDistortion . We fix the random seed for visualization purposes, so the augmentation will always produce the same result. In a real computer vision pipeline, you shouldn't fix the random seed before applying a transform to the image because, in that case, the pipeline will always output the same image. The purpose of image augmentation is to use different transformations each time.","title":"Non-rigid transformations: ElasticTransform, GridDistortion, OpticalDistortion"},{"location":"examples/example_kaggle_salt/#elastictransform","text":"aug = A . ElasticTransform ( p = 1 , alpha = 120 , sigma = 120 * 0.05 , alpha_affine = 120 * 0.03 ) random . seed ( 7 ) augmented = aug ( image = image , mask = mask ) image_elastic = augmented [ 'image' ] mask_elastic = augmented [ 'mask' ] visualize ( image_elastic , mask_elastic , original_image = image , original_mask = mask )","title":"ElasticTransform"},{"location":"examples/example_kaggle_salt/#griddistortion","text":"aug = A . GridDistortion ( p = 1 ) random . seed ( 7 ) augmented = aug ( image = image , mask = mask ) image_grid = augmented [ 'image' ] mask_grid = augmented [ 'mask' ] visualize ( image_grid , mask_grid , original_image = image , original_mask = mask )","title":"GridDistortion"},{"location":"examples/example_kaggle_salt/#opticaldistortion","text":"aug = A . OpticalDistortion ( distort_limit = 2 , shift_limit = 0.5 , p = 1 ) random . seed ( 7 ) augmented = aug ( image = image , mask = mask ) image_optical = augmented [ 'image' ] mask_optical = augmented [ 'mask' ] visualize ( image_optical , mask_optical , original_image = image , original_mask = mask )","title":"OpticalDistortion"},{"location":"examples/example_kaggle_salt/#randomsizedcrop","text":"One may combine RandomCrop and RandomScale but there is a transformation RandomSizedCrop that allows to combine them into one transformation. aug = A . RandomSizedCrop ( min_max_height = ( 50 , 101 ), height = original_height , width = original_width , p = 1 ) random . seed ( 7 ) augmented = aug ( image = image , mask = mask ) image_scaled = augmented [ 'image' ] mask_scaled = augmented [ 'mask' ] visualize ( image_scaled , mask_scaled , original_image = image , original_mask = mask )","title":"RandomSizedCrop"},{"location":"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations","text":"Light non-destructive augmentations. aug = A . Compose ([ A . VerticalFlip ( p = 0.5 ), A . RandomRotate90 ( p = 0.5 )] ) random . seed ( 7 ) augmented = aug ( image = image , mask = mask ) image_light = augmented [ 'image' ] mask_light = augmented [ 'mask' ] visualize ( image_light , mask_light , original_image = image , original_mask = mask )","title":"Let's try to combine different transformations"},{"location":"examples/example_kaggle_salt/#lets-add-non-rigid-transformations-and-randomsizedcrop","text":"","title":"Let's add non rigid transformations and RandomSizedCrop"},{"location":"examples/example_kaggle_salt/#medium-augmentations","text":"aug = A . Compose ([ A . OneOf ([ A . RandomSizedCrop ( min_max_height = ( 50 , 101 ), height = original_height , width = original_width , p = 0.5 ), A . PadIfNeeded ( min_height = original_height , min_width = original_width , p = 0.5 ) ], p = 1 ), A . VerticalFlip ( p = 0.5 ), A . RandomRotate90 ( p = 0.5 ), A . OneOf ([ A . ElasticTransform ( p = 0.5 , alpha = 120 , sigma = 120 * 0.05 , alpha_affine = 120 * 0.03 ), A . GridDistortion ( p = 0.5 ), A . OpticalDistortion ( distort_limit = 1 , shift_limit = 0.5 , p = 1 ), ], p = 0.8 )]) random . seed ( 11 ) augmented = aug ( image = image , mask = mask ) image_medium = augmented [ 'image' ] mask_medium = augmented [ 'mask' ] visualize ( image_medium , mask_medium , original_image = image , original_mask = mask )","title":"Medium augmentations"},{"location":"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations","text":"Many non-spatial transformations like CLAHE , RandomBrightness , RandomContrast , RandomGamma can be also added. They will be applied only to the image and not the mask. aug = A . Compose ([ A . OneOf ([ A . RandomSizedCrop ( min_max_height = ( 50 , 101 ), height = original_height , width = original_width , p = 0.5 ), A . PadIfNeeded ( min_height = original_height , min_width = original_width , p = 0.5 ) ], p = 1 ), A . VerticalFlip ( p = 0.5 ), A . RandomRotate90 ( p = 0.5 ), A . OneOf ([ A . ElasticTransform ( alpha = 120 , sigma = 120 * 0.05 , alpha_affine = 120 * 0.03 , p = 0.5 ), A . GridDistortion ( p = 0.5 ), A . OpticalDistortion ( distort_limit = 2 , shift_limit = 0.5 , p = 1 ) ], p = 0.8 ), A . CLAHE ( p = 0.8 ), A . RandomBrightnessContrast ( p = 0.8 ), A . RandomGamma ( p = 0.8 )]) random . seed ( 11 ) augmented = aug ( image = image , mask = mask ) image_heavy = augmented [ 'image' ] mask_heavy = augmented [ 'mask' ] visualize ( image_heavy , mask_heavy , original_image = image , original_mask = mask )","title":"Let's add non-spatial stransformations."},{"location":"examples/example_keypoints/","text":"(function() { function addWidgetsRenderer() { var mimeElement = document.querySelector('script[type=\"application/vnd.jupyter.widget-view+json\"]'); var scriptElement = document.createElement('script'); var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js'; var widgetState; // Fallback for older version: try { widgetState = mimeElement && JSON.parse(mimeElement.innerHTML); if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) { widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js'; } } catch(e) {} scriptElement.src = widgetRendererSrc; document.body.appendChild(scriptElement); } document.addEventListener('DOMContentLoaded', addWidgetsRenderer); }()); Using Albumentations to augment keypoints \u00b6 In this notebook we will show how to apply Albumentations to the keypoint augmentation problem. Please refer to A list of transforms and their supported targets to see which spatial-level augmentations support keypoints. You can use any pixel-level augmentation to an image with keypoints because pixel-level augmentations don't affect keypoints. Import the required libraries \u00b6 import random import cv2 from matplotlib import pyplot as plt import albumentations as A Define a function to visualize keypoints on an image \u00b6 KEYPOINT_COLOR = ( 0 , 255 , 0 ) # Green def vis_keypoints ( image , keypoints , color = KEYPOINT_COLOR , diameter = 15 ): image = image . copy () for ( x , y ) in keypoints : cv2 . circle ( image , ( int ( x ), int ( y )), diameter , ( 0 , 255 , 0 ), - 1 ) plt . figure ( figsize = ( 8 , 8 )) plt . axis ( 'off' ) plt . imshow ( image ) Get an image and annotations for it \u00b6 image = cv2 . imread ( 'images/keypoints_image.jpg' ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) Define keypoints \u00b6 We will use the xy format for keypoints' coordinates. Each keypoint is defined with two coordinates, x is the position on the x-axis, and y is the position on the y-axis. Please refer to this article with the detailed description of formats for keypoints' coordinates - https://albumentations.ai/docs/getting_started/keypoints_augmentation/ keypoints = [ ( 100 , 100 ), ( 720 , 410 ), ( 1100 , 400 ), ( 1700 , 30 ), ( 300 , 650 ), ( 1570 , 590 ), ( 560 , 800 ), ( 1300 , 750 ), ( 900 , 1000 ), ( 910 , 780 ), ( 670 , 670 ), ( 830 , 670 ), ( 1000 , 670 ), ( 1150 , 670 ), ( 820 , 900 ), ( 1000 , 900 ), ] Visualize the original image with keypoints \u00b6 vis_keypoints ( image , keypoints ) Define a simple augmentation pipeline \u00b6 transform = A . Compose ( [ A . HorizontalFlip ( p = 1 )], keypoint_params = A . KeypointParams ( format = 'xy' ) ) transformed = transform ( image = image , keypoints = keypoints ) vis_keypoints ( transformed [ 'image' ], transformed [ 'keypoints' ]) A few more examples of augmentation pipelines \u00b6 transform = A . Compose ( [ A . VerticalFlip ( p = 1 )], keypoint_params = A . KeypointParams ( format = 'xy' ) ) transformed = transform ( image = image , keypoints = keypoints ) vis_keypoints ( transformed [ 'image' ], transformed [ 'keypoints' ]) We fix the random seed for visualization purposes, so the augmentation will always produce the same result. In a real computer vision pipeline, you shouldn't fix the random seed before applying a transform to the image because, in that case, the pipeline will always output the same image. The purpose of image augmentation is to use different transformations each time. random . seed ( 7 ) transform = A . Compose ( [ A . RandomCrop ( width = 768 , height = 768 , p = 1 )], keypoint_params = A . KeypointParams ( format = 'xy' ) ) transformed = transform ( image = image , keypoints = keypoints ) vis_keypoints ( transformed [ 'image' ], transformed [ 'keypoints' ]) random . seed ( 7 ) transform = A . Compose ( [ A . Rotate ( p = 0.5 )], keypoint_params = A . KeypointParams ( format = 'xy' ) ) transformed = transform ( image = image , keypoints = keypoints ) vis_keypoints ( transformed [ 'image' ], transformed [ 'keypoints' ]) transform = A . Compose ( [ A . CenterCrop ( height = 512 , width = 512 , p = 1 )], keypoint_params = A . KeypointParams ( format = 'xy' ) ) transformed = transform ( image = image , keypoints = keypoints ) vis_keypoints ( transformed [ 'image' ], transformed [ 'keypoints' ]) random . seed ( 7 ) transform = A . Compose ( [ A . ShiftScaleRotate ( p = 0.5 )], keypoint_params = A . KeypointParams ( format = 'xy' ) ) transformed = transform ( image = image , keypoints = keypoints ) vis_keypoints ( transformed [ 'image' ], transformed [ 'keypoints' ]) An example of complex augmentation pipeline \u00b6 random . seed ( 7 ) transform = A . Compose ([ A . RandomSizedCrop ( min_max_height = ( 256 , 1025 ), height = 512 , width = 512 , p = 0.5 ), A . HorizontalFlip ( p = 0.5 ), A . OneOf ([ A . HueSaturationValue ( p = 0.5 ), A . RGBShift ( p = 0.7 ) ], p = 1 ), A . RandomBrightnessContrast ( p = 0.5 ) ], keypoint_params = A . KeypointParams ( format = 'xy' ), ) transformed = transform ( image = image , keypoints = keypoints ) vis_keypoints ( transformed [ 'image' ], transformed [ 'keypoints' ])","title":"Using Albumentations to augment keypoints"},{"location":"examples/example_keypoints/#using-albumentations-to-augment-keypoints","text":"In this notebook we will show how to apply Albumentations to the keypoint augmentation problem. Please refer to A list of transforms and their supported targets to see which spatial-level augmentations support keypoints. You can use any pixel-level augmentation to an image with keypoints because pixel-level augmentations don't affect keypoints.","title":"Using Albumentations to augment keypoints"},{"location":"examples/example_keypoints/#import-the-required-libraries","text":"import random import cv2 from matplotlib import pyplot as plt import albumentations as A","title":"Import the required libraries"},{"location":"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image","text":"KEYPOINT_COLOR = ( 0 , 255 , 0 ) # Green def vis_keypoints ( image , keypoints , color = KEYPOINT_COLOR , diameter = 15 ): image = image . copy () for ( x , y ) in keypoints : cv2 . circle ( image , ( int ( x ), int ( y )), diameter , ( 0 , 255 , 0 ), - 1 ) plt . figure ( figsize = ( 8 , 8 )) plt . axis ( 'off' ) plt . imshow ( image )","title":"Define a function to visualize keypoints on an image"},{"location":"examples/example_keypoints/#get-an-image-and-annotations-for-it","text":"image = cv2 . imread ( 'images/keypoints_image.jpg' ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB )","title":"Get an image and annotations for it"},{"location":"examples/example_keypoints/#define-keypoints","text":"We will use the xy format for keypoints' coordinates. Each keypoint is defined with two coordinates, x is the position on the x-axis, and y is the position on the y-axis. Please refer to this article with the detailed description of formats for keypoints' coordinates - https://albumentations.ai/docs/getting_started/keypoints_augmentation/ keypoints = [ ( 100 , 100 ), ( 720 , 410 ), ( 1100 , 400 ), ( 1700 , 30 ), ( 300 , 650 ), ( 1570 , 590 ), ( 560 , 800 ), ( 1300 , 750 ), ( 900 , 1000 ), ( 910 , 780 ), ( 670 , 670 ), ( 830 , 670 ), ( 1000 , 670 ), ( 1150 , 670 ), ( 820 , 900 ), ( 1000 , 900 ), ]","title":"Define keypoints"},{"location":"examples/example_keypoints/#visualize-the-original-image-with-keypoints","text":"vis_keypoints ( image , keypoints )","title":"Visualize the original image with keypoints"},{"location":"examples/example_keypoints/#define-a-simple-augmentation-pipeline","text":"transform = A . Compose ( [ A . HorizontalFlip ( p = 1 )], keypoint_params = A . KeypointParams ( format = 'xy' ) ) transformed = transform ( image = image , keypoints = keypoints ) vis_keypoints ( transformed [ 'image' ], transformed [ 'keypoints' ])","title":"Define a simple augmentation pipeline"},{"location":"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines","text":"transform = A . Compose ( [ A . VerticalFlip ( p = 1 )], keypoint_params = A . KeypointParams ( format = 'xy' ) ) transformed = transform ( image = image , keypoints = keypoints ) vis_keypoints ( transformed [ 'image' ], transformed [ 'keypoints' ]) We fix the random seed for visualization purposes, so the augmentation will always produce the same result. In a real computer vision pipeline, you shouldn't fix the random seed before applying a transform to the image because, in that case, the pipeline will always output the same image. The purpose of image augmentation is to use different transformations each time. random . seed ( 7 ) transform = A . Compose ( [ A . RandomCrop ( width = 768 , height = 768 , p = 1 )], keypoint_params = A . KeypointParams ( format = 'xy' ) ) transformed = transform ( image = image , keypoints = keypoints ) vis_keypoints ( transformed [ 'image' ], transformed [ 'keypoints' ]) random . seed ( 7 ) transform = A . Compose ( [ A . Rotate ( p = 0.5 )], keypoint_params = A . KeypointParams ( format = 'xy' ) ) transformed = transform ( image = image , keypoints = keypoints ) vis_keypoints ( transformed [ 'image' ], transformed [ 'keypoints' ]) transform = A . Compose ( [ A . CenterCrop ( height = 512 , width = 512 , p = 1 )], keypoint_params = A . KeypointParams ( format = 'xy' ) ) transformed = transform ( image = image , keypoints = keypoints ) vis_keypoints ( transformed [ 'image' ], transformed [ 'keypoints' ]) random . seed ( 7 ) transform = A . Compose ( [ A . ShiftScaleRotate ( p = 0.5 )], keypoint_params = A . KeypointParams ( format = 'xy' ) ) transformed = transform ( image = image , keypoints = keypoints ) vis_keypoints ( transformed [ 'image' ], transformed [ 'keypoints' ])","title":"A few more examples of augmentation pipelines"},{"location":"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline","text":"random . seed ( 7 ) transform = A . Compose ([ A . RandomSizedCrop ( min_max_height = ( 256 , 1025 ), height = 512 , width = 512 , p = 0.5 ), A . HorizontalFlip ( p = 0.5 ), A . OneOf ([ A . HueSaturationValue ( p = 0.5 ), A . RGBShift ( p = 0.7 ) ], p = 1 ), A . RandomBrightnessContrast ( p = 0.5 ) ], keypoint_params = A . KeypointParams ( format = 'xy' ), ) transformed = transform ( image = image , keypoints = keypoints ) vis_keypoints ( transformed [ 'image' ], transformed [ 'keypoints' ])","title":"An example of complex augmentation pipeline"},{"location":"examples/example_multi_target/","text":"(function() { function addWidgetsRenderer() { var mimeElement = document.querySelector('script[type=\"application/vnd.jupyter.widget-view+json\"]'); var scriptElement = document.createElement('script'); var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js'; var widgetState; // Fallback for older version: try { widgetState = mimeElement && JSON.parse(mimeElement.innerHTML); if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) { widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js'; } } catch(e) {} scriptElement.src = widgetRendererSrc; document.body.appendChild(scriptElement); } document.addEventListener('DOMContentLoaded', addWidgetsRenderer); }()); Applying the same augmentation with the same parameters to multiple images, masks, bounding boxes, or keypoints \u00b6 Sometimes you want to apply the same set of augmentations to multiple input objects of the same type. For example, you might have a set of frames from the video, and you want to augment them in the same way. Or you may have multiple masks for the same image, and you want to apply the same augmentation for all of them. In Albumentations, you can declare additional targets and their types using the additional_targets argument to Compose . For the name of an additional target, you can use any string value that is also a valid argument name in Python. Later, you will use those names to pass additional targets to a transformation pipeline. So you can't use a string that starts with a digit, such as '0image' because it is not a valid Python argument name. The type could be either image , mask , bboxes , or keypoints . An example definition of Compose that supports multiple inputs of the same type may be the following: import albumentations as A transform = A.Compose( [HorizontalFlip(p=0.5), ...], additional_targets={ 'image1': 'image', 'image2': 'image', ... 'imageN': 'image', 'bboxes1': 'bboxes', 'bboxes1': 'bboxes', ... 'bboxesM': 'bboxes', 'keypoints1': 'keypoints', 'keypoints2': 'keypoints', ... 'keypointsK': 'keypoints', 'mask1': 'mask', 'mask2': 'mask', ... 'maskL': 'mask' }) ) Import the required libraries \u00b6 import random import cv2 from matplotlib import pyplot as plt import albumentations as A Define a function to visualize an image \u00b6 def visualize ( image ): plt . figure ( figsize = ( 10 , 10 )) plt . axis ( 'off' ) plt . imshow ( image ) Load images from the disk \u00b6 image = cv2 . imread ( 'images/multi_target_1.jpg' ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) image0 = cv2 . imread ( 'images/multi_target_2.jpg' ) image0 = cv2 . cvtColor ( image0 , cv2 . COLOR_BGR2RGB ) image1 = cv2 . imread ( 'images/multi_target_3.jpg' ) image1 = cv2 . cvtColor ( image1 , cv2 . COLOR_BGR2RGB ) Show original images \u00b6 visualize ( image ) visualize ( image0 ) visualize ( image1 ) Define an augmentation pipeline \u00b6 The pipeline expects three images as inputs named image , image0 , and image1 . Then the pipeline will augment those three images in the same way. So it will apply the same set of transformations with the same parameters. transform = A . Compose ( [ A . VerticalFlip ( p = 1 )], additional_targets = { 'image0' : 'image' , 'image1' : 'image' } ) transformed = transform ( image = image , image0 = image0 , image1 = image1 ) visualize ( transformed [ 'image' ]) visualize ( transformed [ 'image0' ]) visualize ( transformed [ 'image1' ]) An example of more complex pipeline \u00b6 transform = A . Compose ( [ A . HorizontalFlip ( p = 0.5 ), A . ShiftScaleRotate ( p = 0.5 ), A . RandomBrightnessContrast ( p = 0.2 ), A . RGBShift ( p = 0.2 ), ], additional_targets = { 'image0' : 'image' , 'image1' : 'image' } ) random . seed ( 42 ) transformed = transform ( image = image , image0 = image0 , image1 = image1 ) visualize ( transformed [ 'image' ]) visualize ( transformed [ 'image0' ]) visualize ( transformed [ 'image1' ])","title":"Applying the same augmentation with the same parameters to multiple images, masks, bounding boxes, or keypoints"},{"location":"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints","text":"Sometimes you want to apply the same set of augmentations to multiple input objects of the same type. For example, you might have a set of frames from the video, and you want to augment them in the same way. Or you may have multiple masks for the same image, and you want to apply the same augmentation for all of them. In Albumentations, you can declare additional targets and their types using the additional_targets argument to Compose . For the name of an additional target, you can use any string value that is also a valid argument name in Python. Later, you will use those names to pass additional targets to a transformation pipeline. So you can't use a string that starts with a digit, such as '0image' because it is not a valid Python argument name. The type could be either image , mask , bboxes , or keypoints . An example definition of Compose that supports multiple inputs of the same type may be the following: import albumentations as A transform = A.Compose( [HorizontalFlip(p=0.5), ...], additional_targets={ 'image1': 'image', 'image2': 'image', ... 'imageN': 'image', 'bboxes1': 'bboxes', 'bboxes1': 'bboxes', ... 'bboxesM': 'bboxes', 'keypoints1': 'keypoints', 'keypoints2': 'keypoints', ... 'keypointsK': 'keypoints', 'mask1': 'mask', 'mask2': 'mask', ... 'maskL': 'mask' }) )","title":"Applying the same augmentation with the same parameters to multiple images, masks, bounding boxes, or keypoints"},{"location":"examples/example_multi_target/#import-the-required-libraries","text":"import random import cv2 from matplotlib import pyplot as plt import albumentations as A","title":"Import the required libraries"},{"location":"examples/example_multi_target/#define-a-function-to-visualize-an-image","text":"def visualize ( image ): plt . figure ( figsize = ( 10 , 10 )) plt . axis ( 'off' ) plt . imshow ( image )","title":"Define a function to visualize an image"},{"location":"examples/example_multi_target/#load-images-from-the-disk","text":"image = cv2 . imread ( 'images/multi_target_1.jpg' ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) image0 = cv2 . imread ( 'images/multi_target_2.jpg' ) image0 = cv2 . cvtColor ( image0 , cv2 . COLOR_BGR2RGB ) image1 = cv2 . imread ( 'images/multi_target_3.jpg' ) image1 = cv2 . cvtColor ( image1 , cv2 . COLOR_BGR2RGB )","title":"Load images from the disk"},{"location":"examples/example_multi_target/#show-original-images","text":"visualize ( image ) visualize ( image0 ) visualize ( image1 )","title":"Show original images"},{"location":"examples/example_multi_target/#define-an-augmentation-pipeline","text":"The pipeline expects three images as inputs named image , image0 , and image1 . Then the pipeline will augment those three images in the same way. So it will apply the same set of transformations with the same parameters. transform = A . Compose ( [ A . VerticalFlip ( p = 1 )], additional_targets = { 'image0' : 'image' , 'image1' : 'image' } ) transformed = transform ( image = image , image0 = image0 , image1 = image1 ) visualize ( transformed [ 'image' ]) visualize ( transformed [ 'image0' ]) visualize ( transformed [ 'image1' ])","title":"Define an augmentation pipeline"},{"location":"examples/example_multi_target/#an-example-of-more-complex-pipeline","text":"transform = A . Compose ( [ A . HorizontalFlip ( p = 0.5 ), A . ShiftScaleRotate ( p = 0.5 ), A . RandomBrightnessContrast ( p = 0.2 ), A . RGBShift ( p = 0.2 ), ], additional_targets = { 'image0' : 'image' , 'image1' : 'image' } ) random . seed ( 42 ) transformed = transform ( image = image , image0 = image0 , image1 = image1 ) visualize ( transformed [ 'image' ]) visualize ( transformed [ 'image0' ]) visualize ( transformed [ 'image1' ])","title":"An example of more complex pipeline"},{"location":"examples/example_weather_transforms/","text":"(function() { function addWidgetsRenderer() { var mimeElement = document.querySelector('script[type=\"application/vnd.jupyter.widget-view+json\"]'); var scriptElement = document.createElement('script'); var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js'; var widgetState; // Fallback for older version: try { widgetState = mimeElement && JSON.parse(mimeElement.innerHTML); if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) { widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js'; } } catch(e) {} scriptElement.src = widgetRendererSrc; document.body.appendChild(scriptElement); } document.addEventListener('DOMContentLoaded', addWidgetsRenderer); }()); Weather augmentations in Albumentations \u00b6 This notebook demonstrates weather augmentations that are supported by Albumentations. Import the required libraries \u00b6 import random import cv2 from matplotlib import pyplot as plt import albumentations as A Define a function to visualize an image \u00b6 def visualize ( image ): plt . figure ( figsize = ( 20 , 10 )) plt . axis ( 'off' ) plt . imshow ( image ) Load the image from the disk \u00b6 image = cv2 . imread ( 'images/weather_example.jpg' ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) Visualize the original image \u00b6 visualize ( image ) RandomRain \u00b6 We fix the random seed for visualization purposes, so the augmentation will always produce the same result. In a real computer vision pipeline, you shouldn't fix the random seed before applying a transform to the image because, in that case, the pipeline will always output the same image. The purpose of image augmentation is to use different transformations each time. transform = A . Compose ( [ A . RandomRain ( brightness_coefficient = 0.9 , drop_width = 1 , blur_value = 5 , p = 1 )], ) random . seed ( 7 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ]) RandomSnow \u00b6 transform = A . Compose ( [ A . RandomSnow ( brightness_coeff = 2.5 , snow_point_lower = 0.3 , snow_point_upper = 0.5 , p = 1 )], ) random . seed ( 7 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ]) RandomSunFlare \u00b6 transform = A . Compose ( [ A . RandomSunFlare ( flare_roi = ( 0 , 0 , 1 , 0.5 ), angle_lower = 0.5 , p = 1 )], ) random . seed ( 7 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ]) RandomShadow \u00b6 transform = A . Compose ( [ A . RandomShadow ( num_shadows_lower = 1 , num_shadows_upper = 1 , shadow_dimension = 5 , shadow_roi = ( 0 , 0.5 , 1 , 1 ), p = 1 )], ) random . seed ( 7 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ]) RandomFog \u00b6 transform = A . Compose ( [ A . RandomFog ( fog_coef_lower = 0.7 , fog_coef_upper = 0.8 , alpha_coef = 0.1 , p = 1 )], ) random . seed ( 7 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ]) RandomShadow \u00b6 transform = A . Compose ( [ A . RandomShadow ( num_shadows_lower = 1 , num_shadows_upper = 1 , shadow_dimension = 5 , shadow_roi = ( 0 , 0.5 , 1 , 1 ), p = 1 )], ) random . seed ( 7 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ]) RandomFog \u00b6 transform = A . Compose ( [ A . RandomFog ( fog_coef_lower = 0.7 , fog_coef_upper = 0.8 , alpha_coef = 0.1 , p = 1 )], ) random . seed ( 7 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ])","title":"Weather augmentations in Albumentations"},{"location":"examples/example_weather_transforms/#weather-augmentations-in-albumentations","text":"This notebook demonstrates weather augmentations that are supported by Albumentations.","title":"Weather augmentations in Albumentations"},{"location":"examples/example_weather_transforms/#import-the-required-libraries","text":"import random import cv2 from matplotlib import pyplot as plt import albumentations as A","title":"Import the required libraries"},{"location":"examples/example_weather_transforms/#define-a-function-to-visualize-an-image","text":"def visualize ( image ): plt . figure ( figsize = ( 20 , 10 )) plt . axis ( 'off' ) plt . imshow ( image )","title":"Define a function to visualize an image"},{"location":"examples/example_weather_transforms/#load-the-image-from-the-disk","text":"image = cv2 . imread ( 'images/weather_example.jpg' ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB )","title":"Load the image from the disk"},{"location":"examples/example_weather_transforms/#visualize-the-original-image","text":"visualize ( image )","title":"Visualize the original image"},{"location":"examples/example_weather_transforms/#randomrain","text":"We fix the random seed for visualization purposes, so the augmentation will always produce the same result. In a real computer vision pipeline, you shouldn't fix the random seed before applying a transform to the image because, in that case, the pipeline will always output the same image. The purpose of image augmentation is to use different transformations each time. transform = A . Compose ( [ A . RandomRain ( brightness_coefficient = 0.9 , drop_width = 1 , blur_value = 5 , p = 1 )], ) random . seed ( 7 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ])","title":"RandomRain"},{"location":"examples/example_weather_transforms/#randomsnow","text":"transform = A . Compose ( [ A . RandomSnow ( brightness_coeff = 2.5 , snow_point_lower = 0.3 , snow_point_upper = 0.5 , p = 1 )], ) random . seed ( 7 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ])","title":"RandomSnow"},{"location":"examples/example_weather_transforms/#randomsunflare","text":"transform = A . Compose ( [ A . RandomSunFlare ( flare_roi = ( 0 , 0 , 1 , 0.5 ), angle_lower = 0.5 , p = 1 )], ) random . seed ( 7 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ])","title":"RandomSunFlare"},{"location":"examples/example_weather_transforms/#randomshadow","text":"transform = A . Compose ( [ A . RandomShadow ( num_shadows_lower = 1 , num_shadows_upper = 1 , shadow_dimension = 5 , shadow_roi = ( 0 , 0.5 , 1 , 1 ), p = 1 )], ) random . seed ( 7 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ])","title":"RandomShadow"},{"location":"examples/example_weather_transforms/#randomfog","text":"transform = A . Compose ( [ A . RandomFog ( fog_coef_lower = 0.7 , fog_coef_upper = 0.8 , alpha_coef = 0.1 , p = 1 )], ) random . seed ( 7 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ])","title":"RandomFog"},{"location":"examples/example_weather_transforms/#randomshadow_1","text":"transform = A . Compose ( [ A . RandomShadow ( num_shadows_lower = 1 , num_shadows_upper = 1 , shadow_dimension = 5 , shadow_roi = ( 0 , 0.5 , 1 , 1 ), p = 1 )], ) random . seed ( 7 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ])","title":"RandomShadow"},{"location":"examples/example_weather_transforms/#randomfog_1","text":"transform = A . Compose ( [ A . RandomFog ( fog_coef_lower = 0.7 , fog_coef_upper = 0.8 , alpha_coef = 0.1 , p = 1 )], ) random . seed ( 7 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ])","title":"RandomFog"},{"location":"examples/migrating_from_torchvision_to_albumentations/","text":"(function() { function addWidgetsRenderer() { var mimeElement = document.querySelector('script[type=\"application/vnd.jupyter.widget-view+json\"]'); var scriptElement = document.createElement('script'); var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js'; var widgetState; // Fallback for older version: try { widgetState = mimeElement && JSON.parse(mimeElement.innerHTML); if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) { widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js'; } } catch(e) {} scriptElement.src = widgetRendererSrc; document.body.appendChild(scriptElement); } document.addEventListener('DOMContentLoaded', addWidgetsRenderer); }()); Migrating from torchvision to Albumentations \u00b6 This notebook shows how you can use Albumentations instead of torchvision to perform data augmentation. Import the required libraries \u00b6 from PIL import Image import cv2 import numpy as np from torch.utils.data import Dataset from torchvision import transforms import albumentations as A from albumentations.pytorch import ToTensorV2 An example pipeline that uses torchvision \u00b6 class TorchvisionDataset ( Dataset ): def __init__ ( self , file_paths , labels , transform = None ): self . file_paths = file_paths self . labels = labels self . transform = transform def __len__ ( self ): return len ( self . file_paths ) def __getitem__ ( self , idx ): label = self . labels [ idx ] file_path = self . file_paths [ idx ] # Read an image with PIL image = Image . open ( file_path ) if self . transform : image = self . transform ( image ) return image , label torchvision_transform = transforms . Compose ([ transforms . Resize (( 256 , 256 )), transforms . RandomCrop ( 224 ), transforms . RandomHorizontalFlip (), transforms . ToTensor (), transforms . Normalize ( mean = [ 0.485 , 0.456 , 0.406 ], std = [ 0.229 , 0.224 , 0.225 ], ) ]) torchvision_dataset = TorchvisionDataset ( file_paths = [ './images/image_1.jpg' , './images/image_2.jpg' , './images/image_3.jpg' ], labels = [ 1 , 2 , 3 ], transform = torchvision_transform , ) The same pipeline with Albumentations \u00b6 class AlbumentationsDataset ( Dataset ): \"\"\"__init__ and __len__ functions are the same as in TorchvisionDataset\"\"\" def __init__ ( self , file_paths , labels , transform = None ): self . file_paths = file_paths self . labels = labels self . transform = transform def __len__ ( self ): return len ( self . file_paths ) def __getitem__ ( self , idx ): label = self . labels [ idx ] file_path = self . file_paths [ idx ] # Read an image with OpenCV image = cv2 . imread ( file_path ) # By default OpenCV uses BGR color space for color images, # so we need to convert the image to RGB color space. image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) if self . transform : augmented = self . transform ( image = image ) image = augmented [ 'image' ] return image , label albumentations_transform = A . Compose ([ A . Resize ( 256 , 256 ), A . RandomCrop ( 224 , 224 ), A . HorizontalFlip (), A . Normalize ( mean = [ 0.485 , 0.456 , 0.406 ], std = [ 0.229 , 0.224 , 0.225 ], ), ToTensorV2 () ]) albumentations_dataset = AlbumentationsDataset ( file_paths = [ './images/image_1.jpg' , './images/image_2.jpg' , './images/image_3.jpg' ], labels = [ 1 , 2 , 3 ], transform = albumentations_transform , ) Using albumentations with PIL \u00b6 You can use PIL instead of OpenCV while working with Albumentations, but in that case, you need to convert a PIL image to a NumPy array before applying transformations. Them you need to convert the augmented image back from a NumPy array to a PIL image. class AlbumentationsPilDataset ( Dataset ): \"\"\"__init__ and __len__ functions are the same as in TorchvisionDataset\"\"\" def __init__ ( self , file_paths , labels , transform = None ): self . file_paths = file_paths self . labels = labels self . transform = transform def __len__ ( self ): return len ( self . file_paths ) def __getitem__ ( self , idx ): label = self . labels [ idx ] file_path = self . file_paths [ idx ] image = Image . open ( file_path ) if self . transform : # Convert PIL image to numpy array image_np = np . array ( image ) # Apply transformations augmented = self . transform ( image = image_np ) # Convert numpy array to PIL Image image = Image . fromarray ( augmented [ 'image' ]) return image , label albumentations_pil_transform = A . Compose ([ A . Resize ( 256 , 256 ), A . RandomCrop ( 224 , 224 ), A . HorizontalFlip (), ]) # Note that this dataset will output PIL images and not numpy arrays nor PyTorch tensors albumentations_pil_dataset = AlbumentationsPilDataset ( file_paths = [ './images/image_1.jpg' , './images/image_2.jpg' , './images/image_3.jpg' ], labels = [ 1 , 2 , 3 ], transform = albumentations_pil_transform , ) Albumentations equivalents for torchvision transforms \u00b6 torchvision transform albumentations transform albumentations example Compose Compose Compose([Resize(256, 256), RandomCrop(224, 224)]) CenterCrop CenterCrop CenterCrop(256, 256) ColorJitter HueSaturationValue HueSaturationValue(hue_shift_limit=20, sat_shift_limit=30, val_shift_limit=20, p=0.5) Pad PadIfNeeded PadIfNeeded(min_height=512, min_width=512) RandomAffine ShiftScaleRotate ShiftScaleRotate(shift_limit=0.0625, scale_limit=0.1, rotate_limit=45, p=0.5) RandomCrop RandomCrop RandomCrop(256, 256) RandomGrayscale ToGray ToGray(p=0.5) RandomHorizontalFlip HorizontalFlip HorizontalFlip(p=0.5) RandomRotation Rotate Rotate(limit=45, p=0.5) RandomVerticalFlip VerticalFlip VerticalFlip(p=0.5) Resize Resize Resize(256, 256) Normalize Normalize Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])","title":"Migrating from torchvision to Albumentations"},{"location":"examples/migrating_from_torchvision_to_albumentations/#migrating-from-torchvision-to-albumentations","text":"This notebook shows how you can use Albumentations instead of torchvision to perform data augmentation.","title":"Migrating from torchvision to Albumentations"},{"location":"examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries","text":"from PIL import Image import cv2 import numpy as np from torch.utils.data import Dataset from torchvision import transforms import albumentations as A from albumentations.pytorch import ToTensorV2","title":"Import the required libraries"},{"location":"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision","text":"class TorchvisionDataset ( Dataset ): def __init__ ( self , file_paths , labels , transform = None ): self . file_paths = file_paths self . labels = labels self . transform = transform def __len__ ( self ): return len ( self . file_paths ) def __getitem__ ( self , idx ): label = self . labels [ idx ] file_path = self . file_paths [ idx ] # Read an image with PIL image = Image . open ( file_path ) if self . transform : image = self . transform ( image ) return image , label torchvision_transform = transforms . Compose ([ transforms . Resize (( 256 , 256 )), transforms . RandomCrop ( 224 ), transforms . RandomHorizontalFlip (), transforms . ToTensor (), transforms . Normalize ( mean = [ 0.485 , 0.456 , 0.406 ], std = [ 0.229 , 0.224 , 0.225 ], ) ]) torchvision_dataset = TorchvisionDataset ( file_paths = [ './images/image_1.jpg' , './images/image_2.jpg' , './images/image_3.jpg' ], labels = [ 1 , 2 , 3 ], transform = torchvision_transform , )","title":"An example pipeline that uses torchvision"},{"location":"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations","text":"class AlbumentationsDataset ( Dataset ): \"\"\"__init__ and __len__ functions are the same as in TorchvisionDataset\"\"\" def __init__ ( self , file_paths , labels , transform = None ): self . file_paths = file_paths self . labels = labels self . transform = transform def __len__ ( self ): return len ( self . file_paths ) def __getitem__ ( self , idx ): label = self . labels [ idx ] file_path = self . file_paths [ idx ] # Read an image with OpenCV image = cv2 . imread ( file_path ) # By default OpenCV uses BGR color space for color images, # so we need to convert the image to RGB color space. image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) if self . transform : augmented = self . transform ( image = image ) image = augmented [ 'image' ] return image , label albumentations_transform = A . Compose ([ A . Resize ( 256 , 256 ), A . RandomCrop ( 224 , 224 ), A . HorizontalFlip (), A . Normalize ( mean = [ 0.485 , 0.456 , 0.406 ], std = [ 0.229 , 0.224 , 0.225 ], ), ToTensorV2 () ]) albumentations_dataset = AlbumentationsDataset ( file_paths = [ './images/image_1.jpg' , './images/image_2.jpg' , './images/image_3.jpg' ], labels = [ 1 , 2 , 3 ], transform = albumentations_transform , )","title":"The same pipeline with Albumentations"},{"location":"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil","text":"You can use PIL instead of OpenCV while working with Albumentations, but in that case, you need to convert a PIL image to a NumPy array before applying transformations. Them you need to convert the augmented image back from a NumPy array to a PIL image. class AlbumentationsPilDataset ( Dataset ): \"\"\"__init__ and __len__ functions are the same as in TorchvisionDataset\"\"\" def __init__ ( self , file_paths , labels , transform = None ): self . file_paths = file_paths self . labels = labels self . transform = transform def __len__ ( self ): return len ( self . file_paths ) def __getitem__ ( self , idx ): label = self . labels [ idx ] file_path = self . file_paths [ idx ] image = Image . open ( file_path ) if self . transform : # Convert PIL image to numpy array image_np = np . array ( image ) # Apply transformations augmented = self . transform ( image = image_np ) # Convert numpy array to PIL Image image = Image . fromarray ( augmented [ 'image' ]) return image , label albumentations_pil_transform = A . Compose ([ A . Resize ( 256 , 256 ), A . RandomCrop ( 224 , 224 ), A . HorizontalFlip (), ]) # Note that this dataset will output PIL images and not numpy arrays nor PyTorch tensors albumentations_pil_dataset = AlbumentationsPilDataset ( file_paths = [ './images/image_1.jpg' , './images/image_2.jpg' , './images/image_3.jpg' ], labels = [ 1 , 2 , 3 ], transform = albumentations_pil_transform , )","title":"Using albumentations with PIL"},{"location":"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms","text":"torchvision transform albumentations transform albumentations example Compose Compose Compose([Resize(256, 256), RandomCrop(224, 224)]) CenterCrop CenterCrop CenterCrop(256, 256) ColorJitter HueSaturationValue HueSaturationValue(hue_shift_limit=20, sat_shift_limit=30, val_shift_limit=20, p=0.5) Pad PadIfNeeded PadIfNeeded(min_height=512, min_width=512) RandomAffine ShiftScaleRotate ShiftScaleRotate(shift_limit=0.0625, scale_limit=0.1, rotate_limit=45, p=0.5) RandomCrop RandomCrop RandomCrop(256, 256) RandomGrayscale ToGray ToGray(p=0.5) RandomHorizontalFlip HorizontalFlip HorizontalFlip(p=0.5) RandomRotation Rotate Rotate(limit=45, p=0.5) RandomVerticalFlip VerticalFlip VerticalFlip(p=0.5) Resize Resize Resize(256, 256) Normalize Normalize Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])","title":"Albumentations equivalents for torchvision transforms"},{"location":"examples/replay/","text":"(function() { function addWidgetsRenderer() { var mimeElement = document.querySelector('script[type=\"application/vnd.jupyter.widget-view+json\"]'); var scriptElement = document.createElement('script'); var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js'; var widgetState; // Fallback for older version: try { widgetState = mimeElement && JSON.parse(mimeElement.innerHTML); if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) { widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js'; } } catch(e) {} scriptElement.src = widgetRendererSrc; document.body.appendChild(scriptElement); } document.addEventListener('DOMContentLoaded', addWidgetsRenderer); }()); Debugging an augmentation pipeline with ReplayCompose \u00b6 An augmentation pipeline has a lot of randomness inside it. It applies augmentations with some probabilities, and it samples parameters for those augmentations (such as a rotation angle or a level of changing brightness) from a random distribution. It could be very useful for debugging purposes to see which augmentations were applied to the image and look at the parameters of those augmentations. ReplayCompose tracks augmentation parameters. You can inspect those parameters or reapply them to another image. Import the required libraries \u00b6 import random import cv2 import matplotlib.pyplot as plt import albumentations as A Define the visualization function \u00b6 def visualize ( image ): plt . figure ( figsize = ( 10 , 10 )) plt . axis ( 'off' ) plt . imshow ( image ) Load an image from the disk \u00b6 image = cv2 . imread ( 'images/parrot.jpg' ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) visualize ( image ) Declare an augmentation pipeline using ReplayCompose \u00b6 transform = A . ReplayCompose ([ A . Resize ( 512 , 512 , always_apply = True ), A . RandomCrop ( 200 , 200 , always_apply = True ), A . OneOf ([ A . RGBShift (), A . HueSaturationValue () ]), ]) We fix the random seed for visualization purposes, so the augmentation will always produce the same result. In a real computer vision pipeline, you shouldn't fix the random seed before applying a transform to the image because, in that case, the pipeline will always output the same image. The purpose of image augmentation is to use different transformations each time. random . seed ( 7 ) data = transform ( image = image ) visualize ( data [ 'image' ]) data['replay'] contains information about augmentations that ere applied to the image. If applied is True , then the augmentation was applied to the image. params contains information about parameters that were used to transform the image. data [ 'replay' ] {'__class_fullname__': 'albumentations.core.composition.ReplayCompose', 'params': None, 'transforms': [{'__class_fullname__': 'albumentations.augmentations.transforms.Resize', 'always_apply': True, 'p': 1, 'height': 512, 'width': 512, 'interpolation': 1, 'params': {}, 'applied': True}, {'__class_fullname__': 'albumentations.augmentations.transforms.RandomCrop', 'always_apply': True, 'p': 1.0, 'height': 200, 'width': 200, 'params': {'h_start': 0.07243628666754276, 'w_start': 0.5358820043066892}, 'applied': True}, {'__class_fullname__': 'albumentations.core.composition.OneOf', 'params': None, 'transforms': [{'__class_fullname__': 'albumentations.augmentations.transforms.RGBShift', 'always_apply': False, 'p': 0.5, 'r_shift_limit': (-20, 20), 'g_shift_limit': (-20, 20), 'b_shift_limit': (-20, 20), 'params': None, 'applied': False}, {'__class_fullname__': 'albumentations.augmentations.transforms.HueSaturationValue', 'always_apply': False, 'p': 0.5, 'hue_shift_limit': (-20, 20), 'sat_shift_limit': (-30, 30), 'val_shift_limit': (-20, 20), 'params': {'hue_shift': -2.654172653504567, 'sat_shift': -25.808674585522866, 'val_shift': -16.371479466245397}, 'applied': True}], 'applied': True}], 'applied': True} Using ReplayCompose.replay to apply the same augmentations to another image \u00b6 To apply the same set of augmentations to a new target, you can use the ReplayCompose.replay function. Load new images \u00b6 image2 = cv2 . imread ( 'images/image_2.jpg' ) image2 = cv2 . cvtColor ( image2 , cv2 . COLOR_BGR2RGB ) visualize ( image2 ) image3 = cv2 . imread ( 'images/image_3.jpg' ) image3 = cv2 . cvtColor ( image3 , cv2 . COLOR_BGR2RGB ) visualize ( image3 ) Apply augmentations from data['replay'] to those images \u00b6 image2_data = A . ReplayCompose . replay ( data [ 'replay' ], image = image2 ) visualize ( image2_data [ 'image' ]) image3_data = A . ReplayCompose . replay ( data [ 'replay' ], image = image3 ) visualize ( image3_data [ 'image' ])","title":"Debugging an augmentation pipeline with ReplayCompose"},{"location":"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose","text":"An augmentation pipeline has a lot of randomness inside it. It applies augmentations with some probabilities, and it samples parameters for those augmentations (such as a rotation angle or a level of changing brightness) from a random distribution. It could be very useful for debugging purposes to see which augmentations were applied to the image and look at the parameters of those augmentations. ReplayCompose tracks augmentation parameters. You can inspect those parameters or reapply them to another image.","title":"Debugging an augmentation pipeline with ReplayCompose"},{"location":"examples/replay/#import-the-required-libraries","text":"import random import cv2 import matplotlib.pyplot as plt import albumentations as A","title":"Import the required libraries"},{"location":"examples/replay/#define-the-visualization-function","text":"def visualize ( image ): plt . figure ( figsize = ( 10 , 10 )) plt . axis ( 'off' ) plt . imshow ( image )","title":"Define the visualization function"},{"location":"examples/replay/#load-an-image-from-the-disk","text":"image = cv2 . imread ( 'images/parrot.jpg' ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) visualize ( image )","title":"Load an image from the disk"},{"location":"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose","text":"transform = A . ReplayCompose ([ A . Resize ( 512 , 512 , always_apply = True ), A . RandomCrop ( 200 , 200 , always_apply = True ), A . OneOf ([ A . RGBShift (), A . HueSaturationValue () ]), ]) We fix the random seed for visualization purposes, so the augmentation will always produce the same result. In a real computer vision pipeline, you shouldn't fix the random seed before applying a transform to the image because, in that case, the pipeline will always output the same image. The purpose of image augmentation is to use different transformations each time. random . seed ( 7 ) data = transform ( image = image ) visualize ( data [ 'image' ]) data['replay'] contains information about augmentations that ere applied to the image. If applied is True , then the augmentation was applied to the image. params contains information about parameters that were used to transform the image. data [ 'replay' ] {'__class_fullname__': 'albumentations.core.composition.ReplayCompose', 'params': None, 'transforms': [{'__class_fullname__': 'albumentations.augmentations.transforms.Resize', 'always_apply': True, 'p': 1, 'height': 512, 'width': 512, 'interpolation': 1, 'params': {}, 'applied': True}, {'__class_fullname__': 'albumentations.augmentations.transforms.RandomCrop', 'always_apply': True, 'p': 1.0, 'height': 200, 'width': 200, 'params': {'h_start': 0.07243628666754276, 'w_start': 0.5358820043066892}, 'applied': True}, {'__class_fullname__': 'albumentations.core.composition.OneOf', 'params': None, 'transforms': [{'__class_fullname__': 'albumentations.augmentations.transforms.RGBShift', 'always_apply': False, 'p': 0.5, 'r_shift_limit': (-20, 20), 'g_shift_limit': (-20, 20), 'b_shift_limit': (-20, 20), 'params': None, 'applied': False}, {'__class_fullname__': 'albumentations.augmentations.transforms.HueSaturationValue', 'always_apply': False, 'p': 0.5, 'hue_shift_limit': (-20, 20), 'sat_shift_limit': (-30, 30), 'val_shift_limit': (-20, 20), 'params': {'hue_shift': -2.654172653504567, 'sat_shift': -25.808674585522866, 'val_shift': -16.371479466245397}, 'applied': True}], 'applied': True}], 'applied': True}","title":"Declare an augmentation pipeline using ReplayCompose"},{"location":"examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image","text":"To apply the same set of augmentations to a new target, you can use the ReplayCompose.replay function.","title":"Using ReplayCompose.replay to apply the same augmentations to another image"},{"location":"examples/replay/#load-new-images","text":"image2 = cv2 . imread ( 'images/image_2.jpg' ) image2 = cv2 . cvtColor ( image2 , cv2 . COLOR_BGR2RGB ) visualize ( image2 ) image3 = cv2 . imread ( 'images/image_3.jpg' ) image3 = cv2 . cvtColor ( image3 , cv2 . COLOR_BGR2RGB ) visualize ( image3 )","title":"Load new images"},{"location":"examples/replay/#apply-augmentations-from-datareplay-to-those-images","text":"image2_data = A . ReplayCompose . replay ( data [ 'replay' ], image = image2 ) visualize ( image2_data [ 'image' ]) image3_data = A . ReplayCompose . replay ( data [ 'replay' ], image = image3 ) visualize ( image3_data [ 'image' ])","title":"Apply augmentations from data['replay'] to those images"},{"location":"examples/serialization/","text":"(function() { function addWidgetsRenderer() { var mimeElement = document.querySelector('script[type=\"application/vnd.jupyter.widget-view+json\"]'); var scriptElement = document.createElement('script'); var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js'; var widgetState; // Fallback for older version: try { widgetState = mimeElement && JSON.parse(mimeElement.innerHTML); if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) { widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js'; } } catch(e) {} scriptElement.src = widgetRendererSrc; document.body.appendChild(scriptElement); } document.addEventListener('DOMContentLoaded', addWidgetsRenderer); }()); How to save and load parameters of an augmentation pipeline \u00b6 Reproducibility is very important in deep learning. Data scientists and machine learning engineers need a way to save all parameters of deep learning pipelines such as model, optimizer, input datasets, and augmentation parameters and to be able to recreate the same pipeline using that data. Albumentations has built-in functionality to serialize the augmentation parameters and save them. Then you can use those parameters to recreate an augmentation pipeline. Import the required libraries \u00b6 import random import numpy as np import cv2 import matplotlib.pyplot as plt import albumentations as A Define the visualization function \u00b6 def visualize ( image ): plt . figure ( figsize = ( 6 , 6 )) plt . axis ( 'off' ) plt . imshow ( image ) Load an image from the disk \u00b6 image = cv2 . imread ( 'images/parrot.jpg' ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) visualize ( image ) Define an augmentation pipeline that we want to serialize \u00b6 transform = A . Compose ([ A . RandomCrop ( 768 , 768 ), A . OneOf ([ A . RGBShift (), A . HueSaturationValue () ]), ]) We can pass an instance of augmentation to the print function, and it will print the string representation of it. print ( transform ) Compose([ RandomCrop(always_apply=False, p=1.0, height=768, width=768), OneOf([ RGBShift(always_apply=False, p=0.5, r_shift_limit=(-20, 20), g_shift_limit=(-20, 20), b_shift_limit=(-20, 20)), HueSaturationValue(always_apply=False, p=0.5, hue_shift_limit=(-20, 20), sat_shift_limit=(-30, 30), val_shift_limit=(-20, 20)), ], p=0.5), ], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}) Next, we will fix the random seed to make augmentation reproducible for visualization purposes and augment an example image. random . seed ( 42 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ]) Serializing an augmentation pipeline to a JSON or YAML file \u00b6 To save the serialized representation of an augmentation pipeline to a JSON file, use the save function from Albumentations. A . save ( transform , '/tmp/transform.json' ) To load a serialized representation from a JSON file, use the load function from Albumentations. loaded_transform = A . load ( '/tmp/transform.json' ) print ( loaded_transform ) Compose([ RandomCrop(always_apply=False, p=1.0, height=768, width=768), OneOf([ RGBShift(always_apply=False, p=0.5, r_shift_limit=(-20, 20), g_shift_limit=(-20, 20), b_shift_limit=(-20, 20)), HueSaturationValue(always_apply=False, p=0.5, hue_shift_limit=(-20, 20), sat_shift_limit=(-30, 30), val_shift_limit=(-20, 20)), ], p=0.5), ], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}) Next, we will use the same random seed as before and apply the loaded augmentation pipeline to the same image. random . seed ( 42 ) transformed_from_loaded_transform = loaded_transform ( image = image ) visualize ( transformed_from_loaded_transform [ 'image' ]) assert np . array_equal ( transformed [ 'image' ], transformed_from_loaded_transform [ 'image' ]) As you see, it produced the same result. Using YAML insted of JSON \u00b6 You can also use YAML instead of JSON for serializing and deserializing of augmentation pipelines. To do that add the data_format='yaml' argument to the save and load functions. A . save ( transform , '/tmp/transform.yml' , data_format = 'yaml' ) loaded_transform = A . load ( '/tmp/transform.yml' , data_format = 'yaml' ) print ( loaded_transform ) Compose([ RandomCrop(always_apply=False, p=1.0, height=768, width=768), OneOf([ RGBShift(always_apply=False, p=0.5, r_shift_limit=(-20, 20), g_shift_limit=(-20, 20), b_shift_limit=(-20, 20)), HueSaturationValue(always_apply=False, p=0.5, hue_shift_limit=(-20, 20), sat_shift_limit=(-30, 30), val_shift_limit=(-20, 20)), ], p=0.5), ], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}) Serializing an augmentation pipeline to a Python dictionary \u00b6 If you need more control over a serialized pipeline, e.g., you want to save a serialized version to a database or send it to a server you can use the to_dict and from_dict functions. to_dict returns a Python dictionary that describes a pipeline. The dictionary will contain only primitive data types such as dictionaries, lists, strings, integers, and floats. To construct a pipeline from a dictionary, you need to call from_dict . transform_dict = A . to_dict ( transform ) loaded_transform = A . from_dict ( transform_dict ) print ( loaded_transform ) Compose([ RandomCrop(always_apply=False, p=1.0, height=768, width=768), OneOf([ RGBShift(always_apply=False, p=0.5, r_shift_limit=(-20, 20), g_shift_limit=(-20, 20), b_shift_limit=(-20, 20)), HueSaturationValue(always_apply=False, p=0.5, hue_shift_limit=(-20, 20), sat_shift_limit=(-30, 30), val_shift_limit=(-20, 20)), ], p=0.5), ], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}) Serializing and deserializing Lambda transforms \u00b6 Lambda transforms use custom transformation functions provided by a user. For those types of transforms, Albumentations saves only the name and the position in the augmentation pipeline. To deserialize an augmentation pipeline with Lambda transforms, you need to manually provide all Lambda transform instances using the lambda_transforms argument. Let's define a function that we will use to transform an image. def hflip_image ( image , ** kwargs ): return cv2 . flip ( image , 1 ) Next, we create a Lambda transform that will apply the hflip_image function to input images. Note that to make the transform serializable, you need to pass the name argument. hflip = A . Lambda ( name = 'hflip_image' , image = hflip_image , p = 0.5 ) transform = A . Compose ([ hflip ]) print ( transform ) Compose([ Lambda(name='hflip_image', image=<function hflip_image at 0x7feae89a77b8>, mask=<function noop at 0x7fead8ad2268>, keypoint=<function noop at 0x7fead8ad2268>, bbox=<function noop at 0x7fead8ad2268>, always_apply=False, p=0.5), ], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}) To check that transform is working, we will apply to an image. random . seed ( 7 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ]) To serialize a pipeline with a Lambda transform, use the save function as before. A . save ( transform , '/tmp/lambda_transform.json' ) To deserialize a pipeline that contains Lambda transforms, you need to pass names and instances of all Lambda transforms in a pipeline through the lambda_transforms argument. loaded_transform = A . load ( '/tmp/lambda_transform.json' , lambda_transforms = { 'hflip_image' : hflip }) print ( loaded_transform ) Compose([ Lambda(name='hflip_image', image=<function hflip_image at 0x7feae89a77b8>, mask=<function noop at 0x7fead8ad2268>, keypoint=<function noop at 0x7fead8ad2268>, bbox=<function noop at 0x7fead8ad2268>, always_apply=False, p=0.5), ], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}) Verify that the deserialized pipeline produces the same output. random . seed ( 7 ) transformed_from_loaded_transform = loaded_transform ( image = image ) assert np . array_equal ( transformed [ 'image' ], transformed_from_loaded_transform [ 'image' ]) To serialize and deserialize Lambda transforms to and from dictionaries use to_dict and from_dict . transform_dict = A . to_dict ( transform ) print ( transform_dict ) {'__version__': '0.4.5', 'transform': {'__class_fullname__': 'albumentations.core.composition.Compose', 'p': 1.0, 'transforms': [{'__type__': 'Lambda', '__name__': 'hflip_image'}], 'bbox_params': None, 'keypoint_params': None, 'additional_targets': {}}} loaded_transform = A . from_dict ( transform_dict , lambda_transforms = { 'hflip_image' : hflip })","title":"How to save and load parameters of an augmentation pipeline"},{"location":"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline","text":"Reproducibility is very important in deep learning. Data scientists and machine learning engineers need a way to save all parameters of deep learning pipelines such as model, optimizer, input datasets, and augmentation parameters and to be able to recreate the same pipeline using that data. Albumentations has built-in functionality to serialize the augmentation parameters and save them. Then you can use those parameters to recreate an augmentation pipeline.","title":"How to save and load parameters of an augmentation pipeline"},{"location":"examples/serialization/#import-the-required-libraries","text":"import random import numpy as np import cv2 import matplotlib.pyplot as plt import albumentations as A","title":"Import the required libraries"},{"location":"examples/serialization/#define-the-visualization-function","text":"def visualize ( image ): plt . figure ( figsize = ( 6 , 6 )) plt . axis ( 'off' ) plt . imshow ( image )","title":"Define the visualization function"},{"location":"examples/serialization/#load-an-image-from-the-disk","text":"image = cv2 . imread ( 'images/parrot.jpg' ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) visualize ( image )","title":"Load an image from the disk"},{"location":"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize","text":"transform = A . Compose ([ A . RandomCrop ( 768 , 768 ), A . OneOf ([ A . RGBShift (), A . HueSaturationValue () ]), ]) We can pass an instance of augmentation to the print function, and it will print the string representation of it. print ( transform ) Compose([ RandomCrop(always_apply=False, p=1.0, height=768, width=768), OneOf([ RGBShift(always_apply=False, p=0.5, r_shift_limit=(-20, 20), g_shift_limit=(-20, 20), b_shift_limit=(-20, 20)), HueSaturationValue(always_apply=False, p=0.5, hue_shift_limit=(-20, 20), sat_shift_limit=(-30, 30), val_shift_limit=(-20, 20)), ], p=0.5), ], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}) Next, we will fix the random seed to make augmentation reproducible for visualization purposes and augment an example image. random . seed ( 42 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ])","title":"Define an augmentation pipeline that we want to serialize"},{"location":"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file","text":"To save the serialized representation of an augmentation pipeline to a JSON file, use the save function from Albumentations. A . save ( transform , '/tmp/transform.json' ) To load a serialized representation from a JSON file, use the load function from Albumentations. loaded_transform = A . load ( '/tmp/transform.json' ) print ( loaded_transform ) Compose([ RandomCrop(always_apply=False, p=1.0, height=768, width=768), OneOf([ RGBShift(always_apply=False, p=0.5, r_shift_limit=(-20, 20), g_shift_limit=(-20, 20), b_shift_limit=(-20, 20)), HueSaturationValue(always_apply=False, p=0.5, hue_shift_limit=(-20, 20), sat_shift_limit=(-30, 30), val_shift_limit=(-20, 20)), ], p=0.5), ], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}) Next, we will use the same random seed as before and apply the loaded augmentation pipeline to the same image. random . seed ( 42 ) transformed_from_loaded_transform = loaded_transform ( image = image ) visualize ( transformed_from_loaded_transform [ 'image' ]) assert np . array_equal ( transformed [ 'image' ], transformed_from_loaded_transform [ 'image' ]) As you see, it produced the same result.","title":"Serializing an augmentation pipeline to a JSON or YAML file"},{"location":"examples/serialization/#using-yaml-insted-of-json","text":"You can also use YAML instead of JSON for serializing and deserializing of augmentation pipelines. To do that add the data_format='yaml' argument to the save and load functions. A . save ( transform , '/tmp/transform.yml' , data_format = 'yaml' ) loaded_transform = A . load ( '/tmp/transform.yml' , data_format = 'yaml' ) print ( loaded_transform ) Compose([ RandomCrop(always_apply=False, p=1.0, height=768, width=768), OneOf([ RGBShift(always_apply=False, p=0.5, r_shift_limit=(-20, 20), g_shift_limit=(-20, 20), b_shift_limit=(-20, 20)), HueSaturationValue(always_apply=False, p=0.5, hue_shift_limit=(-20, 20), sat_shift_limit=(-30, 30), val_shift_limit=(-20, 20)), ], p=0.5), ], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={})","title":"Using YAML insted of JSON"},{"location":"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary","text":"If you need more control over a serialized pipeline, e.g., you want to save a serialized version to a database or send it to a server you can use the to_dict and from_dict functions. to_dict returns a Python dictionary that describes a pipeline. The dictionary will contain only primitive data types such as dictionaries, lists, strings, integers, and floats. To construct a pipeline from a dictionary, you need to call from_dict . transform_dict = A . to_dict ( transform ) loaded_transform = A . from_dict ( transform_dict ) print ( loaded_transform ) Compose([ RandomCrop(always_apply=False, p=1.0, height=768, width=768), OneOf([ RGBShift(always_apply=False, p=0.5, r_shift_limit=(-20, 20), g_shift_limit=(-20, 20), b_shift_limit=(-20, 20)), HueSaturationValue(always_apply=False, p=0.5, hue_shift_limit=(-20, 20), sat_shift_limit=(-30, 30), val_shift_limit=(-20, 20)), ], p=0.5), ], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={})","title":"Serializing an augmentation pipeline to a Python dictionary"},{"location":"examples/serialization/#serializing-and-deserializing-lambda-transforms","text":"Lambda transforms use custom transformation functions provided by a user. For those types of transforms, Albumentations saves only the name and the position in the augmentation pipeline. To deserialize an augmentation pipeline with Lambda transforms, you need to manually provide all Lambda transform instances using the lambda_transforms argument. Let's define a function that we will use to transform an image. def hflip_image ( image , ** kwargs ): return cv2 . flip ( image , 1 ) Next, we create a Lambda transform that will apply the hflip_image function to input images. Note that to make the transform serializable, you need to pass the name argument. hflip = A . Lambda ( name = 'hflip_image' , image = hflip_image , p = 0.5 ) transform = A . Compose ([ hflip ]) print ( transform ) Compose([ Lambda(name='hflip_image', image=<function hflip_image at 0x7feae89a77b8>, mask=<function noop at 0x7fead8ad2268>, keypoint=<function noop at 0x7fead8ad2268>, bbox=<function noop at 0x7fead8ad2268>, always_apply=False, p=0.5), ], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}) To check that transform is working, we will apply to an image. random . seed ( 7 ) transformed = transform ( image = image ) visualize ( transformed [ 'image' ]) To serialize a pipeline with a Lambda transform, use the save function as before. A . save ( transform , '/tmp/lambda_transform.json' ) To deserialize a pipeline that contains Lambda transforms, you need to pass names and instances of all Lambda transforms in a pipeline through the lambda_transforms argument. loaded_transform = A . load ( '/tmp/lambda_transform.json' , lambda_transforms = { 'hflip_image' : hflip }) print ( loaded_transform ) Compose([ Lambda(name='hflip_image', image=<function hflip_image at 0x7feae89a77b8>, mask=<function noop at 0x7fead8ad2268>, keypoint=<function noop at 0x7fead8ad2268>, bbox=<function noop at 0x7fead8ad2268>, always_apply=False, p=0.5), ], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}) Verify that the deserialized pipeline produces the same output. random . seed ( 7 ) transformed_from_loaded_transform = loaded_transform ( image = image ) assert np . array_equal ( transformed [ 'image' ], transformed_from_loaded_transform [ 'image' ]) To serialize and deserialize Lambda transforms to and from dictionaries use to_dict and from_dict . transform_dict = A . to_dict ( transform ) print ( transform_dict ) {'__version__': '0.4.5', 'transform': {'__class_fullname__': 'albumentations.core.composition.Compose', 'p': 1.0, 'transforms': [{'__type__': 'Lambda', '__name__': 'hflip_image'}], 'bbox_params': None, 'keypoint_params': None, 'additional_targets': {}}} loaded_transform = A . from_dict ( transform_dict , lambda_transforms = { 'hflip_image' : hflip })","title":"Serializing and deserializing Lambda transforms"},{"location":"examples/showcase/","text":"(function() { function addWidgetsRenderer() { var mimeElement = document.querySelector('script[type=\"application/vnd.jupyter.widget-view+json\"]'); var scriptElement = document.createElement('script'); var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js'; var widgetState; // Fallback for older version: try { widgetState = mimeElement && JSON.parse(mimeElement.innerHTML); if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) { widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js'; } } catch(e) {} scriptElement.src = widgetRendererSrc; document.body.appendChild(scriptElement); } document.addEventListener('DOMContentLoaded', addWidgetsRenderer); }()); Showcase. Cool augmentation examples on diverse set of images from various real-world tasks. \u00b6 Import libraries and define helper functions \u00b6 Import the required libraries \u00b6 import os import numpy as np import cv2 from matplotlib import pyplot as plt from skimage.color import label2rgb import albumentations as A import random Define visualization functions \u00b6 BOX_COLOR = ( 255 , 0 , 0 ) # Red TEXT_COLOR = ( 255 , 255 , 255 ) # White def visualize_bbox ( img , bbox , color = BOX_COLOR , thickness = 2 , ** kwargs ): x_min , y_min , w , h = bbox x_min , x_max , y_min , y_max = int ( x_min ), int ( x_min + w ), int ( y_min ), int ( y_min + h ) cv2 . rectangle ( img , ( x_min , y_min ), ( x_max , y_max ), color = color , thickness = thickness ) return img def visualize_titles ( img , bbox , title , color = BOX_COLOR , thickness = 2 , font_thickness = 2 , font_scale = 0.35 , ** kwargs ): x_min , y_min , w , h = bbox x_min , x_max , y_min , y_max = int ( x_min ), int ( x_min + w ), int ( y_min ), int ( y_min + h ) (( text_width , text_height ), _ ) = cv2 . getTextSize ( title , cv2 . FONT_HERSHEY_SIMPLEX , font_scale , font_thickness ) cv2 . rectangle ( img , ( x_min , y_min - int ( 1.3 * text_height )), ( x_min + text_width , y_min ), BOX_COLOR , - 1 ) cv2 . putText ( img , title , ( x_min , y_min - int ( 0.3 * text_height )), cv2 . FONT_HERSHEY_SIMPLEX , font_scale , TEXT_COLOR , font_thickness , lineType = cv2 . LINE_AA ) return img def augment_and_show ( aug , image , mask = None , bboxes = [], categories = [], category_id_to_name = [], filename = None , font_scale_orig = 0.35 , font_scale_aug = 0.35 , show_title = True , ** kwargs ): augmented = aug ( image = image , mask = mask , bboxes = bboxes , category_id = categories ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) image_aug = cv2 . cvtColor ( augmented [ 'image' ], cv2 . COLOR_BGR2RGB ) for bbox in bboxes : visualize_bbox ( image , bbox , ** kwargs ) for bbox in augmented [ 'bboxes' ]: visualize_bbox ( image_aug , bbox , ** kwargs ) if show_title : for bbox , cat_id in zip ( bboxes , categories ): visualize_titles ( image , bbox , category_id_to_name [ cat_id ], font_scale = font_scale_orig , ** kwargs ) for bbox , cat_id in zip ( augmented [ 'bboxes' ], augmented [ 'category_id' ]): visualize_titles ( image_aug , bbox , category_id_to_name [ cat_id ], font_scale = font_scale_aug , ** kwargs ) if mask is None : f , ax = plt . subplots ( 1 , 2 , figsize = ( 16 , 8 )) ax [ 0 ] . imshow ( image ) ax [ 0 ] . set_title ( 'Original image' ) ax [ 1 ] . imshow ( image_aug ) ax [ 1 ] . set_title ( 'Augmented image' ) else : f , ax = plt . subplots ( 2 , 2 , figsize = ( 16 , 16 )) if len ( mask . shape ) != 3 : mask = label2rgb ( mask , bg_label = 0 ) mask_aug = label2rgb ( augmented [ 'mask' ], bg_label = 0 ) else : mask = cv2 . cvtColor ( mask , cv2 . COLOR_BGR2RGB ) mask_aug = cv2 . cvtColor ( augmented [ 'mask' ], cv2 . COLOR_BGR2RGB ) ax [ 0 , 0 ] . imshow ( image ) ax [ 0 , 0 ] . set_title ( 'Original image' ) ax [ 0 , 1 ] . imshow ( image_aug ) ax [ 0 , 1 ] . set_title ( 'Augmented image' ) ax [ 1 , 0 ] . imshow ( mask , interpolation = 'nearest' ) ax [ 1 , 0 ] . set_title ( 'Original mask' ) ax [ 1 , 1 ] . imshow ( mask_aug , interpolation = 'nearest' ) ax [ 1 , 1 ] . set_title ( 'Augmented mask' ) f . tight_layout () if filename is not None : f . savefig ( filename ) return augmented [ 'image' ], augmented [ 'mask' ], augmented [ 'bboxes' ] def find_in_dir ( dirname ): return [ os . path . join ( dirname , fname ) for fname in sorted ( os . listdir ( dirname ))] Color augmentations \u00b6 image = cv2 . imread ( 'images/parrot.jpg' ) random . seed ( 42 ) light = A . Compose ([ A . RandomBrightnessContrast ( p = 1 ), A . RandomGamma ( p = 1 ), A . CLAHE ( p = 1 ), ], p = 1 ) medium = A . Compose ([ A . CLAHE ( p = 1 ), A . HueSaturationValue ( hue_shift_limit = 20 , sat_shift_limit = 50 , val_shift_limit = 50 , p = 1 ), ], p = 1 ) strong = A . Compose ([ A . ChannelShuffle ( p = 1 ), ], p = 1 ) r = augment_and_show ( light , image ) r = augment_and_show ( medium , image ) r = augment_and_show ( strong , image ) Inria Aerial Image Labeling Dataset \u00b6 random . seed ( 42 ) image , mask = cv2 . imread ( 'images/inria/inria_tyrol_w4_image.jpg' ), cv2 . imread ( 'images/inria/inria_tyrol_w4_mask.tif' , cv2 . IMREAD_GRAYSCALE ) image , mask = image [: 1024 , : 1024 ], mask [: 1024 ,: 1024 ] light = A . Compose ([ A . RandomSizedCrop (( 512 - 100 , 512 + 100 ), 512 , 512 ), A . ShiftScaleRotate (), A . RGBShift (), A . Blur (), A . GaussNoise (), A . ElasticTransform (), A . MaskDropout (( 10 , 15 ), p = 1 ), A . Cutout ( p = 1 ) ], p = 1 ) r = augment_and_show ( light , image , mask ) 2018 Data Science Bowl \u00b6 random . seed ( 42 ) image = cv2 . imread ( 'images/dsb2018/1a11552569160f0b1ea10bedbd628ce6c14f29edec5092034c2309c556df833e/images/1a11552569160f0b1ea10bedbd628ce6c14f29edec5092034c2309c556df833e.png' ) masks = [ cv2 . imread ( x , cv2 . IMREAD_GRAYSCALE ) for x in find_in_dir ( 'images/dsb2018/1a11552569160f0b1ea10bedbd628ce6c14f29edec5092034c2309c556df833e/masks' )] bboxes = [ cv2 . boundingRect ( cv2 . findNonZero ( mask )) for mask in masks ] label_image = np . zeros_like ( masks [ 0 ]) for i , mask in enumerate ( masks ): label_image += ( mask > 0 ) . astype ( np . uint8 ) * i light = A . Compose ([ A . RGBShift (), A . InvertImg (), A . Blur (), A . GaussNoise (), A . Flip (), A . RandomRotate90 (), A . RandomSizedCrop (( 512 - 100 , 512 + 100 ), 512 , 512 ), ], bbox_params = { 'format' : 'coco' , 'min_area' : 1 , 'min_visibility' : 0.5 , 'label_fields' : [ 'category_id' ]}, p = 1 ) label_ids = [ 0 ] * len ( bboxes ) label_names = [ 'Nuclei' ] r = augment_and_show ( light , image , label_image , bboxes , label_ids , label_names , show_title = False ) Mapilary Vistas \u00b6 from PIL import Image image = cv2 . imread ( 'images/vistas/_HnWguqEbRCphUquTMrCCA.jpg' ) labels = cv2 . imread ( 'images/vistas/_HnWguqEbRCphUquTMrCCA_labels.png' , cv2 . IMREAD_COLOR ) instances = np . array ( Image . open ( 'images/vistas/_HnWguqEbRCphUquTMrCCA_instances.png' ), dtype = np . uint16 ) IGNORED = 65 * 256 instances [( instances // 256 != 55 ) & ( instances // 256 != 44 ) & ( instances // 256 != 50 )] = IGNORED image = image [ 1000 : 2500 , 1000 : 2500 ] labels = labels [ 1000 : 2500 , 1000 : 2500 ] instances = instances [ 1000 : 2500 , 1000 : 2500 ] bboxes = [ cv2 . boundingRect ( cv2 . findNonZero (( instances == instance_id ) . astype ( np . uint8 ))) for instance_id in np . unique ( instances ) if instance_id != IGNORED ] instance_labels = [ instance_id // 256 for instance_id in np . unique ( instances ) if instance_id != IGNORED ] # coco_bboxes = [list(bbox) + [label] for bbox, label in zip(bboxes, instance_labels)] # coco_bboxes = A.convert_bboxes_to_albumentations(image.shape, coco_bboxes, source_format='coco') titles = [ \"Bird\" , \"Ground Animal\" , \"Curb\" , \"Fence\" , \"Guard Rail\" , \"Barrier\" , \"Wall\" , \"Bike Lane\" , \"Crosswalk - Plain\" , \"Curb Cut\" , \"Parking\" , \"Pedestrian Area\" , \"Rail Track\" , \"Road\" , \"Service Lane\" , \"Sidewalk\" , \"Bridge\" , \"Building\" , \"Tunnel\" , \"Person\" , \"Bicyclist\" , \"Motorcyclist\" , \"Other Rider\" , \"Lane Marking - Crosswalk\" , \"Lane Marking - General\" , \"Mountain\" , \"Sand\" , \"Sky\" , \"Snow\" , \"Terrain\" , \"Vegetation\" , \"Water\" , \"Banner\" , \"Bench\" , \"Bike Rack\" , \"Billboard\" , \"Catch Basin\" , \"CCTV Camera\" , \"Fire Hydrant\" , \"Junction Box\" , \"Mailbox\" , \"Manhole\" , \"Phone Booth\" , \"Pothole\" , \"Street Light\" , \"Pole\" , \"Traffic Sign Frame\" , \"Utility Pole\" , \"Traffic Light\" , \"Traffic Sign (Back)\" , \"Traffic Sign (Front)\" , \"Trash Can\" , \"Bicycle\" , \"Boat\" , \"Bus\" , \"Car\" , \"Caravan\" , \"Motorcycle\" , \"On Rails\" , \"Other Vehicle\" , \"Trailer\" , \"Truck\" , \"Wheeled Slow\" , \"Car Mount\" , \"Ego Vehicle\" , \"Unlabeled\" ] bbox_params = A . BboxParams ( format = 'coco' , min_area = 1 , min_visibility = 0.5 , label_fields = [ 'category_id' ]) light = A . Compose ([ A . HorizontalFlip ( p = 1 ), A . RandomSizedCrop (( 800 - 100 , 800 + 100 ), 600 , 600 ), A . GaussNoise ( var_limit = ( 100 , 150 ), p = 1 ), ], bbox_params = bbox_params , p = 1 ) medium = A . Compose ([ A . HorizontalFlip ( p = 1 ), A . RandomSizedCrop (( 800 - 100 , 800 + 100 ), 600 , 600 ), A . MotionBlur ( blur_limit = 17 , p = 1 ), ], bbox_params = bbox_params , p = 1 ) strong = A . Compose ([ A . HorizontalFlip ( p = 1 ), A . RandomSizedCrop (( 800 - 100 , 800 + 100 ), 600 , 600 ), A . RGBShift ( p = 1 ), A . Blur ( blur_limit = 11 , p = 1 ), A . RandomBrightness ( p = 1 ), A . CLAHE ( p = 1 ), ], bbox_params = bbox_params , p = 1 ) random . seed ( 13 ) r = augment_and_show ( light , image , labels , bboxes , instance_labels , titles , thickness = 2 , font_scale_orig = 2 , font_scale_aug = 1 ) random . seed ( 13 ) r = augment_and_show ( medium , image , labels , bboxes , instance_labels , titles , thickness = 2 , font_scale_orig = 2 , font_scale_aug = 1 ) random . seed ( 13 ) r = augment_and_show ( strong , image , labels , bboxes , instance_labels , titles , thickness = 2 , font_scale_orig = 2 , font_scale_aug = 1 )","title":"Showcase. Cool augmentation examples on diverse set of images from various real-world tasks."},{"location":"examples/showcase/#showcase-cool-augmentation-examples-on-diverse-set-of-images-from-various-real-world-tasks","text":"","title":"Showcase. Cool augmentation examples on diverse set of images from various real-world tasks."},{"location":"examples/showcase/#import-libraries-and-define-helper-functions","text":"","title":"Import libraries and define helper functions"},{"location":"examples/showcase/#import-the-required-libraries","text":"import os import numpy as np import cv2 from matplotlib import pyplot as plt from skimage.color import label2rgb import albumentations as A import random","title":"Import the required libraries"},{"location":"examples/showcase/#define-visualization-functions","text":"BOX_COLOR = ( 255 , 0 , 0 ) # Red TEXT_COLOR = ( 255 , 255 , 255 ) # White def visualize_bbox ( img , bbox , color = BOX_COLOR , thickness = 2 , ** kwargs ): x_min , y_min , w , h = bbox x_min , x_max , y_min , y_max = int ( x_min ), int ( x_min + w ), int ( y_min ), int ( y_min + h ) cv2 . rectangle ( img , ( x_min , y_min ), ( x_max , y_max ), color = color , thickness = thickness ) return img def visualize_titles ( img , bbox , title , color = BOX_COLOR , thickness = 2 , font_thickness = 2 , font_scale = 0.35 , ** kwargs ): x_min , y_min , w , h = bbox x_min , x_max , y_min , y_max = int ( x_min ), int ( x_min + w ), int ( y_min ), int ( y_min + h ) (( text_width , text_height ), _ ) = cv2 . getTextSize ( title , cv2 . FONT_HERSHEY_SIMPLEX , font_scale , font_thickness ) cv2 . rectangle ( img , ( x_min , y_min - int ( 1.3 * text_height )), ( x_min + text_width , y_min ), BOX_COLOR , - 1 ) cv2 . putText ( img , title , ( x_min , y_min - int ( 0.3 * text_height )), cv2 . FONT_HERSHEY_SIMPLEX , font_scale , TEXT_COLOR , font_thickness , lineType = cv2 . LINE_AA ) return img def augment_and_show ( aug , image , mask = None , bboxes = [], categories = [], category_id_to_name = [], filename = None , font_scale_orig = 0.35 , font_scale_aug = 0.35 , show_title = True , ** kwargs ): augmented = aug ( image = image , mask = mask , bboxes = bboxes , category_id = categories ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) image_aug = cv2 . cvtColor ( augmented [ 'image' ], cv2 . COLOR_BGR2RGB ) for bbox in bboxes : visualize_bbox ( image , bbox , ** kwargs ) for bbox in augmented [ 'bboxes' ]: visualize_bbox ( image_aug , bbox , ** kwargs ) if show_title : for bbox , cat_id in zip ( bboxes , categories ): visualize_titles ( image , bbox , category_id_to_name [ cat_id ], font_scale = font_scale_orig , ** kwargs ) for bbox , cat_id in zip ( augmented [ 'bboxes' ], augmented [ 'category_id' ]): visualize_titles ( image_aug , bbox , category_id_to_name [ cat_id ], font_scale = font_scale_aug , ** kwargs ) if mask is None : f , ax = plt . subplots ( 1 , 2 , figsize = ( 16 , 8 )) ax [ 0 ] . imshow ( image ) ax [ 0 ] . set_title ( 'Original image' ) ax [ 1 ] . imshow ( image_aug ) ax [ 1 ] . set_title ( 'Augmented image' ) else : f , ax = plt . subplots ( 2 , 2 , figsize = ( 16 , 16 )) if len ( mask . shape ) != 3 : mask = label2rgb ( mask , bg_label = 0 ) mask_aug = label2rgb ( augmented [ 'mask' ], bg_label = 0 ) else : mask = cv2 . cvtColor ( mask , cv2 . COLOR_BGR2RGB ) mask_aug = cv2 . cvtColor ( augmented [ 'mask' ], cv2 . COLOR_BGR2RGB ) ax [ 0 , 0 ] . imshow ( image ) ax [ 0 , 0 ] . set_title ( 'Original image' ) ax [ 0 , 1 ] . imshow ( image_aug ) ax [ 0 , 1 ] . set_title ( 'Augmented image' ) ax [ 1 , 0 ] . imshow ( mask , interpolation = 'nearest' ) ax [ 1 , 0 ] . set_title ( 'Original mask' ) ax [ 1 , 1 ] . imshow ( mask_aug , interpolation = 'nearest' ) ax [ 1 , 1 ] . set_title ( 'Augmented mask' ) f . tight_layout () if filename is not None : f . savefig ( filename ) return augmented [ 'image' ], augmented [ 'mask' ], augmented [ 'bboxes' ] def find_in_dir ( dirname ): return [ os . path . join ( dirname , fname ) for fname in sorted ( os . listdir ( dirname ))]","title":"Define visualization functions"},{"location":"examples/showcase/#color-augmentations","text":"image = cv2 . imread ( 'images/parrot.jpg' ) random . seed ( 42 ) light = A . Compose ([ A . RandomBrightnessContrast ( p = 1 ), A . RandomGamma ( p = 1 ), A . CLAHE ( p = 1 ), ], p = 1 ) medium = A . Compose ([ A . CLAHE ( p = 1 ), A . HueSaturationValue ( hue_shift_limit = 20 , sat_shift_limit = 50 , val_shift_limit = 50 , p = 1 ), ], p = 1 ) strong = A . Compose ([ A . ChannelShuffle ( p = 1 ), ], p = 1 ) r = augment_and_show ( light , image ) r = augment_and_show ( medium , image ) r = augment_and_show ( strong , image )","title":"Color augmentations"},{"location":"examples/showcase/#inria-aerial-image-labeling-dataset","text":"random . seed ( 42 ) image , mask = cv2 . imread ( 'images/inria/inria_tyrol_w4_image.jpg' ), cv2 . imread ( 'images/inria/inria_tyrol_w4_mask.tif' , cv2 . IMREAD_GRAYSCALE ) image , mask = image [: 1024 , : 1024 ], mask [: 1024 ,: 1024 ] light = A . Compose ([ A . RandomSizedCrop (( 512 - 100 , 512 + 100 ), 512 , 512 ), A . ShiftScaleRotate (), A . RGBShift (), A . Blur (), A . GaussNoise (), A . ElasticTransform (), A . MaskDropout (( 10 , 15 ), p = 1 ), A . Cutout ( p = 1 ) ], p = 1 ) r = augment_and_show ( light , image , mask )","title":"Inria Aerial Image Labeling Dataset"},{"location":"examples/showcase/#2018-data-science-bowl","text":"random . seed ( 42 ) image = cv2 . imread ( 'images/dsb2018/1a11552569160f0b1ea10bedbd628ce6c14f29edec5092034c2309c556df833e/images/1a11552569160f0b1ea10bedbd628ce6c14f29edec5092034c2309c556df833e.png' ) masks = [ cv2 . imread ( x , cv2 . IMREAD_GRAYSCALE ) for x in find_in_dir ( 'images/dsb2018/1a11552569160f0b1ea10bedbd628ce6c14f29edec5092034c2309c556df833e/masks' )] bboxes = [ cv2 . boundingRect ( cv2 . findNonZero ( mask )) for mask in masks ] label_image = np . zeros_like ( masks [ 0 ]) for i , mask in enumerate ( masks ): label_image += ( mask > 0 ) . astype ( np . uint8 ) * i light = A . Compose ([ A . RGBShift (), A . InvertImg (), A . Blur (), A . GaussNoise (), A . Flip (), A . RandomRotate90 (), A . RandomSizedCrop (( 512 - 100 , 512 + 100 ), 512 , 512 ), ], bbox_params = { 'format' : 'coco' , 'min_area' : 1 , 'min_visibility' : 0.5 , 'label_fields' : [ 'category_id' ]}, p = 1 ) label_ids = [ 0 ] * len ( bboxes ) label_names = [ 'Nuclei' ] r = augment_and_show ( light , image , label_image , bboxes , label_ids , label_names , show_title = False )","title":"2018 Data Science Bowl"},{"location":"examples/showcase/#mapilary-vistas","text":"from PIL import Image image = cv2 . imread ( 'images/vistas/_HnWguqEbRCphUquTMrCCA.jpg' ) labels = cv2 . imread ( 'images/vistas/_HnWguqEbRCphUquTMrCCA_labels.png' , cv2 . IMREAD_COLOR ) instances = np . array ( Image . open ( 'images/vistas/_HnWguqEbRCphUquTMrCCA_instances.png' ), dtype = np . uint16 ) IGNORED = 65 * 256 instances [( instances // 256 != 55 ) & ( instances // 256 != 44 ) & ( instances // 256 != 50 )] = IGNORED image = image [ 1000 : 2500 , 1000 : 2500 ] labels = labels [ 1000 : 2500 , 1000 : 2500 ] instances = instances [ 1000 : 2500 , 1000 : 2500 ] bboxes = [ cv2 . boundingRect ( cv2 . findNonZero (( instances == instance_id ) . astype ( np . uint8 ))) for instance_id in np . unique ( instances ) if instance_id != IGNORED ] instance_labels = [ instance_id // 256 for instance_id in np . unique ( instances ) if instance_id != IGNORED ] # coco_bboxes = [list(bbox) + [label] for bbox, label in zip(bboxes, instance_labels)] # coco_bboxes = A.convert_bboxes_to_albumentations(image.shape, coco_bboxes, source_format='coco') titles = [ \"Bird\" , \"Ground Animal\" , \"Curb\" , \"Fence\" , \"Guard Rail\" , \"Barrier\" , \"Wall\" , \"Bike Lane\" , \"Crosswalk - Plain\" , \"Curb Cut\" , \"Parking\" , \"Pedestrian Area\" , \"Rail Track\" , \"Road\" , \"Service Lane\" , \"Sidewalk\" , \"Bridge\" , \"Building\" , \"Tunnel\" , \"Person\" , \"Bicyclist\" , \"Motorcyclist\" , \"Other Rider\" , \"Lane Marking - Crosswalk\" , \"Lane Marking - General\" , \"Mountain\" , \"Sand\" , \"Sky\" , \"Snow\" , \"Terrain\" , \"Vegetation\" , \"Water\" , \"Banner\" , \"Bench\" , \"Bike Rack\" , \"Billboard\" , \"Catch Basin\" , \"CCTV Camera\" , \"Fire Hydrant\" , \"Junction Box\" , \"Mailbox\" , \"Manhole\" , \"Phone Booth\" , \"Pothole\" , \"Street Light\" , \"Pole\" , \"Traffic Sign Frame\" , \"Utility Pole\" , \"Traffic Light\" , \"Traffic Sign (Back)\" , \"Traffic Sign (Front)\" , \"Trash Can\" , \"Bicycle\" , \"Boat\" , \"Bus\" , \"Car\" , \"Caravan\" , \"Motorcycle\" , \"On Rails\" , \"Other Vehicle\" , \"Trailer\" , \"Truck\" , \"Wheeled Slow\" , \"Car Mount\" , \"Ego Vehicle\" , \"Unlabeled\" ] bbox_params = A . BboxParams ( format = 'coco' , min_area = 1 , min_visibility = 0.5 , label_fields = [ 'category_id' ]) light = A . Compose ([ A . HorizontalFlip ( p = 1 ), A . RandomSizedCrop (( 800 - 100 , 800 + 100 ), 600 , 600 ), A . GaussNoise ( var_limit = ( 100 , 150 ), p = 1 ), ], bbox_params = bbox_params , p = 1 ) medium = A . Compose ([ A . HorizontalFlip ( p = 1 ), A . RandomSizedCrop (( 800 - 100 , 800 + 100 ), 600 , 600 ), A . MotionBlur ( blur_limit = 17 , p = 1 ), ], bbox_params = bbox_params , p = 1 ) strong = A . Compose ([ A . HorizontalFlip ( p = 1 ), A . RandomSizedCrop (( 800 - 100 , 800 + 100 ), 600 , 600 ), A . RGBShift ( p = 1 ), A . Blur ( blur_limit = 11 , p = 1 ), A . RandomBrightness ( p = 1 ), A . CLAHE ( p = 1 ), ], bbox_params = bbox_params , p = 1 ) random . seed ( 13 ) r = augment_and_show ( light , image , labels , bboxes , instance_labels , titles , thickness = 2 , font_scale_orig = 2 , font_scale_aug = 1 ) random . seed ( 13 ) r = augment_and_show ( medium , image , labels , bboxes , instance_labels , titles , thickness = 2 , font_scale_orig = 2 , font_scale_aug = 1 ) random . seed ( 13 ) r = augment_and_show ( strong , image , labels , bboxes , instance_labels , titles , thickness = 2 , font_scale_orig = 2 , font_scale_aug = 1 )","title":"Mapilary Vistas"},{"location":"examples/tensorflow-example/","text":"(function() { function addWidgetsRenderer() { var mimeElement = document.querySelector('script[type=\"application/vnd.jupyter.widget-view+json\"]'); var scriptElement = document.createElement('script'); var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js'; var widgetState; // Fallback for older version: try { widgetState = mimeElement && JSON.parse(mimeElement.innerHTML); if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) { widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js'; } } catch(e) {} scriptElement.src = widgetRendererSrc; document.body.appendChild(scriptElement); } document.addEventListener('DOMContentLoaded', addWidgetsRenderer); }()); Using Albumentations with Tensorflow \u00b6 Author : Ayushman Buragohain [Recommended] Update the version of tensorflow_datasets if you want to use it \u00b6 We'll we using an example from tensorflow_datasets . ! pip install -- upgrade tensorflow_datasets Run the example \u00b6 # necessary imports import tensorflow as tf import numpy as np import matplotlib.pyplot as plt import tensorflow_datasets as tfds from functools import partial from albumentations import ( Compose , RandomBrightness , JpegCompression , HueSaturationValue , RandomContrast , HorizontalFlip , Rotate ) AUTOTUNE = tf . data . experimental . AUTOTUNE tfds . __version__ '3.2.1' # load in the tf_flowers dataset data , info = tfds . load ( name = \"tf_flowers\" , split = \"train\" , as_supervised = True , with_info = True ) data WARNING:absl:Dataset tf_flowers is hosted on GCS. It will automatically be downloaded to your local data directory. If you'd instead prefer to read directly from our public GCS bucket (recommended if you're running on GCP), you can instead pass `try_gcs=True` to `tfds.load` or set `data_dir=gs://tfds-data/datasets`. Downloading and preparing dataset tf_flowers/3.0.1 (download: 218.21 MiB, generated: 221.83 MiB, total: 440.05 MiB) to /root/tensorflow_datasets/tf_flowers/3.0.1... var element = $('#ae017742-f500-4f63-aee8-15138a13a9e2'); {\"model_id\": \"b9479fb66ba54448b347bf1197340a60\", \"version_major\": 2, \"version_minor\": 0} Dataset tf_flowers downloaded and prepared to /root/tensorflow_datasets/tf_flowers/3.0.1. Subsequent calls will reuse this data. <PrefetchDataset shapes: ((None, None, 3), ()), types: (tf.uint8, tf.int64)> info tfds.core.DatasetInfo( name='tf_flowers', version=3.0.1, description='A large set of images of flowers', homepage='https://www.tensorflow.org/tutorials/load_data/images', features=FeaturesDict({ 'image': Image(shape=(None, None, 3), dtype=tf.uint8), 'label': ClassLabel(shape=(), dtype=tf.int64, num_classes=5), }), total_num_examples=3670, splits={ 'train': 3670, }, supervised_keys=('image', 'label'), citation=\"\"\"@ONLINE {tfflowers, author = \"The TensorFlow Team\", title = \"Flowers\", month = \"jan\", year = \"2019\", url = \"http://download.tensorflow.org/example_images/flower_photos.tgz\" }\"\"\", redistribution_info=, ) An Example Pipeline Using tf.image \u00b6 Process Data \u00b6 def process_image ( image , label , img_size ): # cast and normalize image image = tf . image . convert_image_dtype ( image , tf . float32 ) # apply simple augmentations image = tf . image . random_flip_left_right ( image ) image = tf . image . resize ( image ,[ img_size , img_size ]) return image , label ds_tf = data . map ( partial ( process_image , img_size = 120 ), num_parallel_calls = AUTOTUNE ) . batch ( 30 ) . prefetch ( AUTOTUNE ) ds_tf <PrefetchDataset shapes: ((None, 120, 120, 3), (None,)), types: (tf.float32, tf.int64)> View images from the dataset \u00b6 def view_image ( ds ): image , label = next ( iter ( ds )) # extract 1 batch from the dataset image = image . numpy () label = label . numpy () fig = plt . figure ( figsize = ( 22 , 22 )) for i in range ( 20 ): ax = fig . add_subplot ( 4 , 5 , i + 1 , xticks = [], yticks = []) ax . imshow ( image [ i ]) ax . set_title ( f \"Label: { label [ i ] } \" ) view_image ( ds_tf ) Using tf.image is very efficient to create a pipeline but the disadvantage is that with tf.image we can only apply limited amounts of augmentations to our input data . One way to solve is issue is to use tf.keras ImageDataGenerator class but albumentations is faster. An Example Pipeline using albumentations \u00b6 To integrate albumentations into our tensorflow pipeline we can create two functions : - Pipeline to apply augmentation . - a function that calls the above function and pass in our data through the pipeline. We can then wrap our 2nd Function under tf.numpy_function . Create Pipeline to Process data \u00b6 # Instantiate augments # we can apply as many augments we want and adjust the values accordingly # here I have chosen the augments and their arguments at random transforms = Compose ([ Rotate ( limit = 40 ), RandomBrightness ( limit = 0.1 ), JpegCompression ( quality_lower = 85 , quality_upper = 100 , p = 0.5 ), HueSaturationValue ( hue_shift_limit = 20 , sat_shift_limit = 30 , val_shift_limit = 20 , p = 0.5 ), RandomContrast ( limit = 0.2 , p = 0.5 ), HorizontalFlip (), ]) def aug_fn ( image , img_size ): data = { \"image\" : image } aug_data = transforms ( ** data ) aug_img = aug_data [ \"image\" ] aug_img = tf . cast ( aug_img / 255.0 , tf . float32 ) aug_img = tf . image . resize ( aug_img , size = [ img_size , img_size ]) return aug_img def process_data ( image , label , img_size ): aug_img = tf . numpy_function ( func = aug_fn , inp = [ image , img_size ], Tout = tf . float32 ) return aug_img , label # create dataset ds_alb = data . map ( partial ( process_data , img_size = 120 ), num_parallel_calls = AUTOTUNE ) . batch ( 32 ) . prefetch ( AUTOTUNE ) ds_alb <PrefetchDataset shapes: (<unknown>, (None,)), types: (tf.float32, tf.int64)> View images from the dataset \u00b6 view_image ( ds_alb ) We can then pass in this dataset to out model and call fit on our model Note : \u00b6 Some API's of tensorflow.keras.Model might not work. Here's what we have tried so far : What works : \u00b6 from tensorflow.keras import models , layers from tensorflow import keras # Running the Model in eager mode using Sequential API def create_model ( input_shape ): return models . Sequential ([ layers . Conv2D ( 32 , ( 3 , 3 ), activation = 'relu' , input_shape = input_shape ), layers . MaxPooling2D (( 2 , 2 )), layers . Conv2D ( 64 , ( 3 , 3 ), activation = 'relu' ), layers . MaxPooling2D (( 2 , 2 )), layers . Conv2D ( 64 , ( 3 , 3 ), activation = 'relu' ), layers . Flatten (), layers . Dense ( 64 , activation = 'relu' ), layers . Dense ( 5 , activation = 'softmax' )]) model = create_model (( 120 , 120 , 3 )) model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' , run_eagerly = True ) model . fit ( ds_alb , epochs = 2 ) Epoch 1/2 115/115 [==============================] - 18s 160ms/step - loss: 1.4029 - accuracy: 0.4022 Epoch 2/2 115/115 [==============================] - 18s 158ms/step - loss: 1.1270 - accuracy: 0.5477 <tensorflow.python.keras.callbacks.History at 0x7f2f311b3dd8> # Functional API input = keras . Input ( shape = ( 120 , 120 , 3 )) x = keras . layers . Conv2D ( 32 , ( 3 , 3 ), activation = \"relu\" )( input ) x = keras . layers . MaxPooling2D (( 2 , 2 ))( x ) x = keras . layers . Conv2D ( 64 , ( 3 , 3 ), activation = 'relu' )( x ) x = keras . layers . MaxPooling2D (( 2 , 2 ))( x ) x = keras . layers . Conv2D ( 64 , ( 3 , 3 ), activation = 'relu' )( x ) x = keras . layers . Flatten ()( x ) x = keras . layers . Dense ( 64 , activation = 'relu' )( x ) x = keras . layers . Dense ( 5 , activation = 'softmax' )( x ) model = keras . Model ( inputs = input , outputs = x ) model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) model . fit ( ds_alb , epochs = 2 ) Epoch 1/2 115/115 [==============================] - 17s 146ms/step - loss: 1.3600 - accuracy: 0.4237 Epoch 2/2 115/115 [==============================] - 17s 147ms/step - loss: 1.1268 - accuracy: 0.5529 <tensorflow.python.keras.callbacks.History at 0x7f2f31131588> # Transfer Learning [freeze base model layers]: Sequential API base_model = keras . applications . ResNet50 ( include_top = False , input_shape = ( 120 , 120 , 3 ), weights = \"imagenet\" ) base_model . trainable = False model = keras . models . Sequential ([ base_model , keras . layers . Conv2D ( 32 , ( 1 , 1 ), activation = \"relu\" ), keras . layers . Dropout ( 0.2 ), keras . layers . Flatten (), keras . layers . Dense ( 64 , activation = 'relu' ), keras . layers . Dense ( 5 , activation = 'softmax' ), ]) model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) model . fit ( ds_alb , epochs = 2 ) Epoch 1/2 115/115 [==============================] - 19s 164ms/step - loss: 1.5246 - accuracy: 0.3237 Epoch 2/2 115/115 [==============================] - 19s 162ms/step - loss: 1.4430 - accuracy: 0.3858 <tensorflow.python.keras.callbacks.History at 0x7f2f2cf227f0> # Transfer Learning [unfreeze all layers]: Sequential API base_model = keras . applications . ResNet50 ( include_top = False , input_shape = ( 120 , 120 , 3 ), weights = \"imagenet\" ) base_model . trainable = True model = keras . models . Sequential ([ base_model , keras . layers . Conv2D ( 32 , ( 1 , 1 ), activation = \"relu\" ), keras . layers . Flatten (), keras . layers . Dense ( 64 , activation = 'relu' ), keras . layers . Dense ( 5 , activation = 'softmax' ), ]) model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) model . fit ( ds_alb , epochs = 2 ) Epoch 1/2 115/115 [==============================] - 23s 203ms/step - loss: 1.1293 - accuracy: 0.5948 Epoch 2/2 115/115 [==============================] - 23s 200ms/step - loss: 0.7932 - accuracy: 0.7117 <tensorflow.python.keras.callbacks.History at 0x7f2f2a5b2b70> # Transfer Learning [freeze all layers of feature extractor]: Functional API base_model = keras . applications . ResNet50 ( include_top = False , input_shape = ( 120 , 120 , 3 ), weights = \"imagenet\" ) base_model . trainable = False input = keras . Input ( shape = ( 120 , 120 , 3 )) x = base_model ( input , training = False ) x = keras . layers . Conv2D ( 32 , ( 1 , 1 ), activation = \"relu\" )( x ) x = keras . layers . Dropout ( 0.2 )( x ) x = keras . layers . Flatten ()( x ) x = keras . layers . Dense ( 64 , activation = 'relu' )( x ) x = keras . layers . Dense ( 5 , activation = 'softmax' )( x ) model = keras . Model ( inputs = input , outputs = x ) model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) model . fit ( ds_alb , epochs = 2 ) Epoch 1/2 115/115 [==============================] - 19s 162ms/step - loss: 1.5423 - accuracy: 0.3155 Epoch 2/2 115/115 [==============================] - 19s 163ms/step - loss: 1.4686 - accuracy: 0.3564 <tensorflow.python.keras.callbacks.History at 0x7f2f276c6048> # Transfer Learning [freeze all layers of feature extractor]: Subclass API base_model = keras . applications . ResNet50 ( include_top = False , input_shape = ( 120 , 120 , 3 ), weights = \"imagenet\" ) base_model . trainable = False class MyModel ( keras . Model ): def __init__ ( self , base_model ): super ( MyModel , self ) . __init__ () self . base = base_model self . layer_1 = keras . layers . Flatten () self . layer_2 = keras . layers . Dense ( 64 , activation = 'relu' ) self . layer_3 = keras . layers . Dense ( 5 , activation = 'softmax' ) @tf . function def call ( self , xb ): x = self . base ( xb ) x = self . layer_1 ( x ) x = self . layer_2 ( x ) x = self . layer_3 ( x ) return x model = MyModel ( base_model = base_model ) model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) model . fit ( ds_alb , epochs = 2 ) Epoch 1/2 115/115 [==============================] - 19s 162ms/step - loss: 1.5470 - accuracy: 0.3387 Epoch 2/2 115/115 [==============================] - 19s 162ms/step - loss: 1.4586 - accuracy: 0.3711 <tensorflow.python.keras.callbacks.History at 0x7f2f252740b8> # Transfer Learning using [unfreeze all layers of feature extractor]: Subclass API base_model = keras . applications . ResNet50 ( include_top = False , input_shape = ( 120 , 120 , 3 ), weights = \"imagenet\" ) base_model . trainable = True class MyModel ( keras . Model ): def __init__ ( self , base_model ): super ( MyModel , self ) . __init__ () self . base = base_model self . layer_1 = keras . layers . Flatten () self . layer_2 = keras . layers . Dense ( 64 , activation = 'relu' ) self . layer_3 = keras . layers . Dense ( 5 , activation = 'softmax' ) @tf . function def call ( self , xb ): x = self . base ( xb ) x = self . layer_1 ( x ) x = self . layer_2 ( x ) x = self . layer_3 ( x ) return x model = MyModel ( base_model = base_model ) model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) model . fit ( ds_alb , epochs = 2 ) Epoch 1/2 115/115 [==============================] - 23s 200ms/step - loss: 1.7783 - accuracy: 0.5621 Epoch 2/2 115/115 [==============================] - 23s 203ms/step - loss: 1.7326 - accuracy: 0.5406 <tensorflow.python.keras.callbacks.History at 0x7f2f2369b208> What won't work : \u00b6 # Using Sequential API without transfer learning & Eager Execution def create_model ( input_shape ): return models . Sequential ([ layers . Conv2D ( 32 , ( 3 , 3 ), activation = 'relu' , input_shape = input_shape ), layers . MaxPooling2D (( 2 , 2 )), layers . Conv2D ( 64 , ( 3 , 3 ), activation = 'relu' ), layers . MaxPooling2D (( 2 , 2 )), layers . Conv2D ( 64 , ( 3 , 3 ), activation = 'relu' ), layers . Flatten (), layers . Dense ( 64 , activation = 'relu' ), layers . Dense ( 5 , activation = 'softmax' )]) model = create_model (( 120 , 120 , 3 )) model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) model . fit ( ds_alb , epochs = 1 ) --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-32-5ad3b36408ec> in <module> () 15 16 model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) ---> 17 model . fit ( ds_alb , epochs = 1 ) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py in _method_wrapper (self, *args, **kwargs) 64 def _method_wrapper ( self , * args , ** kwargs ) : 65 if not self . _in_multi_worker_mode ( ) : # pylint: disable=protected-access ---> 66 return method ( self , * args , ** kwargs ) 67 68 # Running inside `run_distribute_coordinator` already. /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py in fit (self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing) 846 batch_size=batch_size): 847 callbacks . on_train_batch_begin ( step ) --> 848 tmp_logs = train_function ( iterator ) 849 # Catch OutOfRangeError for Datasets of unknown size. 850 # This blocks until the batch has finished executing. /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py in __call__ (self, *args, **kwds) 578 xla_context . Exit ( ) 579 else : --> 580 result = self . _call ( * args , ** kwds ) 581 582 if tracing_count == self . _get_tracing_count ( ) : /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py in _call (self, *args, **kwds) 625 # This is the first call of __call__, so we have to initialize. 626 initializers = [ ] --> 627 self . _initialize ( args , kwds , add_initializers_to = initializers ) 628 finally : 629 # At this point we know that the initialization is complete (or less /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py in _initialize (self, args, kwds, add_initializers_to) 504 self._concrete_stateful_fn = ( 505 self._stateful_fn._get_concrete_function_internal_garbage_collected( # pylint: disable=protected-access --> 506 *args, **kwds)) 507 508 def invalid_creator_scope ( * unused_args , ** unused_kwds ) : /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py in _get_concrete_function_internal_garbage_collected (self, *args, **kwargs) 2444 args , kwargs = None , None 2445 with self . _lock : -> 2446 graph_function , _ , _ = self . _maybe_define_function ( args , kwargs ) 2447 return graph_function 2448 /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py in _maybe_define_function (self, args, kwargs) 2775 2776 self . _function_cache . missed . add ( call_context_key ) -> 2777 graph_function = self . _create_graph_function ( args , kwargs ) 2778 self . _function_cache . primary [ cache_key ] = graph_function 2779 return graph_function , args , kwargs /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py in _create_graph_function (self, args, kwargs, override_flat_arg_shapes) 2665 arg_names = arg_names , 2666 override_flat_arg_shapes = override_flat_arg_shapes , -> 2667 capture_by_value=self._capture_by_value), 2668 self . _function_attributes , 2669 # Tell the ConcreteFunction to clean up its graph once it goes out of /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/func_graph.py in func_graph_from_py_func (name, python_func, args, kwargs, signature, func_graph, autograph, autograph_options, add_control_dependencies, arg_names, op_return_value, collections, capture_by_value, override_flat_arg_shapes) 979 _ , original_func = tf_decorator . unwrap ( python_func ) 980 --> 981 func_outputs = python_func ( * func_args , ** func_kwargs ) 982 983 # invariant: `func_outputs` contains only Tensors, CompositeTensors, /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py in wrapped_fn (*args, **kwds) 439 # __wrapped__ allows AutoGraph to swap in a converted function. We give 440 # the function a weak reference to itself to avoid a reference cycle. --> 441 return weak_wrapped_fn ( ) . __wrapped__ ( * args , ** kwds ) 442 weak_wrapped_fn = weakref . ref ( wrapped_fn ) 443 /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/func_graph.py in wrapper (*args, **kwargs) 966 except Exception as e : # pylint:disable=broad-except 967 if hasattr ( e , \"ag_error_metadata\" ) : --> 968 raise e . ag_error_metadata . to_exception ( e ) 969 else : 970 raise ValueError : in user code: /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py:571 train_function * outputs = self.distribute_strategy.run( /usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/distribute_lib.py:951 run ** return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs) /usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/distribute_lib.py:2290 call_for_each_replica return self._call_for_each_replica(fn, args, kwargs) /usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/distribute_lib.py:2649 _call_for_each_replica return fn(*args, **kwargs) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py:531 train_step ** y_pred = self(x, training=True) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py:886 __call__ self.name) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/input_spec.py:168 assert_input_compatibility layer_name + ' is incompatible with the layer: ' ValueError: Input 0 of layer sequential_7 is incompatible with the layer: its rank is undefined, but the layer requires a defined rank. # Using Subclass API without transfer learning & Eager Execution class MyModel ( keras . Model ): def __init__ ( self ): super ( MyModel , self ) . __init__ () self . conv1 = keras . layers . Conv2D ( 32 , ( 3 , 3 ), activation = 'relu' ) self . pool1 = keras . layers . MaxPooling2D (( 2 , 2 )) self . conv2 = keras . layers . Conv2D ( 64 , ( 3 , 3 ), activation = 'relu' ) self . pool2 = keras . layers . MaxPooling2D (( 2 , 2 )) self . conv3 = keras . layers . Conv2D ( 64 , ( 3 , 3 ), activation = 'relu' ) self . flat = keras . layers . Flatten () self . dense1 = keras . layers . Dense ( 64 , activation = 'relu' ) self . dense2 = keras . layers . Dense ( 5 , activation = 'softmax' ) def call ( self , xb ): x = self . conv1 ( xb ) x = self . pool1 ( x ) x = self . conv2 ( x ) x = self . pool2 ( x ) x = self . conv3 ( x ) x = self . flat ( x ) x = self . dense1 ( x ) x = self . dense2 ( x ) return x model = MyModel () model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) model . fit ( ds_alb , epochs = 1 ) --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-33-77f0bf50d307> in <module> () 29 model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) 30 ---> 31 model . fit ( ds_alb , epochs = 1 ) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py in _method_wrapper (self, *args, **kwargs) 64 def _method_wrapper ( self , * args , ** kwargs ) : 65 if not self . _in_multi_worker_mode ( ) : # pylint: disable=protected-access ---> 66 return method ( self , * args , ** kwargs ) 67 68 # Running inside `run_distribute_coordinator` already. /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py in fit (self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing) 846 batch_size=batch_size): 847 callbacks . on_train_batch_begin ( step ) --> 848 tmp_logs = train_function ( iterator ) 849 # Catch OutOfRangeError for Datasets of unknown size. 850 # This blocks until the batch has finished executing. /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py in __call__ (self, *args, **kwds) 578 xla_context . Exit ( ) 579 else : --> 580 result = self . _call ( * args , ** kwds ) 581 582 if tracing_count == self . _get_tracing_count ( ) : /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py in _call (self, *args, **kwds) 625 # This is the first call of __call__, so we have to initialize. 626 initializers = [ ] --> 627 self . _initialize ( args , kwds , add_initializers_to = initializers ) 628 finally : 629 # At this point we know that the initialization is complete (or less /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py in _initialize (self, args, kwds, add_initializers_to) 504 self._concrete_stateful_fn = ( 505 self._stateful_fn._get_concrete_function_internal_garbage_collected( # pylint: disable=protected-access --> 506 *args, **kwds)) 507 508 def invalid_creator_scope ( * unused_args , ** unused_kwds ) : /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py in _get_concrete_function_internal_garbage_collected (self, *args, **kwargs) 2444 args , kwargs = None , None 2445 with self . _lock : -> 2446 graph_function , _ , _ = self . _maybe_define_function ( args , kwargs ) 2447 return graph_function 2448 /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py in _maybe_define_function (self, args, kwargs) 2775 2776 self . _function_cache . missed . add ( call_context_key ) -> 2777 graph_function = self . _create_graph_function ( args , kwargs ) 2778 self . _function_cache . primary [ cache_key ] = graph_function 2779 return graph_function , args , kwargs /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py in _create_graph_function (self, args, kwargs, override_flat_arg_shapes) 2665 arg_names = arg_names , 2666 override_flat_arg_shapes = override_flat_arg_shapes , -> 2667 capture_by_value=self._capture_by_value), 2668 self . _function_attributes , 2669 # Tell the ConcreteFunction to clean up its graph once it goes out of /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/func_graph.py in func_graph_from_py_func (name, python_func, args, kwargs, signature, func_graph, autograph, autograph_options, add_control_dependencies, arg_names, op_return_value, collections, capture_by_value, override_flat_arg_shapes) 979 _ , original_func = tf_decorator . unwrap ( python_func ) 980 --> 981 func_outputs = python_func ( * func_args , ** func_kwargs ) 982 983 # invariant: `func_outputs` contains only Tensors, CompositeTensors, /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py in wrapped_fn (*args, **kwds) 439 # __wrapped__ allows AutoGraph to swap in a converted function. We give 440 # the function a weak reference to itself to avoid a reference cycle. --> 441 return weak_wrapped_fn ( ) . __wrapped__ ( * args , ** kwds ) 442 weak_wrapped_fn = weakref . ref ( wrapped_fn ) 443 /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/func_graph.py in wrapper (*args, **kwargs) 966 except Exception as e : # pylint:disable=broad-except 967 if hasattr ( e , \"ag_error_metadata\" ) : --> 968 raise e . ag_error_metadata . to_exception ( e ) 969 else : 970 raise ValueError : in user code: /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py:571 train_function * outputs = self.distribute_strategy.run( <ipython-input-23-77f0bf50d307>:16 call * x = self.conv1(xb) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py:886 __call__ ** self.name) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/input_spec.py:168 assert_input_compatibility layer_name + ' is incompatible with the layer: ' ValueError: Input 0 of layer conv2d_27 is incompatible with the layer: its rank is undefined, but the layer requires a defined rank. {\"1a0e5a91eecb4afd9d0f7c7d711451f6\": {\"model_module\": \"@jupyter-widgets/base\", \"model_name\": \"LayoutModel\", \"state\": {\"_model_module\": \"@jupyter-widgets/base\", \"_model_module_version\": \"1.2.0\", \"_model_name\": \"LayoutModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/base\", \"_view_module_version\": \"1.2.0\", \"_view_name\": \"LayoutView\", \"align_content\": null, \"align_items\": null, \"align_self\": null, \"border\": null, \"bottom\": null, \"display\": null, \"flex\": null, \"flex_flow\": null, \"grid_area\": null, \"grid_auto_columns\": null, \"grid_auto_flow\": null, \"grid_auto_rows\": null, \"grid_column\": null, \"grid_gap\": null, \"grid_row\": null, \"grid_template_areas\": null, \"grid_template_columns\": null, \"grid_template_rows\": null, \"height\": null, \"justify_content\": null, \"justify_items\": null, \"left\": null, \"margin\": null, \"max_height\": null, \"max_width\": null, \"min_height\": null, \"min_width\": null, \"object_fit\": null, \"object_position\": null, \"order\": null, \"overflow\": null, \"overflow_x\": null, \"overflow_y\": null, \"padding\": null, \"right\": null, \"top\": null, \"visibility\": null, \"width\": null}}, \"3e99d9d6a9cc498a8f6721e1fa056f71\": {\"model_module\": \"@jupyter-widgets/controls\", \"model_name\": \"DescriptionStyleModel\", \"state\": {\"_model_module\": \"@jupyter-widgets/controls\", \"_model_module_version\": \"1.5.0\", \"_model_name\": \"DescriptionStyleModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/base\", \"_view_module_version\": \"1.2.0\", \"_view_name\": \"StyleView\", \"description_width\": \"\"}}, \"b9479fb66ba54448b347bf1197340a60\": {\"model_module\": \"@jupyter-widgets/controls\", \"model_name\": \"HBoxModel\", \"state\": {\"_dom_classes\": [], \"_model_module\": \"@jupyter-widgets/controls\", \"_model_module_version\": \"1.5.0\", \"_model_name\": \"HBoxModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/controls\", \"_view_module_version\": \"1.5.0\", \"_view_name\": \"HBoxView\", \"box_style\": \"\", \"children\": [\"IPY_MODEL_dee763d01b544bc085bf150a3ee6df39\", \"IPY_MODEL_d7440ea51f4d48f4ba9f796f17c50694\"], \"layout\": \"IPY_MODEL_eb1a387f74dd47cfad2c6b90deb572f9\"}}, \"b9da9110e05a4770931ab8dbb85b6cc4\": {\"model_module\": \"@jupyter-widgets/controls\", \"model_name\": \"ProgressStyleModel\", \"state\": {\"_model_module\": \"@jupyter-widgets/controls\", \"_model_module_version\": \"1.5.0\", \"_model_name\": \"ProgressStyleModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/base\", \"_view_module_version\": \"1.2.0\", \"_view_name\": \"StyleView\", \"bar_color\": null, \"description_width\": \"initial\"}}, \"d7440ea51f4d48f4ba9f796f17c50694\": {\"model_module\": \"@jupyter-widgets/controls\", \"model_name\": \"HTMLModel\", \"state\": {\"_dom_classes\": [], \"_model_module\": \"@jupyter-widgets/controls\", \"_model_module_version\": \"1.5.0\", \"_model_name\": \"HTMLModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/controls\", \"_view_module_version\": \"1.5.0\", \"_view_name\": \"HTMLView\", \"description\": \"\", \"description_tooltip\": null, \"layout\": \"IPY_MODEL_1a0e5a91eecb4afd9d0f7c7d711451f6\", \"placeholder\": \"\\u200b\", \"style\": \"IPY_MODEL_3e99d9d6a9cc498a8f6721e1fa056f71\", \"value\": \" 5/5 [05:14&lt;00:00, 62.93s/ file]\"}}, \"dee763d01b544bc085bf150a3ee6df39\": {\"model_module\": \"@jupyter-widgets/controls\", \"model_name\": \"FloatProgressModel\", \"state\": {\"_dom_classes\": [], \"_model_module\": \"@jupyter-widgets/controls\", \"_model_module_version\": \"1.5.0\", \"_model_name\": \"FloatProgressModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/controls\", \"_view_module_version\": \"1.5.0\", \"_view_name\": \"ProgressView\", \"bar_style\": \"success\", \"description\": \"Dl Completed...: 100%\", \"description_tooltip\": null, \"layout\": \"IPY_MODEL_e0e2099e64e34a938ad70dd66da111e2\", \"max\": 5, \"min\": 0, \"orientation\": \"horizontal\", \"style\": \"IPY_MODEL_b9da9110e05a4770931ab8dbb85b6cc4\", \"value\": 5}}, \"e0e2099e64e34a938ad70dd66da111e2\": {\"model_module\": \"@jupyter-widgets/base\", \"model_name\": \"LayoutModel\", \"state\": {\"_model_module\": \"@jupyter-widgets/base\", \"_model_module_version\": \"1.2.0\", \"_model_name\": \"LayoutModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/base\", \"_view_module_version\": \"1.2.0\", \"_view_name\": \"LayoutView\", \"align_content\": null, \"align_items\": null, \"align_self\": null, \"border\": null, \"bottom\": null, \"display\": null, \"flex\": null, \"flex_flow\": null, \"grid_area\": null, \"grid_auto_columns\": null, \"grid_auto_flow\": null, \"grid_auto_rows\": null, \"grid_column\": null, \"grid_gap\": null, \"grid_row\": null, \"grid_template_areas\": null, \"grid_template_columns\": null, \"grid_template_rows\": null, \"height\": null, \"justify_content\": null, \"justify_items\": null, \"left\": null, \"margin\": null, \"max_height\": null, \"max_width\": null, \"min_height\": null, \"min_width\": null, \"object_fit\": null, \"object_position\": null, \"order\": null, \"overflow\": null, \"overflow_x\": null, \"overflow_y\": null, \"padding\": null, \"right\": null, \"top\": null, \"visibility\": null, \"width\": null}}, \"eb1a387f74dd47cfad2c6b90deb572f9\": {\"model_module\": \"@jupyter-widgets/base\", \"model_name\": \"LayoutModel\", \"state\": {\"_model_module\": \"@jupyter-widgets/base\", \"_model_module_version\": \"1.2.0\", \"_model_name\": \"LayoutModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/base\", \"_view_module_version\": \"1.2.0\", \"_view_name\": \"LayoutView\", \"align_content\": null, \"align_items\": null, \"align_self\": null, \"border\": null, \"bottom\": null, \"display\": null, \"flex\": null, \"flex_flow\": null, \"grid_area\": null, \"grid_auto_columns\": null, \"grid_auto_flow\": null, \"grid_auto_rows\": null, \"grid_column\": null, \"grid_gap\": null, \"grid_row\": null, \"grid_template_areas\": null, \"grid_template_columns\": null, \"grid_template_rows\": null, \"height\": null, \"justify_content\": null, \"justify_items\": null, \"left\": null, \"margin\": null, \"max_height\": null, \"max_width\": null, \"min_height\": null, \"min_width\": null, \"object_fit\": null, \"object_position\": null, \"order\": null, \"overflow\": null, \"overflow_x\": null, \"overflow_y\": null, \"padding\": null, \"right\": null, \"top\": null, \"visibility\": null, \"width\": null}}}","title":"Using Albumentations with Tensorflow"},{"location":"examples/tensorflow-example/#using-albumentations-with-tensorflow","text":"Author : Ayushman Buragohain","title":"Using Albumentations with Tensorflow"},{"location":"examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it","text":"We'll we using an example from tensorflow_datasets . ! pip install -- upgrade tensorflow_datasets","title":"[Recommended] Update the version of tensorflow_datasets if you want to use it"},{"location":"examples/tensorflow-example/#run-the-example","text":"# necessary imports import tensorflow as tf import numpy as np import matplotlib.pyplot as plt import tensorflow_datasets as tfds from functools import partial from albumentations import ( Compose , RandomBrightness , JpegCompression , HueSaturationValue , RandomContrast , HorizontalFlip , Rotate ) AUTOTUNE = tf . data . experimental . AUTOTUNE tfds . __version__ '3.2.1' # load in the tf_flowers dataset data , info = tfds . load ( name = \"tf_flowers\" , split = \"train\" , as_supervised = True , with_info = True ) data WARNING:absl:Dataset tf_flowers is hosted on GCS. It will automatically be downloaded to your local data directory. If you'd instead prefer to read directly from our public GCS bucket (recommended if you're running on GCP), you can instead pass `try_gcs=True` to `tfds.load` or set `data_dir=gs://tfds-data/datasets`. Downloading and preparing dataset tf_flowers/3.0.1 (download: 218.21 MiB, generated: 221.83 MiB, total: 440.05 MiB) to /root/tensorflow_datasets/tf_flowers/3.0.1... var element = $('#ae017742-f500-4f63-aee8-15138a13a9e2'); {\"model_id\": \"b9479fb66ba54448b347bf1197340a60\", \"version_major\": 2, \"version_minor\": 0} Dataset tf_flowers downloaded and prepared to /root/tensorflow_datasets/tf_flowers/3.0.1. Subsequent calls will reuse this data. <PrefetchDataset shapes: ((None, None, 3), ()), types: (tf.uint8, tf.int64)> info tfds.core.DatasetInfo( name='tf_flowers', version=3.0.1, description='A large set of images of flowers', homepage='https://www.tensorflow.org/tutorials/load_data/images', features=FeaturesDict({ 'image': Image(shape=(None, None, 3), dtype=tf.uint8), 'label': ClassLabel(shape=(), dtype=tf.int64, num_classes=5), }), total_num_examples=3670, splits={ 'train': 3670, }, supervised_keys=('image', 'label'), citation=\"\"\"@ONLINE {tfflowers, author = \"The TensorFlow Team\", title = \"Flowers\", month = \"jan\", year = \"2019\", url = \"http://download.tensorflow.org/example_images/flower_photos.tgz\" }\"\"\", redistribution_info=, )","title":"Run the example"},{"location":"examples/tensorflow-example/#an-example-pipeline-using-tfimage","text":"","title":"An Example Pipeline Using tf.image"},{"location":"examples/tensorflow-example/#process-data","text":"def process_image ( image , label , img_size ): # cast and normalize image image = tf . image . convert_image_dtype ( image , tf . float32 ) # apply simple augmentations image = tf . image . random_flip_left_right ( image ) image = tf . image . resize ( image ,[ img_size , img_size ]) return image , label ds_tf = data . map ( partial ( process_image , img_size = 120 ), num_parallel_calls = AUTOTUNE ) . batch ( 30 ) . prefetch ( AUTOTUNE ) ds_tf <PrefetchDataset shapes: ((None, 120, 120, 3), (None,)), types: (tf.float32, tf.int64)>","title":"Process Data"},{"location":"examples/tensorflow-example/#view-images-from-the-dataset","text":"def view_image ( ds ): image , label = next ( iter ( ds )) # extract 1 batch from the dataset image = image . numpy () label = label . numpy () fig = plt . figure ( figsize = ( 22 , 22 )) for i in range ( 20 ): ax = fig . add_subplot ( 4 , 5 , i + 1 , xticks = [], yticks = []) ax . imshow ( image [ i ]) ax . set_title ( f \"Label: { label [ i ] } \" ) view_image ( ds_tf ) Using tf.image is very efficient to create a pipeline but the disadvantage is that with tf.image we can only apply limited amounts of augmentations to our input data . One way to solve is issue is to use tf.keras ImageDataGenerator class but albumentations is faster.","title":"View images from the dataset"},{"location":"examples/tensorflow-example/#an-example-pipeline-using-albumentations","text":"To integrate albumentations into our tensorflow pipeline we can create two functions : - Pipeline to apply augmentation . - a function that calls the above function and pass in our data through the pipeline. We can then wrap our 2nd Function under tf.numpy_function .","title":"An Example Pipeline using albumentations"},{"location":"examples/tensorflow-example/#create-pipeline-to-process-data","text":"# Instantiate augments # we can apply as many augments we want and adjust the values accordingly # here I have chosen the augments and their arguments at random transforms = Compose ([ Rotate ( limit = 40 ), RandomBrightness ( limit = 0.1 ), JpegCompression ( quality_lower = 85 , quality_upper = 100 , p = 0.5 ), HueSaturationValue ( hue_shift_limit = 20 , sat_shift_limit = 30 , val_shift_limit = 20 , p = 0.5 ), RandomContrast ( limit = 0.2 , p = 0.5 ), HorizontalFlip (), ]) def aug_fn ( image , img_size ): data = { \"image\" : image } aug_data = transforms ( ** data ) aug_img = aug_data [ \"image\" ] aug_img = tf . cast ( aug_img / 255.0 , tf . float32 ) aug_img = tf . image . resize ( aug_img , size = [ img_size , img_size ]) return aug_img def process_data ( image , label , img_size ): aug_img = tf . numpy_function ( func = aug_fn , inp = [ image , img_size ], Tout = tf . float32 ) return aug_img , label # create dataset ds_alb = data . map ( partial ( process_data , img_size = 120 ), num_parallel_calls = AUTOTUNE ) . batch ( 32 ) . prefetch ( AUTOTUNE ) ds_alb <PrefetchDataset shapes: (<unknown>, (None,)), types: (tf.float32, tf.int64)>","title":"Create Pipeline to Process data"},{"location":"examples/tensorflow-example/#view-images-from-the-dataset_1","text":"view_image ( ds_alb ) We can then pass in this dataset to out model and call fit on our model","title":"View images from the dataset"},{"location":"examples/tensorflow-example/#note","text":"Some API's of tensorflow.keras.Model might not work. Here's what we have tried so far :","title":"Note:"},{"location":"examples/tensorflow-example/#what-works","text":"from tensorflow.keras import models , layers from tensorflow import keras # Running the Model in eager mode using Sequential API def create_model ( input_shape ): return models . Sequential ([ layers . Conv2D ( 32 , ( 3 , 3 ), activation = 'relu' , input_shape = input_shape ), layers . MaxPooling2D (( 2 , 2 )), layers . Conv2D ( 64 , ( 3 , 3 ), activation = 'relu' ), layers . MaxPooling2D (( 2 , 2 )), layers . Conv2D ( 64 , ( 3 , 3 ), activation = 'relu' ), layers . Flatten (), layers . Dense ( 64 , activation = 'relu' ), layers . Dense ( 5 , activation = 'softmax' )]) model = create_model (( 120 , 120 , 3 )) model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' , run_eagerly = True ) model . fit ( ds_alb , epochs = 2 ) Epoch 1/2 115/115 [==============================] - 18s 160ms/step - loss: 1.4029 - accuracy: 0.4022 Epoch 2/2 115/115 [==============================] - 18s 158ms/step - loss: 1.1270 - accuracy: 0.5477 <tensorflow.python.keras.callbacks.History at 0x7f2f311b3dd8> # Functional API input = keras . Input ( shape = ( 120 , 120 , 3 )) x = keras . layers . Conv2D ( 32 , ( 3 , 3 ), activation = \"relu\" )( input ) x = keras . layers . MaxPooling2D (( 2 , 2 ))( x ) x = keras . layers . Conv2D ( 64 , ( 3 , 3 ), activation = 'relu' )( x ) x = keras . layers . MaxPooling2D (( 2 , 2 ))( x ) x = keras . layers . Conv2D ( 64 , ( 3 , 3 ), activation = 'relu' )( x ) x = keras . layers . Flatten ()( x ) x = keras . layers . Dense ( 64 , activation = 'relu' )( x ) x = keras . layers . Dense ( 5 , activation = 'softmax' )( x ) model = keras . Model ( inputs = input , outputs = x ) model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) model . fit ( ds_alb , epochs = 2 ) Epoch 1/2 115/115 [==============================] - 17s 146ms/step - loss: 1.3600 - accuracy: 0.4237 Epoch 2/2 115/115 [==============================] - 17s 147ms/step - loss: 1.1268 - accuracy: 0.5529 <tensorflow.python.keras.callbacks.History at 0x7f2f31131588> # Transfer Learning [freeze base model layers]: Sequential API base_model = keras . applications . ResNet50 ( include_top = False , input_shape = ( 120 , 120 , 3 ), weights = \"imagenet\" ) base_model . trainable = False model = keras . models . Sequential ([ base_model , keras . layers . Conv2D ( 32 , ( 1 , 1 ), activation = \"relu\" ), keras . layers . Dropout ( 0.2 ), keras . layers . Flatten (), keras . layers . Dense ( 64 , activation = 'relu' ), keras . layers . Dense ( 5 , activation = 'softmax' ), ]) model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) model . fit ( ds_alb , epochs = 2 ) Epoch 1/2 115/115 [==============================] - 19s 164ms/step - loss: 1.5246 - accuracy: 0.3237 Epoch 2/2 115/115 [==============================] - 19s 162ms/step - loss: 1.4430 - accuracy: 0.3858 <tensorflow.python.keras.callbacks.History at 0x7f2f2cf227f0> # Transfer Learning [unfreeze all layers]: Sequential API base_model = keras . applications . ResNet50 ( include_top = False , input_shape = ( 120 , 120 , 3 ), weights = \"imagenet\" ) base_model . trainable = True model = keras . models . Sequential ([ base_model , keras . layers . Conv2D ( 32 , ( 1 , 1 ), activation = \"relu\" ), keras . layers . Flatten (), keras . layers . Dense ( 64 , activation = 'relu' ), keras . layers . Dense ( 5 , activation = 'softmax' ), ]) model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) model . fit ( ds_alb , epochs = 2 ) Epoch 1/2 115/115 [==============================] - 23s 203ms/step - loss: 1.1293 - accuracy: 0.5948 Epoch 2/2 115/115 [==============================] - 23s 200ms/step - loss: 0.7932 - accuracy: 0.7117 <tensorflow.python.keras.callbacks.History at 0x7f2f2a5b2b70> # Transfer Learning [freeze all layers of feature extractor]: Functional API base_model = keras . applications . ResNet50 ( include_top = False , input_shape = ( 120 , 120 , 3 ), weights = \"imagenet\" ) base_model . trainable = False input = keras . Input ( shape = ( 120 , 120 , 3 )) x = base_model ( input , training = False ) x = keras . layers . Conv2D ( 32 , ( 1 , 1 ), activation = \"relu\" )( x ) x = keras . layers . Dropout ( 0.2 )( x ) x = keras . layers . Flatten ()( x ) x = keras . layers . Dense ( 64 , activation = 'relu' )( x ) x = keras . layers . Dense ( 5 , activation = 'softmax' )( x ) model = keras . Model ( inputs = input , outputs = x ) model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) model . fit ( ds_alb , epochs = 2 ) Epoch 1/2 115/115 [==============================] - 19s 162ms/step - loss: 1.5423 - accuracy: 0.3155 Epoch 2/2 115/115 [==============================] - 19s 163ms/step - loss: 1.4686 - accuracy: 0.3564 <tensorflow.python.keras.callbacks.History at 0x7f2f276c6048> # Transfer Learning [freeze all layers of feature extractor]: Subclass API base_model = keras . applications . ResNet50 ( include_top = False , input_shape = ( 120 , 120 , 3 ), weights = \"imagenet\" ) base_model . trainable = False class MyModel ( keras . Model ): def __init__ ( self , base_model ): super ( MyModel , self ) . __init__ () self . base = base_model self . layer_1 = keras . layers . Flatten () self . layer_2 = keras . layers . Dense ( 64 , activation = 'relu' ) self . layer_3 = keras . layers . Dense ( 5 , activation = 'softmax' ) @tf . function def call ( self , xb ): x = self . base ( xb ) x = self . layer_1 ( x ) x = self . layer_2 ( x ) x = self . layer_3 ( x ) return x model = MyModel ( base_model = base_model ) model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) model . fit ( ds_alb , epochs = 2 ) Epoch 1/2 115/115 [==============================] - 19s 162ms/step - loss: 1.5470 - accuracy: 0.3387 Epoch 2/2 115/115 [==============================] - 19s 162ms/step - loss: 1.4586 - accuracy: 0.3711 <tensorflow.python.keras.callbacks.History at 0x7f2f252740b8> # Transfer Learning using [unfreeze all layers of feature extractor]: Subclass API base_model = keras . applications . ResNet50 ( include_top = False , input_shape = ( 120 , 120 , 3 ), weights = \"imagenet\" ) base_model . trainable = True class MyModel ( keras . Model ): def __init__ ( self , base_model ): super ( MyModel , self ) . __init__ () self . base = base_model self . layer_1 = keras . layers . Flatten () self . layer_2 = keras . layers . Dense ( 64 , activation = 'relu' ) self . layer_3 = keras . layers . Dense ( 5 , activation = 'softmax' ) @tf . function def call ( self , xb ): x = self . base ( xb ) x = self . layer_1 ( x ) x = self . layer_2 ( x ) x = self . layer_3 ( x ) return x model = MyModel ( base_model = base_model ) model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) model . fit ( ds_alb , epochs = 2 ) Epoch 1/2 115/115 [==============================] - 23s 200ms/step - loss: 1.7783 - accuracy: 0.5621 Epoch 2/2 115/115 [==============================] - 23s 203ms/step - loss: 1.7326 - accuracy: 0.5406 <tensorflow.python.keras.callbacks.History at 0x7f2f2369b208>","title":"What works :"},{"location":"examples/tensorflow-example/#what-wont-work","text":"# Using Sequential API without transfer learning & Eager Execution def create_model ( input_shape ): return models . Sequential ([ layers . Conv2D ( 32 , ( 3 , 3 ), activation = 'relu' , input_shape = input_shape ), layers . MaxPooling2D (( 2 , 2 )), layers . Conv2D ( 64 , ( 3 , 3 ), activation = 'relu' ), layers . MaxPooling2D (( 2 , 2 )), layers . Conv2D ( 64 , ( 3 , 3 ), activation = 'relu' ), layers . Flatten (), layers . Dense ( 64 , activation = 'relu' ), layers . Dense ( 5 , activation = 'softmax' )]) model = create_model (( 120 , 120 , 3 )) model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) model . fit ( ds_alb , epochs = 1 ) --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-32-5ad3b36408ec> in <module> () 15 16 model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) ---> 17 model . fit ( ds_alb , epochs = 1 ) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py in _method_wrapper (self, *args, **kwargs) 64 def _method_wrapper ( self , * args , ** kwargs ) : 65 if not self . _in_multi_worker_mode ( ) : # pylint: disable=protected-access ---> 66 return method ( self , * args , ** kwargs ) 67 68 # Running inside `run_distribute_coordinator` already. /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py in fit (self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing) 846 batch_size=batch_size): 847 callbacks . on_train_batch_begin ( step ) --> 848 tmp_logs = train_function ( iterator ) 849 # Catch OutOfRangeError for Datasets of unknown size. 850 # This blocks until the batch has finished executing. /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py in __call__ (self, *args, **kwds) 578 xla_context . Exit ( ) 579 else : --> 580 result = self . _call ( * args , ** kwds ) 581 582 if tracing_count == self . _get_tracing_count ( ) : /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py in _call (self, *args, **kwds) 625 # This is the first call of __call__, so we have to initialize. 626 initializers = [ ] --> 627 self . _initialize ( args , kwds , add_initializers_to = initializers ) 628 finally : 629 # At this point we know that the initialization is complete (or less /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py in _initialize (self, args, kwds, add_initializers_to) 504 self._concrete_stateful_fn = ( 505 self._stateful_fn._get_concrete_function_internal_garbage_collected( # pylint: disable=protected-access --> 506 *args, **kwds)) 507 508 def invalid_creator_scope ( * unused_args , ** unused_kwds ) : /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py in _get_concrete_function_internal_garbage_collected (self, *args, **kwargs) 2444 args , kwargs = None , None 2445 with self . _lock : -> 2446 graph_function , _ , _ = self . _maybe_define_function ( args , kwargs ) 2447 return graph_function 2448 /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py in _maybe_define_function (self, args, kwargs) 2775 2776 self . _function_cache . missed . add ( call_context_key ) -> 2777 graph_function = self . _create_graph_function ( args , kwargs ) 2778 self . _function_cache . primary [ cache_key ] = graph_function 2779 return graph_function , args , kwargs /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py in _create_graph_function (self, args, kwargs, override_flat_arg_shapes) 2665 arg_names = arg_names , 2666 override_flat_arg_shapes = override_flat_arg_shapes , -> 2667 capture_by_value=self._capture_by_value), 2668 self . _function_attributes , 2669 # Tell the ConcreteFunction to clean up its graph once it goes out of /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/func_graph.py in func_graph_from_py_func (name, python_func, args, kwargs, signature, func_graph, autograph, autograph_options, add_control_dependencies, arg_names, op_return_value, collections, capture_by_value, override_flat_arg_shapes) 979 _ , original_func = tf_decorator . unwrap ( python_func ) 980 --> 981 func_outputs = python_func ( * func_args , ** func_kwargs ) 982 983 # invariant: `func_outputs` contains only Tensors, CompositeTensors, /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py in wrapped_fn (*args, **kwds) 439 # __wrapped__ allows AutoGraph to swap in a converted function. We give 440 # the function a weak reference to itself to avoid a reference cycle. --> 441 return weak_wrapped_fn ( ) . __wrapped__ ( * args , ** kwds ) 442 weak_wrapped_fn = weakref . ref ( wrapped_fn ) 443 /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/func_graph.py in wrapper (*args, **kwargs) 966 except Exception as e : # pylint:disable=broad-except 967 if hasattr ( e , \"ag_error_metadata\" ) : --> 968 raise e . ag_error_metadata . to_exception ( e ) 969 else : 970 raise ValueError : in user code: /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py:571 train_function * outputs = self.distribute_strategy.run( /usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/distribute_lib.py:951 run ** return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs) /usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/distribute_lib.py:2290 call_for_each_replica return self._call_for_each_replica(fn, args, kwargs) /usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/distribute_lib.py:2649 _call_for_each_replica return fn(*args, **kwargs) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py:531 train_step ** y_pred = self(x, training=True) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py:886 __call__ self.name) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/input_spec.py:168 assert_input_compatibility layer_name + ' is incompatible with the layer: ' ValueError: Input 0 of layer sequential_7 is incompatible with the layer: its rank is undefined, but the layer requires a defined rank. # Using Subclass API without transfer learning & Eager Execution class MyModel ( keras . Model ): def __init__ ( self ): super ( MyModel , self ) . __init__ () self . conv1 = keras . layers . Conv2D ( 32 , ( 3 , 3 ), activation = 'relu' ) self . pool1 = keras . layers . MaxPooling2D (( 2 , 2 )) self . conv2 = keras . layers . Conv2D ( 64 , ( 3 , 3 ), activation = 'relu' ) self . pool2 = keras . layers . MaxPooling2D (( 2 , 2 )) self . conv3 = keras . layers . Conv2D ( 64 , ( 3 , 3 ), activation = 'relu' ) self . flat = keras . layers . Flatten () self . dense1 = keras . layers . Dense ( 64 , activation = 'relu' ) self . dense2 = keras . layers . Dense ( 5 , activation = 'softmax' ) def call ( self , xb ): x = self . conv1 ( xb ) x = self . pool1 ( x ) x = self . conv2 ( x ) x = self . pool2 ( x ) x = self . conv3 ( x ) x = self . flat ( x ) x = self . dense1 ( x ) x = self . dense2 ( x ) return x model = MyModel () model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) model . fit ( ds_alb , epochs = 1 ) --------------------------------------------------------------------------- ValueError Traceback (most recent call last) <ipython-input-33-77f0bf50d307> in <module> () 29 model . compile ( optimizer = 'adam' , loss = 'sparse_categorical_crossentropy' , metrics = 'accuracy' ) 30 ---> 31 model . fit ( ds_alb , epochs = 1 ) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py in _method_wrapper (self, *args, **kwargs) 64 def _method_wrapper ( self , * args , ** kwargs ) : 65 if not self . _in_multi_worker_mode ( ) : # pylint: disable=protected-access ---> 66 return method ( self , * args , ** kwargs ) 67 68 # Running inside `run_distribute_coordinator` already. /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py in fit (self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing) 846 batch_size=batch_size): 847 callbacks . on_train_batch_begin ( step ) --> 848 tmp_logs = train_function ( iterator ) 849 # Catch OutOfRangeError for Datasets of unknown size. 850 # This blocks until the batch has finished executing. /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py in __call__ (self, *args, **kwds) 578 xla_context . Exit ( ) 579 else : --> 580 result = self . _call ( * args , ** kwds ) 581 582 if tracing_count == self . _get_tracing_count ( ) : /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py in _call (self, *args, **kwds) 625 # This is the first call of __call__, so we have to initialize. 626 initializers = [ ] --> 627 self . _initialize ( args , kwds , add_initializers_to = initializers ) 628 finally : 629 # At this point we know that the initialization is complete (or less /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py in _initialize (self, args, kwds, add_initializers_to) 504 self._concrete_stateful_fn = ( 505 self._stateful_fn._get_concrete_function_internal_garbage_collected( # pylint: disable=protected-access --> 506 *args, **kwds)) 507 508 def invalid_creator_scope ( * unused_args , ** unused_kwds ) : /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py in _get_concrete_function_internal_garbage_collected (self, *args, **kwargs) 2444 args , kwargs = None , None 2445 with self . _lock : -> 2446 graph_function , _ , _ = self . _maybe_define_function ( args , kwargs ) 2447 return graph_function 2448 /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py in _maybe_define_function (self, args, kwargs) 2775 2776 self . _function_cache . missed . add ( call_context_key ) -> 2777 graph_function = self . _create_graph_function ( args , kwargs ) 2778 self . _function_cache . primary [ cache_key ] = graph_function 2779 return graph_function , args , kwargs /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py in _create_graph_function (self, args, kwargs, override_flat_arg_shapes) 2665 arg_names = arg_names , 2666 override_flat_arg_shapes = override_flat_arg_shapes , -> 2667 capture_by_value=self._capture_by_value), 2668 self . _function_attributes , 2669 # Tell the ConcreteFunction to clean up its graph once it goes out of /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/func_graph.py in func_graph_from_py_func (name, python_func, args, kwargs, signature, func_graph, autograph, autograph_options, add_control_dependencies, arg_names, op_return_value, collections, capture_by_value, override_flat_arg_shapes) 979 _ , original_func = tf_decorator . unwrap ( python_func ) 980 --> 981 func_outputs = python_func ( * func_args , ** func_kwargs ) 982 983 # invariant: `func_outputs` contains only Tensors, CompositeTensors, /usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py in wrapped_fn (*args, **kwds) 439 # __wrapped__ allows AutoGraph to swap in a converted function. We give 440 # the function a weak reference to itself to avoid a reference cycle. --> 441 return weak_wrapped_fn ( ) . __wrapped__ ( * args , ** kwds ) 442 weak_wrapped_fn = weakref . ref ( wrapped_fn ) 443 /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/func_graph.py in wrapper (*args, **kwargs) 966 except Exception as e : # pylint:disable=broad-except 967 if hasattr ( e , \"ag_error_metadata\" ) : --> 968 raise e . ag_error_metadata . to_exception ( e ) 969 else : 970 raise ValueError : in user code: /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py:571 train_function * outputs = self.distribute_strategy.run( <ipython-input-23-77f0bf50d307>:16 call * x = self.conv1(xb) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py:886 __call__ ** self.name) /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/input_spec.py:168 assert_input_compatibility layer_name + ' is incompatible with the layer: ' ValueError: Input 0 of layer conv2d_27 is incompatible with the layer: its rank is undefined, but the layer requires a defined rank. {\"1a0e5a91eecb4afd9d0f7c7d711451f6\": {\"model_module\": \"@jupyter-widgets/base\", \"model_name\": \"LayoutModel\", \"state\": {\"_model_module\": \"@jupyter-widgets/base\", \"_model_module_version\": \"1.2.0\", \"_model_name\": \"LayoutModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/base\", \"_view_module_version\": \"1.2.0\", \"_view_name\": \"LayoutView\", \"align_content\": null, \"align_items\": null, \"align_self\": null, \"border\": null, \"bottom\": null, \"display\": null, \"flex\": null, \"flex_flow\": null, \"grid_area\": null, \"grid_auto_columns\": null, \"grid_auto_flow\": null, \"grid_auto_rows\": null, \"grid_column\": null, \"grid_gap\": null, \"grid_row\": null, \"grid_template_areas\": null, \"grid_template_columns\": null, \"grid_template_rows\": null, \"height\": null, \"justify_content\": null, \"justify_items\": null, \"left\": null, \"margin\": null, \"max_height\": null, \"max_width\": null, \"min_height\": null, \"min_width\": null, \"object_fit\": null, \"object_position\": null, \"order\": null, \"overflow\": null, \"overflow_x\": null, \"overflow_y\": null, \"padding\": null, \"right\": null, \"top\": null, \"visibility\": null, \"width\": null}}, \"3e99d9d6a9cc498a8f6721e1fa056f71\": {\"model_module\": \"@jupyter-widgets/controls\", \"model_name\": \"DescriptionStyleModel\", \"state\": {\"_model_module\": \"@jupyter-widgets/controls\", \"_model_module_version\": \"1.5.0\", \"_model_name\": \"DescriptionStyleModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/base\", \"_view_module_version\": \"1.2.0\", \"_view_name\": \"StyleView\", \"description_width\": \"\"}}, \"b9479fb66ba54448b347bf1197340a60\": {\"model_module\": \"@jupyter-widgets/controls\", \"model_name\": \"HBoxModel\", \"state\": {\"_dom_classes\": [], \"_model_module\": \"@jupyter-widgets/controls\", \"_model_module_version\": \"1.5.0\", \"_model_name\": \"HBoxModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/controls\", \"_view_module_version\": \"1.5.0\", \"_view_name\": \"HBoxView\", \"box_style\": \"\", \"children\": [\"IPY_MODEL_dee763d01b544bc085bf150a3ee6df39\", \"IPY_MODEL_d7440ea51f4d48f4ba9f796f17c50694\"], \"layout\": \"IPY_MODEL_eb1a387f74dd47cfad2c6b90deb572f9\"}}, \"b9da9110e05a4770931ab8dbb85b6cc4\": {\"model_module\": \"@jupyter-widgets/controls\", \"model_name\": \"ProgressStyleModel\", \"state\": {\"_model_module\": \"@jupyter-widgets/controls\", \"_model_module_version\": \"1.5.0\", \"_model_name\": \"ProgressStyleModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/base\", \"_view_module_version\": \"1.2.0\", \"_view_name\": \"StyleView\", \"bar_color\": null, \"description_width\": \"initial\"}}, \"d7440ea51f4d48f4ba9f796f17c50694\": {\"model_module\": \"@jupyter-widgets/controls\", \"model_name\": \"HTMLModel\", \"state\": {\"_dom_classes\": [], \"_model_module\": \"@jupyter-widgets/controls\", \"_model_module_version\": \"1.5.0\", \"_model_name\": \"HTMLModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/controls\", \"_view_module_version\": \"1.5.0\", \"_view_name\": \"HTMLView\", \"description\": \"\", \"description_tooltip\": null, \"layout\": \"IPY_MODEL_1a0e5a91eecb4afd9d0f7c7d711451f6\", \"placeholder\": \"\\u200b\", \"style\": \"IPY_MODEL_3e99d9d6a9cc498a8f6721e1fa056f71\", \"value\": \" 5/5 [05:14&lt;00:00, 62.93s/ file]\"}}, \"dee763d01b544bc085bf150a3ee6df39\": {\"model_module\": \"@jupyter-widgets/controls\", \"model_name\": \"FloatProgressModel\", \"state\": {\"_dom_classes\": [], \"_model_module\": \"@jupyter-widgets/controls\", \"_model_module_version\": \"1.5.0\", \"_model_name\": \"FloatProgressModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/controls\", \"_view_module_version\": \"1.5.0\", \"_view_name\": \"ProgressView\", \"bar_style\": \"success\", \"description\": \"Dl Completed...: 100%\", \"description_tooltip\": null, \"layout\": \"IPY_MODEL_e0e2099e64e34a938ad70dd66da111e2\", \"max\": 5, \"min\": 0, \"orientation\": \"horizontal\", \"style\": \"IPY_MODEL_b9da9110e05a4770931ab8dbb85b6cc4\", \"value\": 5}}, \"e0e2099e64e34a938ad70dd66da111e2\": {\"model_module\": \"@jupyter-widgets/base\", \"model_name\": \"LayoutModel\", \"state\": {\"_model_module\": \"@jupyter-widgets/base\", \"_model_module_version\": \"1.2.0\", \"_model_name\": \"LayoutModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/base\", \"_view_module_version\": \"1.2.0\", \"_view_name\": \"LayoutView\", \"align_content\": null, \"align_items\": null, \"align_self\": null, \"border\": null, \"bottom\": null, \"display\": null, \"flex\": null, \"flex_flow\": null, \"grid_area\": null, \"grid_auto_columns\": null, \"grid_auto_flow\": null, \"grid_auto_rows\": null, \"grid_column\": null, \"grid_gap\": null, \"grid_row\": null, \"grid_template_areas\": null, \"grid_template_columns\": null, \"grid_template_rows\": null, \"height\": null, \"justify_content\": null, \"justify_items\": null, \"left\": null, \"margin\": null, \"max_height\": null, \"max_width\": null, \"min_height\": null, \"min_width\": null, \"object_fit\": null, \"object_position\": null, \"order\": null, \"overflow\": null, \"overflow_x\": null, \"overflow_y\": null, \"padding\": null, \"right\": null, \"top\": null, \"visibility\": null, \"width\": null}}, \"eb1a387f74dd47cfad2c6b90deb572f9\": {\"model_module\": \"@jupyter-widgets/base\", \"model_name\": \"LayoutModel\", \"state\": {\"_model_module\": \"@jupyter-widgets/base\", \"_model_module_version\": \"1.2.0\", \"_model_name\": \"LayoutModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/base\", \"_view_module_version\": \"1.2.0\", \"_view_name\": \"LayoutView\", \"align_content\": null, \"align_items\": null, \"align_self\": null, \"border\": null, \"bottom\": null, \"display\": null, \"flex\": null, \"flex_flow\": null, \"grid_area\": null, \"grid_auto_columns\": null, \"grid_auto_flow\": null, \"grid_auto_rows\": null, \"grid_column\": null, \"grid_gap\": null, \"grid_row\": null, \"grid_template_areas\": null, \"grid_template_columns\": null, \"grid_template_rows\": null, \"height\": null, \"justify_content\": null, \"justify_items\": null, \"left\": null, \"margin\": null, \"max_height\": null, \"max_width\": null, \"min_height\": null, \"min_width\": null, \"object_fit\": null, \"object_position\": null, \"order\": null, \"overflow\": null, \"overflow_x\": null, \"overflow_y\": null, \"padding\": null, \"right\": null, \"top\": null, \"visibility\": null, \"width\": null}}}","title":"What won't work :"},{"location":"experimental/installation/","text":"Installation \u00b6 Albumentations Experimental requires Python 3.5 or higher. Install the latest stable version from PyPI \u00b6 pip install -U albumentations_experimental Install the latest version from the master branch on GitHub \u00b6 pip install -U git+https://github.com/albumentations-team/albumentations_experimental","title":"Installation"},{"location":"experimental/installation/#installation","text":"Albumentations Experimental requires Python 3.5 or higher.","title":"Installation"},{"location":"experimental/installation/#install-the-latest-stable-version-from-pypi","text":"pip install -U albumentations_experimental","title":"Install the latest stable version from PyPI"},{"location":"experimental/installation/#install-the-latest-version-from-the-master-branch-on-github","text":"pip install -U git+https://github.com/albumentations-team/albumentations_experimental","title":"Install the latest version from the master branch on GitHub"},{"location":"experimental/overview/","text":"Overview \u00b6 The Albumentations Experimental library provides experimental and cutting edge augmentation techniques on top of Albumentations. The source code is available at https://github.com/albumentations-team/albumentations_experimental . Why a separate library \u00b6 Albumentations provides stable and well-tested interfaces for performing augmentations. We don't want to pollute the library with features that may be prone to rapid changes in interfaces and behavior since they could break users' pipelines. But we also want to implement new, experimental features and see whether they will be useful. So we created Albumentations Experimental, a library that will help us to iterate faster and remove the need for striving for backward compatibility and rigorous testing. Beware, that each new version of Albumentations Experimental may contain backward-incompatible changes both in interfaces and behavior. When features in Albumentations Experimental are mature enough, we will port them to the main library with all our usual policies such as rigorous testing, extensive documentation, and stable behavior. Documentation \u00b6 API Reference Transforms (albumentations_experimental.augmentations.transforms)","title":"Overview"},{"location":"experimental/overview/#overview","text":"The Albumentations Experimental library provides experimental and cutting edge augmentation techniques on top of Albumentations. The source code is available at https://github.com/albumentations-team/albumentations_experimental .","title":"Overview"},{"location":"experimental/overview/#why-a-separate-library","text":"Albumentations provides stable and well-tested interfaces for performing augmentations. We don't want to pollute the library with features that may be prone to rapid changes in interfaces and behavior since they could break users' pipelines. But we also want to implement new, experimental features and see whether they will be useful. So we created Albumentations Experimental, a library that will help us to iterate faster and remove the need for striving for backward compatibility and rigorous testing. Beware, that each new version of Albumentations Experimental may contain backward-incompatible changes both in interfaces and behavior. When features in Albumentations Experimental are mature enough, we will port them to the main library with all our usual policies such as rigorous testing, extensive documentation, and stable behavior.","title":"Why a separate library"},{"location":"experimental/overview/#documentation","text":"API Reference Transforms (albumentations_experimental.augmentations.transforms)","title":"Documentation"},{"location":"experimental/api_reference/augmentations/transforms/","text":"Albumentations Experimental Transforms (augmentations.transforms) \u00b6 \u00b6 class albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints ( symmetric_keypoints_horizontal = (), symmetric_keypoints_vertical = (), symmetric_keypoints_both = (), * args , ** kwargs ) [view source on GitHub] \u00b6 Flip the input horizontally around the y-axis. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. symmetric_keypoints_horizontal tuple, list, dict tuple of pairs containing indices of symmetric keypoints. Keypoints are considered as symmetric if horizontal flip swaps their semantics, e.g. left arm - right arm. If keypoint does not have pair then set as it is own index. Kyepoints length must be divisible to symmetric count. For example 5 symmetric pairs and 15 keypoints. symmetric_keypoints_vertical tuple, list, dict tuple of pairs containing indices of symmetric keypoints. Keypoints are considered as symmetric if vertical flip swaps their semantics, e.g. top corner - bottom corner. If keypoint does not have pair then set as it is own index. Kyepoints length must be divisible to symmetric count. For example 5 symmetric pairs and 15 keypoints. symmetric_keypoints_both tuple, list, dict tuple of pairs containing indices of symmetric keypoints. Keypoints are considered as symmetric if vertical and horizontal flip swaps their semantics, e.g. top left corner - bottom right corner. If keypoint does not have pair then set as it is own index. Kyepoints length must be divisible to symmetric count. For example 5 symmetric pairs and 15 keypoints. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 class albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints ( symmetric_keypoints , * args , ** kwargs ) [view source on GitHub] \u00b6 Flip the input horizontally around the y-axis. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. symmetric_keypoints tuple, list, dict tuple of pairs containing indices of symmetric keypoints. Keypoints are considered as symmetric if horizontal flip swaps their semantics, e.g. left arm - right arm. If keypoint does not have pair then set as it is own index. Kyepoints length must be divisible to symmetric count. For example 5 symmetric pairs and 15 keypoints. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 class albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints ( symmetric_keypoints = (), * args , ** kwargs ) [view source on GitHub] \u00b6 Flip the input horizontally around the y-axis. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. symmetric_keypoints tuple, list, dict tuple of pairs containing indices of symmetric keypoints. Keypoints are considered as symmetric if vertical and horizontal flip swaps their semantics, e.g. top left corner - bottom right corner. If keypoint does not have pair then set as it is own index. Kyepoints length must be divisible to symmetric count. For example 5 symmetric pairs and 15 keypoints. Targets: image, mask, bboxes, keypoints Image types: uint8, float32 class albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints ( symmetric_keypoints , * args , ** kwargs ) [view source on GitHub] \u00b6 Flip the input vertically around the x-axis. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. symmetric_keypoints tuple, list, dict tuple of pairs containing indices of symmetric keypoints. Keypoints are considered as symmetric if vertical flip swaps their semantics, e.g. top corner - bottom corner. If keypoint does not have pair then set as it is own index. Kyepoints length must be divisible to symmetric count. For example 5 symmetric pairs and 15 keypoints. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"Albumentations Experimental Transforms (augmentations.transforms)"},{"location":"experimental/api_reference/augmentations/transforms/#albumentations-experimental-transforms-augmentationstransforms","text":"","title":"Albumentations Experimental Transforms (augmentations.transforms)"},{"location":"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms","text":"","title":"albumentations_experimental.augmentations.transforms"},{"location":"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints","text":"Flip the input horizontally around the y-axis. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. symmetric_keypoints_horizontal tuple, list, dict tuple of pairs containing indices of symmetric keypoints. Keypoints are considered as symmetric if horizontal flip swaps their semantics, e.g. left arm - right arm. If keypoint does not have pair then set as it is own index. Kyepoints length must be divisible to symmetric count. For example 5 symmetric pairs and 15 keypoints. symmetric_keypoints_vertical tuple, list, dict tuple of pairs containing indices of symmetric keypoints. Keypoints are considered as symmetric if vertical flip swaps their semantics, e.g. top corner - bottom corner. If keypoint does not have pair then set as it is own index. Kyepoints length must be divisible to symmetric count. For example 5 symmetric pairs and 15 keypoints. symmetric_keypoints_both tuple, list, dict tuple of pairs containing indices of symmetric keypoints. Keypoints are considered as symmetric if vertical and horizontal flip swaps their semantics, e.g. top left corner - bottom right corner. If keypoint does not have pair then set as it is own index. Kyepoints length must be divisible to symmetric count. For example 5 symmetric pairs and 15 keypoints. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"FlipSymmetricKeypoints"},{"location":"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints","text":"Flip the input horizontally around the y-axis. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. symmetric_keypoints tuple, list, dict tuple of pairs containing indices of symmetric keypoints. Keypoints are considered as symmetric if horizontal flip swaps their semantics, e.g. left arm - right arm. If keypoint does not have pair then set as it is own index. Kyepoints length must be divisible to symmetric count. For example 5 symmetric pairs and 15 keypoints. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"HorizontalFlipSymmetricKeypoints"},{"location":"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints","text":"Flip the input horizontally around the y-axis. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. symmetric_keypoints tuple, list, dict tuple of pairs containing indices of symmetric keypoints. Keypoints are considered as symmetric if vertical and horizontal flip swaps their semantics, e.g. top left corner - bottom right corner. If keypoint does not have pair then set as it is own index. Kyepoints length must be divisible to symmetric count. For example 5 symmetric pairs and 15 keypoints. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"TransposeSymmetricKeypoints"},{"location":"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints","text":"Flip the input vertically around the x-axis. Parameters: Name Type Description p float probability of applying the transform. Default: 0.5. symmetric_keypoints tuple, list, dict tuple of pairs containing indices of symmetric keypoints. Keypoints are considered as symmetric if vertical flip swaps their semantics, e.g. top corner - bottom corner. If keypoint does not have pair then set as it is own index. Kyepoints length must be divisible to symmetric count. For example 5 symmetric pairs and 15 keypoints. Targets: image, mask, bboxes, keypoints Image types: uint8, float32","title":"VerticalFlipSymmetricKeypoints"},{"location":"external_resources/blog_posts_podcasts_talks/","text":"Blog posts, podcasts and talks about Albumentations \u00b6 Blog posts \u00b6 Custom Image Augmentation with Keras. Solving CIFAR-10 with Albumentations and TPU on Google Colab. . Road detection using segmentation models and albumentations libraries on Keras . Image Data Augmentation for TensorFlow 2, Keras and PyTorch with Albumentations in Python Explore image augmentations using a convenient tool Image Augmentation using PyTorch and Albumentations Employing the albumentation library in PyTorch workflows. Bonus: Helper for selecting appropriate values! Podcasts and talks \u00b6 PyConBY 2020: Eugene Khvedchenya - Albumentations: Fast and Flexible image augmentations Albumentations Framework: a fast image augmentations library | Interview with Dr. Vladimir Iglovikov Image Data Augmentation for TensorFlow 2, Keras and PyTorch with Albumentations in Python Bengali.AI competition - Ch 5. Image augmentations using albumentations","title":"Blog posts, podcasts and talks about Albumentations"},{"location":"external_resources/blog_posts_podcasts_talks/#blog-posts-podcasts-and-talks-about-albumentations","text":"","title":"Blog posts, podcasts and talks about Albumentations"},{"location":"external_resources/blog_posts_podcasts_talks/#blog-posts","text":"Custom Image Augmentation with Keras. Solving CIFAR-10 with Albumentations and TPU on Google Colab. . Road detection using segmentation models and albumentations libraries on Keras . Image Data Augmentation for TensorFlow 2, Keras and PyTorch with Albumentations in Python Explore image augmentations using a convenient tool Image Augmentation using PyTorch and Albumentations Employing the albumentation library in PyTorch workflows. Bonus: Helper for selecting appropriate values!","title":"Blog posts"},{"location":"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks","text":"PyConBY 2020: Eugene Khvedchenya - Albumentations: Fast and Flexible image augmentations Albumentations Framework: a fast image augmentations library | Interview with Dr. Vladimir Iglovikov Image Data Augmentation for TensorFlow 2, Keras and PyTorch with Albumentations in Python Bengali.AI competition - Ch 5. Image augmentations using albumentations","title":"Podcasts and talks"},{"location":"external_resources/books/","text":"Books that mention Albumentations \u00b6 Deep Learning For Dummies . John Paul Mueller, Luca Massaron. May 2019. Data Science Programming All-in-One For Dummies . John Paul Mueller, Luca Massaron. January 2020. PyTorch Computer Vision Cookbook . Michael Avendi. March 2020.","title":"Books that mention Albumentations"},{"location":"external_resources/books/#books-that-mention-albumentations","text":"Deep Learning For Dummies . John Paul Mueller, Luca Massaron. May 2019. Data Science Programming All-in-One For Dummies . John Paul Mueller, Luca Massaron. January 2020. PyTorch Computer Vision Cookbook . Michael Avendi. March 2020.","title":"Books that mention Albumentations"},{"location":"getting_started/bounding_boxes_augmentation/","text":"Bounding boxes augmentation for object detection \u00b6 Different annotations formats \u00b6 Bounding boxes are rectangles that mark objects on an image. There are multiple formats of bounding boxes annotations. Each format uses its specific representation of bouning boxes coordinates. Albumentations supports four formats: pascal_voc , albumentations , coco , and yolo . Let's take a look at each of those formats and how they represent coordinates of bounding boxes. As an example, we will use an image from the dataset named Common Objects in Context . It contains one bounding box that marks a cat. The image width is 640 pixels, and its height is 480 pixels. The width of the bounding box is 322 pixels, and its height is 117 pixels. The bounding box has the following (x, y) coordinates of its corners: top-left is (x_min, y_min) or (98px, 345px) , top-right is (x_max, y_min) or (420px, 345px) , bottom-left is (x_min, y_max) or (98px, 462px) , bottom-right is (x_max, y_max) or (420px, 462px) . As you see, coordinates of the bounding box's corners are calculated with respect to the top-left corner of the image which has (x, y) coordinates (0, 0) . An example image with a bounding box from the COCO dataset pascal_voc \u00b6 pascal_voc is a format used by the Pascal VOC dataset . Coordinates of a bounding box are encoded with four values in pixels: [x_min, y_min, x_max, y_max] . x_min and y_min are coordinates of the top-left corner of the bounding box. x_max and y_max are coordinates of bottom-right corner of the bounding box. Coordinates of the example bounding box in this format are [98, 345, 420, 462] . albumentations \u00b6 albumentations is similar to pascal_voc , because it also uses four values [x_min, y_min, x_max, y_max] to represent a bounding box. But unlike pascal_voc , albumentations uses normalized values. To normalize values, we divide coordinates in pixels for the x- and y-axis by the width and the height of the image. Coordinates of the example bounding box in this format are [98 / 640, 345 / 480, 420 / 640, 462 / 480] which are [0.153125, 0.71875, 0.65625, 0.9625] . Albumentations uses this format internally to work with bounding boxes and augment them. coco \u00b6 coco is a format used by the Common Objects in Context COCO COCO dataset. In coco , a bounding box is defined by four values in pixels [x_min, y_min, width, height] . They are coordinates of the top-left corner along with the width and height of the bounding box. Coordinates of the example bounding box in this format are [98, 345, 322, 117] . yolo \u00b6 In yolo , a bounding box is represented by four values [x_center, y_center, width, height] . x_center and y_center are the normalized coordinates of the center of the bounding box. To make coordinates normalized, we take pixel values of x and y, which marks the center of the bounding box on the x- and y-axis. Then we divide the value of x by the width of the image and value of y by the height of the image. width and height represent the width and the height of the bounding box. They are normalized as well. Coordinates of the example bounding box in this format are [((420 + 98) / 2) / 640, ((462 + 365) / 2) / 480, 322 / 640, 117 / 480] which are [0.4046875, 0.8614583, 0.503125, 0.24375] . How different formats represent coordinates of a bounding box Bounding boxes augmentation \u00b6 Just like with images and masks augmentation, the process of augmenting bounding boxes consists of 4 steps. You import the required libraries. You define an augmentation pipeline. You read images and bounding boxes from the disk. You pass an image and bounding boxes to the augmentation pipeline and receive augmented images and boxes. Note Some transforms in Albumentation don't support bounding boxes. If you try to use them you will get an exception. Please refer to this article to check whether a transform can augment bounding boxes. Step 1. Import the required libraries. \u00b6 import albumentations as A import cv2 Step 2. Define an augmentation pipeline. \u00b6 Here an example of a minimal declaration of an augmentation pipeline that works with bounding boxes. transform = A . Compose ([ A . RandomCrop ( width = 450 , height = 450 ), A . HorizontalFlip ( p = 0.5 ), A . RandomBrightnessContrast ( p = 0.2 ), ], bbox_params = A . BboxParams ( format = 'coco' )) Note that unlike image and masks augmentation, Compose now has an additional parameter bbox_params . You need to pass an instance of A.BboxParams to that argument. A.BboxParams specifies settings for working with bounding boxes. format sets the format for bounding boxes coordinates. It can either be pascal_voc , albumentations , coco or yolo . This value is required because Albumentation needs to know the coordinates' source format for bounding boxes to apply augmentations correctly. Besides format , A.BboxParams supports a few more settings. Here is an example of Compose that shows all available settings with A.BboxParams : transform = A . Compose ([ A . RandomCrop ( width = 450 , height = 450 ), A . HorizontalFlip ( p = 0.5 ), A . RandomBrightnessContrast ( p = 0.2 ), ], bbox_params = A . BboxParams ( format = 'coco' , min_area = 1024 , min_visibility = 0.1 , label_fields = [ 'class_labels' ])) min_area and min_visibility \u00b6 min_area and min_visibility parameters control what Albumentations should do to the augmented bounding boxes if their size has changed after augmentation. The size of bounding boxes could change if you apply spatial augmentations, for example, when you crop a part of an image or when you resize an image. min_area is a value in pixels. If the area of a bounding box after augmentation becomes smaller than min_area , Albumentations will drop that box. So the returned list of augmented bounding boxes won't contain that bounding box. min_visibility is a value between 0 and 1. If the ratio of the bounding box area after augmentation to the area of the bounding box before augmentation becomes smaller than min_visibility , Albumentations will drop that box. So if the augmentation process cuts the most of the bounding box, that box won't be present in the returned list of the augmented bounding boxes. Here is an example image that contains two bounding boxes. Bounding boxes coordinates are declared using the coco format. An example image with two bounding boxes First, we apply the CenterCrop augmentation without declaring parameters min_area and min_visiiblity . The augmented image contains two bounding boxes. An example image with two bounding boxes after applying augmentation Next, we apply the same CenterCrop augmentation, but now we also use the min_area parameter. Now, the augmented image contains only one bounding box, because the other bounding box's area after augmentation became smaller than min_area , so Albumentations dropped that bounding box. An example image with one bounding box after applying augmentation with 'min_area' Finally, we apply the CenterCrop augmentation with the min_visibility . After that augmentation, the resulting image doesn't contain any bounding box, because visibility of all bounding boxes after augmentation are below threshold set by min_visibility . An example image with zero bounding boxes after applying augmentation with 'min_visibility' Class labels for bounding boxes \u00b6 Besides coordinates, each bounding box should have an associated class label that tells which object lies inside the bounding box. There are two ways to pass a label for a bounding box. Let's say you have an example image with three objects: dog , cat , and sports ball . Bounding boxes coordinates in the coco format for those objects are [23, 74, 295, 388] , [377, 294, 252, 161] , and [333, 421, 49, 49] . An example image with 3 bounding boxes from the COCO dataset 1. You can pass labels along with bounding boxes coordinates by adding them as additional values to the list of coordinates. \u00b6 For the image above, bounding boxes with class labels will become [23, 74, 295, 388, 'dog'] , [377, 294, 252, 161, 'cat'] , and [333, 421, 49, 49, 'sports ball'] . Class labels could be of any type: integer, string, or any other Python data type. For example, integer values as class labels will look the following: [23, 74, 295, 388, 18] , [377, 294, 252, 161, 17] , and [333, 421, 49, 49, 37]. Also, you can use multiple class values for each bounding box, for example [23, 74, 295, 388, 'dog', 'animal'] , [377, 294, 252, 161, 'cat', 'animal'] , and [333, 421, 49, 49, 'sports ball', 'item'] . 2.You can pass labels for bounding boxes as a separate list (the preferred way). \u00b6 For example, if you have three bounding boxes like [23, 74, 295, 388] , [377, 294, 252, 161] , and [333, 421, 49, 49] you can create a separate list with values like ['cat', 'dog', 'sports ball'] , or [18, 17, 37] that contains class labels for those bounding boxes. Next, you pass that list with class labels as a separate argument to the transform function. Albumentations needs to know the names of all those lists with class labels to join them with augmented bounding boxes correctly. Then, if a bounding box is dropped after augmentation because it is no longer visible, Albumentations will drop the class label for that box as well. Use label_fields parameter to set names for all arguments in transform that will contain label descriptions for bounding boxes (more on that in Step 4). Step 3. Read images and bounding boxes from the disk. \u00b6 Read an image from the disk. image = cv2 . imread ( \"/path/to/image.jpg\" ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) Bounding boxes can be stored on the disk in different serialization formats: JSON, XML, YAML, CSV, etc. So the code to read bounding boxes depends on the actual format of data on the disk. After you read the data from the disk, you need to prepare bounding boxes for Albumentations. Albumentations expects that bounding boxes will be represented as a list of lists. Each list contains information about a single bounding box. A bounding box definition should have at list four elements that represent the coordinates of that bounding box. The actual meaning of those four values depends on the format of bounding boxes (either pascal_voc , albumentations , coco , or yolo ). Besides four coordinates, each definition of a bounding box may contain one or more extra values. You can use those extra values to store additional information about the bounding box, such as a class label of the object inside the box. During augmentation, Albumentations will not process those extra values. The library will return them as is along with the updated coordinates of the augmented bounding box. Step 4. Pass an image and bounding boxes to the augmentation pipeline and receive augmented images and boxes. \u00b6 As discussed in Step 2, there are two ways of passing class labels along with bounding boxes coordinates: 1. Pass class labels along with coordinates. \u00b6 So, if you have coordinates of three bounding boxes that look like this: bboxes = [ [ 23 , 74 , 295 , 388 ], [ 377 , 294 , 252 , 161 ], [ 333 , 421 , 49 , 49 ], ] you can add a class label for each bounding box as an additional element of the list along with four coordinates. So now a list with bounding boxes and their coordinates will look the following: bboxes = [ [ 23 , 74 , 295 , 388 , 'dog' ], [ 377 , 294 , 252 , 161 , 'cat' ], [ 333 , 421 , 49 , 49 , 'sports ball' ], ] or with multiple labels per each bounding box: bboxes = [ [ 23 , 74 , 295 , 388 , 'dog' , 'animal' ], [ 377 , 294 , 252 , 161 , 'cat' , 'animal' ], [ 333 , 421 , 49 , 49 , 'sports ball' , 'item' ], ] You can use any data type for declaring class labels. It can be string, integer, or any other Python data type. Next, you pass an image and bounding boxes for it to the transform function and receive the augmented image and bounding boxes. transformed = transform ( image = image , bboxes = bboxes ) transformed_image = transformed [ 'image' ] transformed_bboxes = transformed [ 'bboxes' ] Example input and output data for bounding boxes augmentation 2. Pass class labels in a separate argument to transform (the preferred way). \u00b6 Let's say you have coordinates of three bounding boxes bboxes = [ [ 23 , 74 , 295 , 388 ], [ 377 , 294 , 252 , 161 ], [ 333 , 421 , 49 , 49 ], ] You can create a separate list that contains class labels for those bounding boxes: class_labels = [ 'cat' , 'dog' , 'parrot' ] Then you pass both bounding boxes and class labels to transform . Note that to pass class labels, you need to use the name of the argument that you declared in label_fields when creating an instance of Compose in step 2. In our case, we set the name of the argument to class_labels . transformed = transform ( image = image , bboxes = bboxes , class_labels = class_labels ) transformed_image = transformed [ 'image' ] transformed_bboxes = transformed [ 'bboxes' ] transformed_class_labels = transformed [ 'class_labels' ] Example input and output data for bounding boxes augmentation with a separate argument for class labels Note that label_fields expects a list, so you can set multiple fields that contain labels for your bounding boxes. So if you declare Compose like transform = A . Compose ([ A . RandomCrop ( width = 450 , height = 450 ), A . HorizontalFlip ( p = 0.5 ), A . RandomBrightnessContrast ( p = 0.2 ), ], bbox_params = A . BboxParams ( format = 'coco' , label_fields = [ 'class_labels' , 'class_categories' ]))) you can use those multiple arguments to pass info about class labels, like class_labels = [ 'cat' , 'dog' , 'parrot' ] class_categories = [ 'animal' , 'animal' , 'item' ] transformed = transform ( image = image , bboxes = bboxes , class_labels = class_labels , class_categories = class_categories ) transformed_image = transformed [ 'image' ] transformed_bboxes = transformed [ 'bboxes' ] transformed_class_labels = transformed [ 'class_labels' ] transformed_class_categories = transformed [ 'class_categories' ] Examples \u00b6 Using Albumentations to augment bounding boxes for object detection tasks How to use Albumentations for detection tasks if you need to keep all bounding boxes Showcase. Cool augmentation examples on diverse set of images from various real-world tasks.","title":"Bounding boxes augmentation for object detection"},{"location":"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation-for-object-detection","text":"","title":"Bounding boxes augmentation for object detection"},{"location":"getting_started/bounding_boxes_augmentation/#different-annotations-formats","text":"Bounding boxes are rectangles that mark objects on an image. There are multiple formats of bounding boxes annotations. Each format uses its specific representation of bouning boxes coordinates. Albumentations supports four formats: pascal_voc , albumentations , coco , and yolo . Let's take a look at each of those formats and how they represent coordinates of bounding boxes. As an example, we will use an image from the dataset named Common Objects in Context . It contains one bounding box that marks a cat. The image width is 640 pixels, and its height is 480 pixels. The width of the bounding box is 322 pixels, and its height is 117 pixels. The bounding box has the following (x, y) coordinates of its corners: top-left is (x_min, y_min) or (98px, 345px) , top-right is (x_max, y_min) or (420px, 345px) , bottom-left is (x_min, y_max) or (98px, 462px) , bottom-right is (x_max, y_max) or (420px, 462px) . As you see, coordinates of the bounding box's corners are calculated with respect to the top-left corner of the image which has (x, y) coordinates (0, 0) . An example image with a bounding box from the COCO dataset","title":"Different annotations formats"},{"location":"getting_started/bounding_boxes_augmentation/#pascal_voc","text":"pascal_voc is a format used by the Pascal VOC dataset . Coordinates of a bounding box are encoded with four values in pixels: [x_min, y_min, x_max, y_max] . x_min and y_min are coordinates of the top-left corner of the bounding box. x_max and y_max are coordinates of bottom-right corner of the bounding box. Coordinates of the example bounding box in this format are [98, 345, 420, 462] .","title":"pascal_voc"},{"location":"getting_started/bounding_boxes_augmentation/#albumentations","text":"albumentations is similar to pascal_voc , because it also uses four values [x_min, y_min, x_max, y_max] to represent a bounding box. But unlike pascal_voc , albumentations uses normalized values. To normalize values, we divide coordinates in pixels for the x- and y-axis by the width and the height of the image. Coordinates of the example bounding box in this format are [98 / 640, 345 / 480, 420 / 640, 462 / 480] which are [0.153125, 0.71875, 0.65625, 0.9625] . Albumentations uses this format internally to work with bounding boxes and augment them.","title":"albumentations"},{"location":"getting_started/bounding_boxes_augmentation/#coco","text":"coco is a format used by the Common Objects in Context COCO COCO dataset. In coco , a bounding box is defined by four values in pixels [x_min, y_min, width, height] . They are coordinates of the top-left corner along with the width and height of the bounding box. Coordinates of the example bounding box in this format are [98, 345, 322, 117] .","title":"coco"},{"location":"getting_started/bounding_boxes_augmentation/#yolo","text":"In yolo , a bounding box is represented by four values [x_center, y_center, width, height] . x_center and y_center are the normalized coordinates of the center of the bounding box. To make coordinates normalized, we take pixel values of x and y, which marks the center of the bounding box on the x- and y-axis. Then we divide the value of x by the width of the image and value of y by the height of the image. width and height represent the width and the height of the bounding box. They are normalized as well. Coordinates of the example bounding box in this format are [((420 + 98) / 2) / 640, ((462 + 365) / 2) / 480, 322 / 640, 117 / 480] which are [0.4046875, 0.8614583, 0.503125, 0.24375] . How different formats represent coordinates of a bounding box","title":"yolo"},{"location":"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation","text":"Just like with images and masks augmentation, the process of augmenting bounding boxes consists of 4 steps. You import the required libraries. You define an augmentation pipeline. You read images and bounding boxes from the disk. You pass an image and bounding boxes to the augmentation pipeline and receive augmented images and boxes. Note Some transforms in Albumentation don't support bounding boxes. If you try to use them you will get an exception. Please refer to this article to check whether a transform can augment bounding boxes.","title":"Bounding boxes augmentation"},{"location":"getting_started/bounding_boxes_augmentation/#step-1-import-the-required-libraries","text":"import albumentations as A import cv2","title":"Step 1. Import the required libraries."},{"location":"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline","text":"Here an example of a minimal declaration of an augmentation pipeline that works with bounding boxes. transform = A . Compose ([ A . RandomCrop ( width = 450 , height = 450 ), A . HorizontalFlip ( p = 0.5 ), A . RandomBrightnessContrast ( p = 0.2 ), ], bbox_params = A . BboxParams ( format = 'coco' )) Note that unlike image and masks augmentation, Compose now has an additional parameter bbox_params . You need to pass an instance of A.BboxParams to that argument. A.BboxParams specifies settings for working with bounding boxes. format sets the format for bounding boxes coordinates. It can either be pascal_voc , albumentations , coco or yolo . This value is required because Albumentation needs to know the coordinates' source format for bounding boxes to apply augmentations correctly. Besides format , A.BboxParams supports a few more settings. Here is an example of Compose that shows all available settings with A.BboxParams : transform = A . Compose ([ A . RandomCrop ( width = 450 , height = 450 ), A . HorizontalFlip ( p = 0.5 ), A . RandomBrightnessContrast ( p = 0.2 ), ], bbox_params = A . BboxParams ( format = 'coco' , min_area = 1024 , min_visibility = 0.1 , label_fields = [ 'class_labels' ]))","title":"Step 2. Define an augmentation pipeline."},{"location":"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility","text":"min_area and min_visibility parameters control what Albumentations should do to the augmented bounding boxes if their size has changed after augmentation. The size of bounding boxes could change if you apply spatial augmentations, for example, when you crop a part of an image or when you resize an image. min_area is a value in pixels. If the area of a bounding box after augmentation becomes smaller than min_area , Albumentations will drop that box. So the returned list of augmented bounding boxes won't contain that bounding box. min_visibility is a value between 0 and 1. If the ratio of the bounding box area after augmentation to the area of the bounding box before augmentation becomes smaller than min_visibility , Albumentations will drop that box. So if the augmentation process cuts the most of the bounding box, that box won't be present in the returned list of the augmented bounding boxes. Here is an example image that contains two bounding boxes. Bounding boxes coordinates are declared using the coco format. An example image with two bounding boxes First, we apply the CenterCrop augmentation without declaring parameters min_area and min_visiiblity . The augmented image contains two bounding boxes. An example image with two bounding boxes after applying augmentation Next, we apply the same CenterCrop augmentation, but now we also use the min_area parameter. Now, the augmented image contains only one bounding box, because the other bounding box's area after augmentation became smaller than min_area , so Albumentations dropped that bounding box. An example image with one bounding box after applying augmentation with 'min_area' Finally, we apply the CenterCrop augmentation with the min_visibility . After that augmentation, the resulting image doesn't contain any bounding box, because visibility of all bounding boxes after augmentation are below threshold set by min_visibility . An example image with zero bounding boxes after applying augmentation with 'min_visibility'","title":"min_area and min_visibility"},{"location":"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes","text":"Besides coordinates, each bounding box should have an associated class label that tells which object lies inside the bounding box. There are two ways to pass a label for a bounding box. Let's say you have an example image with three objects: dog , cat , and sports ball . Bounding boxes coordinates in the coco format for those objects are [23, 74, 295, 388] , [377, 294, 252, 161] , and [333, 421, 49, 49] . An example image with 3 bounding boxes from the COCO dataset","title":"Class labels for bounding boxes"},{"location":"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates","text":"For the image above, bounding boxes with class labels will become [23, 74, 295, 388, 'dog'] , [377, 294, 252, 161, 'cat'] , and [333, 421, 49, 49, 'sports ball'] . Class labels could be of any type: integer, string, or any other Python data type. For example, integer values as class labels will look the following: [23, 74, 295, 388, 18] , [377, 294, 252, 161, 17] , and [333, 421, 49, 49, 37]. Also, you can use multiple class values for each bounding box, for example [23, 74, 295, 388, 'dog', 'animal'] , [377, 294, 252, 161, 'cat', 'animal'] , and [333, 421, 49, 49, 'sports ball', 'item'] .","title":"1. You can pass labels along with bounding boxes coordinates by adding them as additional values to the list of coordinates."},{"location":"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way","text":"For example, if you have three bounding boxes like [23, 74, 295, 388] , [377, 294, 252, 161] , and [333, 421, 49, 49] you can create a separate list with values like ['cat', 'dog', 'sports ball'] , or [18, 17, 37] that contains class labels for those bounding boxes. Next, you pass that list with class labels as a separate argument to the transform function. Albumentations needs to know the names of all those lists with class labels to join them with augmented bounding boxes correctly. Then, if a bounding box is dropped after augmentation because it is no longer visible, Albumentations will drop the class label for that box as well. Use label_fields parameter to set names for all arguments in transform that will contain label descriptions for bounding boxes (more on that in Step 4).","title":"2.You can pass labels for bounding boxes as a separate list (the preferred way)."},{"location":"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk","text":"Read an image from the disk. image = cv2 . imread ( \"/path/to/image.jpg\" ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) Bounding boxes can be stored on the disk in different serialization formats: JSON, XML, YAML, CSV, etc. So the code to read bounding boxes depends on the actual format of data on the disk. After you read the data from the disk, you need to prepare bounding boxes for Albumentations. Albumentations expects that bounding boxes will be represented as a list of lists. Each list contains information about a single bounding box. A bounding box definition should have at list four elements that represent the coordinates of that bounding box. The actual meaning of those four values depends on the format of bounding boxes (either pascal_voc , albumentations , coco , or yolo ). Besides four coordinates, each definition of a bounding box may contain one or more extra values. You can use those extra values to store additional information about the bounding box, such as a class label of the object inside the box. During augmentation, Albumentations will not process those extra values. The library will return them as is along with the updated coordinates of the augmented bounding box.","title":"Step 3. Read images and bounding boxes from the disk."},{"location":"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes","text":"As discussed in Step 2, there are two ways of passing class labels along with bounding boxes coordinates:","title":"Step 4. Pass an image and bounding boxes to the augmentation pipeline and receive augmented images and boxes."},{"location":"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates","text":"So, if you have coordinates of three bounding boxes that look like this: bboxes = [ [ 23 , 74 , 295 , 388 ], [ 377 , 294 , 252 , 161 ], [ 333 , 421 , 49 , 49 ], ] you can add a class label for each bounding box as an additional element of the list along with four coordinates. So now a list with bounding boxes and their coordinates will look the following: bboxes = [ [ 23 , 74 , 295 , 388 , 'dog' ], [ 377 , 294 , 252 , 161 , 'cat' ], [ 333 , 421 , 49 , 49 , 'sports ball' ], ] or with multiple labels per each bounding box: bboxes = [ [ 23 , 74 , 295 , 388 , 'dog' , 'animal' ], [ 377 , 294 , 252 , 161 , 'cat' , 'animal' ], [ 333 , 421 , 49 , 49 , 'sports ball' , 'item' ], ] You can use any data type for declaring class labels. It can be string, integer, or any other Python data type. Next, you pass an image and bounding boxes for it to the transform function and receive the augmented image and bounding boxes. transformed = transform ( image = image , bboxes = bboxes ) transformed_image = transformed [ 'image' ] transformed_bboxes = transformed [ 'bboxes' ] Example input and output data for bounding boxes augmentation","title":"1. Pass class labels along with coordinates."},{"location":"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way","text":"Let's say you have coordinates of three bounding boxes bboxes = [ [ 23 , 74 , 295 , 388 ], [ 377 , 294 , 252 , 161 ], [ 333 , 421 , 49 , 49 ], ] You can create a separate list that contains class labels for those bounding boxes: class_labels = [ 'cat' , 'dog' , 'parrot' ] Then you pass both bounding boxes and class labels to transform . Note that to pass class labels, you need to use the name of the argument that you declared in label_fields when creating an instance of Compose in step 2. In our case, we set the name of the argument to class_labels . transformed = transform ( image = image , bboxes = bboxes , class_labels = class_labels ) transformed_image = transformed [ 'image' ] transformed_bboxes = transformed [ 'bboxes' ] transformed_class_labels = transformed [ 'class_labels' ] Example input and output data for bounding boxes augmentation with a separate argument for class labels Note that label_fields expects a list, so you can set multiple fields that contain labels for your bounding boxes. So if you declare Compose like transform = A . Compose ([ A . RandomCrop ( width = 450 , height = 450 ), A . HorizontalFlip ( p = 0.5 ), A . RandomBrightnessContrast ( p = 0.2 ), ], bbox_params = A . BboxParams ( format = 'coco' , label_fields = [ 'class_labels' , 'class_categories' ]))) you can use those multiple arguments to pass info about class labels, like class_labels = [ 'cat' , 'dog' , 'parrot' ] class_categories = [ 'animal' , 'animal' , 'item' ] transformed = transform ( image = image , bboxes = bboxes , class_labels = class_labels , class_categories = class_categories ) transformed_image = transformed [ 'image' ] transformed_bboxes = transformed [ 'bboxes' ] transformed_class_labels = transformed [ 'class_labels' ] transformed_class_categories = transformed [ 'class_categories' ]","title":"2. Pass class labels in a separate argument to transform (the preferred way)."},{"location":"getting_started/bounding_boxes_augmentation/#examples","text":"Using Albumentations to augment bounding boxes for object detection tasks How to use Albumentations for detection tasks if you need to keep all bounding boxes Showcase. Cool augmentation examples on diverse set of images from various real-world tasks.","title":"Examples"},{"location":"getting_started/image_augmentation/","text":"Image augmentation for classification \u00b6 We can divide the process of image augmentation into four steps: Import albumentations and a library to read images from the disk (e.g., OpenCV). Define an augmentation pipeline. Read images from the disk. Pass images to the augmentation pipeline and receive augmented images. Step 1. Import the required libraries. \u00b6 Import Albumentations import albumentations as A Import a library to read images from the disk. In this example, we will use OpenCV . It is an open-source computer vision library that supports many image formats. Albumentations has OpenCV as a dependency, so you already have OpenCV installed. import cv2 Step 2. Define an augmentation pipeline. \u00b6 To define an augmentation pipeline, you need to create an instance of the Compose class. As an argument to the Compose class, you need to pass a list of augmentations you want to apply. A call to Compose will return a transform function that will perform image augmentation. Let's look at an example: transform = A . Compose ([ A . RandomCrop ( width = 256 , height = 256 ), A . HorizontalFlip ( p = 0.5 ), A . RandomBrightnessContrast ( p = 0.2 ), ]) In the example, Compose receives a list with three augmentations: A.RandomCrop , A.HorizontalFlip , and A.RandomBrighntessContrast . You can find the full list of all available augmentations in the GitHub repository and in the API Docs . A demo playground that demonstrates how augmentations will transform the input image is available at https://albumentations-demo.herokuapp.com . To create an augmentation, you create an instance of the required augmentation class and pass augmentation parameters to it. A.RandomCrop receives two parameters, height and width . A.RandomCrop(width=256, height=256) means that A.RandomCrop will take an input image, extract a random patch with size 256 by 256 pixels from it and then pass the result to the next augmentation in the pipeline (in this case to A.HorizontalFlip ). A.HorizontalFlip in this example has one parameter named p . p is a special parameter that is supported by almost all augmentations. It controls the probability of applying the augmentation. p=0.5 means that with a probability of 50%, the transform will flip the image horizontally, and with a probability of 50%, the transform won't modify the input image. A.RandomBrighntessContrast in the example also has one parameter, p . With a probability of 20%, this augmentation will change the brightness and contrast of the image received from A.HorizontalFlip . And with a probability of 80%, it will keep the received image unchanged. A visualized version of the augmentation pipeline. You pass an image to it, the image goes through all transformations, and then you receive an augmented image from the pipeline. Step 3. Read images from the disk. \u00b6 To pass an image to the augmentation pipeline, you need to read it from the disk. The pipeline expects to receive an image in the form of a NumPy array. If it is a color image, it should have three channels in the following order: Red, Green, Blue (so a regular RGB image). To read images from the disk, you can use OpenCV - a popular library for image processing. It supports a lot of input formats and is installed along with Albumentations since Albumentations utilizes that library under the hood for a lot of augmentations. To import OpenCV import cv2 To read an image with OpenCV image = cv2 . imread ( \"/path/to/image.jpg\" ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) Note the usage of cv2.cvtColor . For historical reasons , OpenCV reads an image in BGR format (so color channels of the image have the following order: Blue, Green, Red). Albumentations uses the most common and popular RGB image format. So when using OpenCV, we need to convert the image format to RGB explicitly. Besides OpenCV, you can use other image processing libraries. Pillow \u00b6 Pillow is a popular Python image processing library. Install Pillow pip install pillow Import Pillow and NumPy (we need NumPy to convert a Pillow image to a NumPy array. NumPy is already installed along with Albumentations). from PIL import Image import numpy as np Read an image with Pillow and convert it to a NumPy array. pillow_image = Image . open ( \"image.jpg\" ) image = np . array ( pillow_image ) Step 4. Pass images to the augmentation pipeline and receive augmented images. \u00b6 To pass an image to the augmentation pipeline you need to call the transform function created by a call to A.Compose at Step 2. In the image argument to that function, you need to pass an image that you want to augment. transformed = transform ( image = image ) transform will return a dictionary with a single key image . Value at that key will contain an augmented image. transformed_image = transformed [ \"image\" ] To augment the next image, you need to call transform again and pass a new image as the image argument: another_transformed_image = transform ( image = another_image )[ \"image\" ] Each augmentation will change the input image with the probability set by the parameter p . Also, many augmentations have parameters that control the magnitude of changes that will be applied to an image. For example, A.RandomBrightnessContrast has two parameters: brightness_limit that controls the magnitude of adjusting brightness and contrast_limit that controls the magnitude of adjusting contrast. The bigger the value, the more the augmentation will change an image. During augmentation, a magnitude of the transformation is sampled from a uniform distribution limited by brightness_limit and contrast_limit . That means that if you make multiple calls to transform with the same input image, you will get a different output image each time. transform = A . Compose ([ A . RandomBrightnessContrast ( brightness_limit = 1 , contrast_limit = 1 , p = 1.0 ), ]) transformed_image_1 = transform ( image = image )[ 'image' ] transformed_image_2 = transform ( image = image )[ 'image' ] transformed_image_3 = transform ( image = image )[ 'image' ] Examples \u00b6 Defining a simple augmentation pipeline for image augmentation Working with non-8-bit images Weather augmentations in Albumentations Showcase. Cool augmentation examples on diverse set of images from various real-world tasks.","title":"Image augmentation for classification"},{"location":"getting_started/image_augmentation/#image-augmentation-for-classification","text":"We can divide the process of image augmentation into four steps: Import albumentations and a library to read images from the disk (e.g., OpenCV). Define an augmentation pipeline. Read images from the disk. Pass images to the augmentation pipeline and receive augmented images.","title":"Image augmentation for classification"},{"location":"getting_started/image_augmentation/#step-1-import-the-required-libraries","text":"Import Albumentations import albumentations as A Import a library to read images from the disk. In this example, we will use OpenCV . It is an open-source computer vision library that supports many image formats. Albumentations has OpenCV as a dependency, so you already have OpenCV installed. import cv2","title":"Step 1. Import the required libraries."},{"location":"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline","text":"To define an augmentation pipeline, you need to create an instance of the Compose class. As an argument to the Compose class, you need to pass a list of augmentations you want to apply. A call to Compose will return a transform function that will perform image augmentation. Let's look at an example: transform = A . Compose ([ A . RandomCrop ( width = 256 , height = 256 ), A . HorizontalFlip ( p = 0.5 ), A . RandomBrightnessContrast ( p = 0.2 ), ]) In the example, Compose receives a list with three augmentations: A.RandomCrop , A.HorizontalFlip , and A.RandomBrighntessContrast . You can find the full list of all available augmentations in the GitHub repository and in the API Docs . A demo playground that demonstrates how augmentations will transform the input image is available at https://albumentations-demo.herokuapp.com . To create an augmentation, you create an instance of the required augmentation class and pass augmentation parameters to it. A.RandomCrop receives two parameters, height and width . A.RandomCrop(width=256, height=256) means that A.RandomCrop will take an input image, extract a random patch with size 256 by 256 pixels from it and then pass the result to the next augmentation in the pipeline (in this case to A.HorizontalFlip ). A.HorizontalFlip in this example has one parameter named p . p is a special parameter that is supported by almost all augmentations. It controls the probability of applying the augmentation. p=0.5 means that with a probability of 50%, the transform will flip the image horizontally, and with a probability of 50%, the transform won't modify the input image. A.RandomBrighntessContrast in the example also has one parameter, p . With a probability of 20%, this augmentation will change the brightness and contrast of the image received from A.HorizontalFlip . And with a probability of 80%, it will keep the received image unchanged. A visualized version of the augmentation pipeline. You pass an image to it, the image goes through all transformations, and then you receive an augmented image from the pipeline.","title":"Step 2. Define an augmentation pipeline."},{"location":"getting_started/image_augmentation/#step-3-read-images-from-the-disk","text":"To pass an image to the augmentation pipeline, you need to read it from the disk. The pipeline expects to receive an image in the form of a NumPy array. If it is a color image, it should have three channels in the following order: Red, Green, Blue (so a regular RGB image). To read images from the disk, you can use OpenCV - a popular library for image processing. It supports a lot of input formats and is installed along with Albumentations since Albumentations utilizes that library under the hood for a lot of augmentations. To import OpenCV import cv2 To read an image with OpenCV image = cv2 . imread ( \"/path/to/image.jpg\" ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) Note the usage of cv2.cvtColor . For historical reasons , OpenCV reads an image in BGR format (so color channels of the image have the following order: Blue, Green, Red). Albumentations uses the most common and popular RGB image format. So when using OpenCV, we need to convert the image format to RGB explicitly. Besides OpenCV, you can use other image processing libraries.","title":"Step 3. Read images from the disk."},{"location":"getting_started/image_augmentation/#pillow","text":"Pillow is a popular Python image processing library. Install Pillow pip install pillow Import Pillow and NumPy (we need NumPy to convert a Pillow image to a NumPy array. NumPy is already installed along with Albumentations). from PIL import Image import numpy as np Read an image with Pillow and convert it to a NumPy array. pillow_image = Image . open ( \"image.jpg\" ) image = np . array ( pillow_image )","title":"Pillow"},{"location":"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images","text":"To pass an image to the augmentation pipeline you need to call the transform function created by a call to A.Compose at Step 2. In the image argument to that function, you need to pass an image that you want to augment. transformed = transform ( image = image ) transform will return a dictionary with a single key image . Value at that key will contain an augmented image. transformed_image = transformed [ \"image\" ] To augment the next image, you need to call transform again and pass a new image as the image argument: another_transformed_image = transform ( image = another_image )[ \"image\" ] Each augmentation will change the input image with the probability set by the parameter p . Also, many augmentations have parameters that control the magnitude of changes that will be applied to an image. For example, A.RandomBrightnessContrast has two parameters: brightness_limit that controls the magnitude of adjusting brightness and contrast_limit that controls the magnitude of adjusting contrast. The bigger the value, the more the augmentation will change an image. During augmentation, a magnitude of the transformation is sampled from a uniform distribution limited by brightness_limit and contrast_limit . That means that if you make multiple calls to transform with the same input image, you will get a different output image each time. transform = A . Compose ([ A . RandomBrightnessContrast ( brightness_limit = 1 , contrast_limit = 1 , p = 1.0 ), ]) transformed_image_1 = transform ( image = image )[ 'image' ] transformed_image_2 = transform ( image = image )[ 'image' ] transformed_image_3 = transform ( image = image )[ 'image' ]","title":"Step 4. Pass images to the augmentation pipeline and receive augmented images."},{"location":"getting_started/image_augmentation/#examples","text":"Defining a simple augmentation pipeline for image augmentation Working with non-8-bit images Weather augmentations in Albumentations Showcase. Cool augmentation examples on diverse set of images from various real-world tasks.","title":"Examples"},{"location":"getting_started/installation/","text":"Installation \u00b6 Albumentations requires Python 3.5 or higher. Install the latest stable version from PyPI \u00b6 pip install -U albumentations Install the latest version from the master branch on GitHub \u00b6 pip install -U git+https://github.com/albumentations-team/albumentations Install the latest stable version from conda-forge \u00b6 If you are using Anaconda or Miniconda you can install Albumentations from conda-forge: conda install -c conda-forge imgaug conda install -c conda-forge albumentations","title":"Installation"},{"location":"getting_started/installation/#installation","text":"Albumentations requires Python 3.5 or higher.","title":"Installation"},{"location":"getting_started/installation/#install-the-latest-stable-version-from-pypi","text":"pip install -U albumentations","title":"Install the latest stable version from PyPI"},{"location":"getting_started/installation/#install-the-latest-version-from-the-master-branch-on-github","text":"pip install -U git+https://github.com/albumentations-team/albumentations","title":"Install the latest version from the master branch on GitHub"},{"location":"getting_started/installation/#install-the-latest-stable-version-from-conda-forge","text":"If you are using Anaconda or Miniconda you can install Albumentations from conda-forge: conda install -c conda-forge imgaug conda install -c conda-forge albumentations","title":"Install the latest stable version from conda-forge"},{"location":"getting_started/keypoints_augmentation/","text":"Keypoints augmentation \u00b6 Computer vision tasks such as human pose estimation, face detection, and emotion recognition usually work with keypoints on the image. In the case of pose estimation, keypoints mark human joints such as shoulder, elbow, wrist, knee, etc. Keypoints annotations along with visualized edges between keypoints. Images are from the COCO dataset . In the case of face detection, keypoints mark important areas of the face such as eyes, nose, corners of the mouth, etc. Facial keypoints. Source: the \"Facial Keypoints Detection\" competition on Kaggle . To define a keypoint, you usually need two values, x and y coordinates of the keypoint. Coordinates of the keypoint are calculated with respect to the top-left corner of the image which has (x, y) coordinates (0, 0) . Often keypoints have associated labels such as right_elbow , left_wrist , etc. An example image with five keypoints from the COCO dataset Some classical computer vision algorithms, such as SIFT, may use four values to describe a keypoint. In addition to the x and y coordinates, there are keypoint scale and keypoint angle. Albumentations support those values as well. A keypoint may also has associated scale and angle values Supported formats for keypoints' coordinates. \u00b6 xy . A keypoint is defined by x and y coordinates in pixels. yx . A keypoint is defined by y and x coordinates in pixels. xya . A keypoint is defined by x and y coordinates in pixels and the angle. xys . A keypoint is defined by x and y coordinates in pixels, and the scale. xyas . A keypoint is defined by x and y coordinates in pixels, the angle, and the scale. xysa . A keypoint is defined by x and y coordinates in pixels, the scale, and the angle. Augmenting keypoints \u00b6 The process of augmenting keypoints looks very similar to the bounding boxes augmentation. It consists of 4 steps. You import the required libraries. You define an augmentation pipeline. You read images and keypoints from the disk. You pass an image and keypoints to the augmentation pipeline and receive augmented images and keypoints. Note Some transforms in Albumentation don't support keypoints. If you try to use them you will get an exception. Please refer to this article to check whether a transform can augment keypoints. Step 1. Import the required libraries. \u00b6 import albumentations as A import cv2 Step 2. Define an augmentation pipeline. \u00b6 Here an example of a minimal declaration of an augmentation pipeline that works with keypoints. transform = A . Compose ([ A . RandomCrop ( width = 330 , height = 330 ), A . RandomBrightnessContrast ( p = 0.2 ), ], keypoint_params = A . KeypointParams ( format = 'xy' )) Note that just like with bounding boxes, Compose has an additional parameter that defines the format for keypoints' coordinates. In the case of keypoints, it is called keypoint_params . Here we pass an instance of A.KeypointParams that says that xy coordinates format should be used. Besides format , A.KeypointParams supports a few more settings. Here is an example of Compose that shows all available settings with A.KeypointParams transform = A . Compose ([ A . RandomCrop ( width = 330 , height = 330 ), A . RandomBrightnessContrast ( p = 0.2 ), ], keypoint_params = A . KeypointParams ( format = 'xy' , label_fields = [ 'class_labels' ], remove_invisible = True , angle_in_degrees = True )) label_fields \u00b6 In some computer vision tasks, keypoints have not only coordinates but associated labels as well. For example, in pose estimation, each keypoint has a label such as elbow , knee or wrist . You need to pass those labels in a separate argument (or arguments, because you can use multiple fields) to the transform function that will augment keypoints. label_fields defines names of those fields. Step 4 describes how you need to use the transform function. remove_invisible \u00b6 After the augmentation, some keypoints may become invisible because they will be located outside of the augmented image's visible area. For example, if you crop a part of the image, all the keypoints outside of the cropped area will become invisible. If remove_invisible is set to True , Albumentations won't return invisible keypoints. remove_invisible is set to True by default, so if you don't pass that argument, Albumentations won't return invisible keypoints. angle_in_degrees \u00b6 If angle_in_degrees is set to True (this is the default value), then Albumentations expects that the angle value in formats xya , xyas , and xysa is defined in angles. If angle_in_degrees is set to False , Albumentations expects that the angle value is specified in radians. This setting doesn't affect xy and yx formats, because those formats don't use angles. 3. Read images and keypoints from the disk. \u00b6 Read an image from the disk. image = cv2 . imread ( \"/path/to/image.jpg\" ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) Keypoints can be stored on the disk in different serialization formats: JSON, XML, YAML, CSV, etc. So the code to read keypoints depends on the actual format of data on the disk. After you read the data from the disk, you need to prepare keypoints for Albumentations. Albumentations expects that keypoint will be represented as a list of lists. Each list contains information about a single keypoint. A definition of keypoint should have two to four elements depending on the selected format of keypoints. The first two elements are x and y coordinates of a keypoint in pixels (or y and x coordinates in the yx format). The third and fourth elements may be the angle and the scale of keypoint if you select a format that uses those values. Step 4. Pass an image and keypoints to the augmentation pipeline and receive augmented images and boxes. \u00b6 Let's say you have an example image with five keypoints. A list with those five keypoints' coordinates in the xy format will look the following: keypoints = [ ( 264 , 203 ), ( 86 , 88 ), ( 254 , 160 ), ( 193 , 103 ), ] Then you pass those keypoints to the transform function along with the image and receive the augmented versions of image and keypoints. transformed = transform ( image = image , keypoints = keypoints ) transformed_image = transformed [ 'image' ] transformed_keypoints = transformed [ 'keypoints' ] The augmented image with augmented keypoints If you set remove_invisible to False in keypoint_params , then Albumentations will return all keypoints, even if they lie outside the visible area. In the example image below, you can see that the keypoint for the right elbow is located outside the image, but Albumentations still retuned it. The area outside the image is highlighted in yellow. When remove_invisible is set to False Albumentations will return all keypoints, even those located outside the image If keypoints have associated class labels, you need to create a list that contains those labels: class_labels = [ 'left_elbow' , 'right_elbow' , 'left_wrist' , 'right_wrist' , 'right_hip' , ] Also, you need to declare the name of the argument to transform that will contain those labels. For declaration, you need to use the label_fields parameters of A.KeypointParams . For example, we could use the class_labels name for the argument with labels. transform = A . Compose ([ A . RandomCrop ( width = 330 , height = 330 ), A . RandomBrightnessContrast ( p = 0.2 ), ], keypoint_params = A . KeypointParams ( format = 'xy' , label_fields = [ 'class_labels' ])) Next, you pass both keypoints' coordinates and class labels to transform . transformed = transform ( image = image , keypoints = keypoints , class_labels = class_labels ) transformed_image = transformed [ 'image' ] transformed_keypoints = transformed [ 'keypoints' ] transformed_class_labels = transformed [ 'class_labels' ] Note that label_fields expects a list, so you can set multiple fields that contain labels for your keypoints. So if you declare Compose like transform = A . Compose ([ A . RandomCrop ( width = 330 , height = 330 ), A . RandomBrightnessContrast ( p = 0.2 ), ], keypoint_params = A . KeypointParams ( format = 'xy' , label_fields = [ 'class_labels' , 'class_sides' ])) you can use those multiple arguments to pass info about class labels, like class_labels = [ 'left_elbow' , 'right_elbow' , 'left_wrist' , 'right_wrist' , 'right_hip' , ] class_sides = [ 'left' , 'right' , 'left' , 'right' , 'right' ] transformed = transform ( image = image , keypoints = keypoints , class_labels = class_labels , class_sides = class_sides ) transformed_class_sides = transformed [ 'class_sides' ] transformed_class_labels = transformed [ 'class_labels' ] transformed_keypoints = transformed [ 'keypoints' ] transformed_image = transformed [ 'image' ] Example input and output data for keypoints augmentation with two separate arguments for class labels Note Some augmentations may affect class labels and make them incorrect. For example, the HorizontalFlip augmentation mirrors the input image. When you apply that augmentation to keypoints that mark the side of body parts (left or right), those keypoints will point to the wrong side (since left on the mirrored image becomes right ). So when you are creating an augmentation pipeline look carefully which augmentations. could be applied to the input data. HorizontalFlip may make keypoints' labels incorrect Examples \u00b6 Using Albumentations to augment keypoints","title":"Keypoints augmentation"},{"location":"getting_started/keypoints_augmentation/#keypoints-augmentation","text":"Computer vision tasks such as human pose estimation, face detection, and emotion recognition usually work with keypoints on the image. In the case of pose estimation, keypoints mark human joints such as shoulder, elbow, wrist, knee, etc. Keypoints annotations along with visualized edges between keypoints. Images are from the COCO dataset . In the case of face detection, keypoints mark important areas of the face such as eyes, nose, corners of the mouth, etc. Facial keypoints. Source: the \"Facial Keypoints Detection\" competition on Kaggle . To define a keypoint, you usually need two values, x and y coordinates of the keypoint. Coordinates of the keypoint are calculated with respect to the top-left corner of the image which has (x, y) coordinates (0, 0) . Often keypoints have associated labels such as right_elbow , left_wrist , etc. An example image with five keypoints from the COCO dataset Some classical computer vision algorithms, such as SIFT, may use four values to describe a keypoint. In addition to the x and y coordinates, there are keypoint scale and keypoint angle. Albumentations support those values as well. A keypoint may also has associated scale and angle values","title":"Keypoints augmentation"},{"location":"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates","text":"xy . A keypoint is defined by x and y coordinates in pixels. yx . A keypoint is defined by y and x coordinates in pixels. xya . A keypoint is defined by x and y coordinates in pixels and the angle. xys . A keypoint is defined by x and y coordinates in pixels, and the scale. xyas . A keypoint is defined by x and y coordinates in pixels, the angle, and the scale. xysa . A keypoint is defined by x and y coordinates in pixels, the scale, and the angle.","title":"Supported formats for keypoints' coordinates."},{"location":"getting_started/keypoints_augmentation/#augmenting-keypoints","text":"The process of augmenting keypoints looks very similar to the bounding boxes augmentation. It consists of 4 steps. You import the required libraries. You define an augmentation pipeline. You read images and keypoints from the disk. You pass an image and keypoints to the augmentation pipeline and receive augmented images and keypoints. Note Some transforms in Albumentation don't support keypoints. If you try to use them you will get an exception. Please refer to this article to check whether a transform can augment keypoints.","title":"Augmenting keypoints"},{"location":"getting_started/keypoints_augmentation/#step-1-import-the-required-libraries","text":"import albumentations as A import cv2","title":"Step 1. Import the required libraries."},{"location":"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline","text":"Here an example of a minimal declaration of an augmentation pipeline that works with keypoints. transform = A . Compose ([ A . RandomCrop ( width = 330 , height = 330 ), A . RandomBrightnessContrast ( p = 0.2 ), ], keypoint_params = A . KeypointParams ( format = 'xy' )) Note that just like with bounding boxes, Compose has an additional parameter that defines the format for keypoints' coordinates. In the case of keypoints, it is called keypoint_params . Here we pass an instance of A.KeypointParams that says that xy coordinates format should be used. Besides format , A.KeypointParams supports a few more settings. Here is an example of Compose that shows all available settings with A.KeypointParams transform = A . Compose ([ A . RandomCrop ( width = 330 , height = 330 ), A . RandomBrightnessContrast ( p = 0.2 ), ], keypoint_params = A . KeypointParams ( format = 'xy' , label_fields = [ 'class_labels' ], remove_invisible = True , angle_in_degrees = True ))","title":"Step 2. Define an augmentation pipeline."},{"location":"getting_started/keypoints_augmentation/#label_fields","text":"In some computer vision tasks, keypoints have not only coordinates but associated labels as well. For example, in pose estimation, each keypoint has a label such as elbow , knee or wrist . You need to pass those labels in a separate argument (or arguments, because you can use multiple fields) to the transform function that will augment keypoints. label_fields defines names of those fields. Step 4 describes how you need to use the transform function.","title":"label_fields"},{"location":"getting_started/keypoints_augmentation/#remove_invisible","text":"After the augmentation, some keypoints may become invisible because they will be located outside of the augmented image's visible area. For example, if you crop a part of the image, all the keypoints outside of the cropped area will become invisible. If remove_invisible is set to True , Albumentations won't return invisible keypoints. remove_invisible is set to True by default, so if you don't pass that argument, Albumentations won't return invisible keypoints.","title":"remove_invisible"},{"location":"getting_started/keypoints_augmentation/#angle_in_degrees","text":"If angle_in_degrees is set to True (this is the default value), then Albumentations expects that the angle value in formats xya , xyas , and xysa is defined in angles. If angle_in_degrees is set to False , Albumentations expects that the angle value is specified in radians. This setting doesn't affect xy and yx formats, because those formats don't use angles.","title":"angle_in_degrees"},{"location":"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk","text":"Read an image from the disk. image = cv2 . imread ( \"/path/to/image.jpg\" ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) Keypoints can be stored on the disk in different serialization formats: JSON, XML, YAML, CSV, etc. So the code to read keypoints depends on the actual format of data on the disk. After you read the data from the disk, you need to prepare keypoints for Albumentations. Albumentations expects that keypoint will be represented as a list of lists. Each list contains information about a single keypoint. A definition of keypoint should have two to four elements depending on the selected format of keypoints. The first two elements are x and y coordinates of a keypoint in pixels (or y and x coordinates in the yx format). The third and fourth elements may be the angle and the scale of keypoint if you select a format that uses those values.","title":"3. Read images and keypoints from the disk."},{"location":"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes","text":"Let's say you have an example image with five keypoints. A list with those five keypoints' coordinates in the xy format will look the following: keypoints = [ ( 264 , 203 ), ( 86 , 88 ), ( 254 , 160 ), ( 193 , 103 ), ] Then you pass those keypoints to the transform function along with the image and receive the augmented versions of image and keypoints. transformed = transform ( image = image , keypoints = keypoints ) transformed_image = transformed [ 'image' ] transformed_keypoints = transformed [ 'keypoints' ] The augmented image with augmented keypoints If you set remove_invisible to False in keypoint_params , then Albumentations will return all keypoints, even if they lie outside the visible area. In the example image below, you can see that the keypoint for the right elbow is located outside the image, but Albumentations still retuned it. The area outside the image is highlighted in yellow. When remove_invisible is set to False Albumentations will return all keypoints, even those located outside the image If keypoints have associated class labels, you need to create a list that contains those labels: class_labels = [ 'left_elbow' , 'right_elbow' , 'left_wrist' , 'right_wrist' , 'right_hip' , ] Also, you need to declare the name of the argument to transform that will contain those labels. For declaration, you need to use the label_fields parameters of A.KeypointParams . For example, we could use the class_labels name for the argument with labels. transform = A . Compose ([ A . RandomCrop ( width = 330 , height = 330 ), A . RandomBrightnessContrast ( p = 0.2 ), ], keypoint_params = A . KeypointParams ( format = 'xy' , label_fields = [ 'class_labels' ])) Next, you pass both keypoints' coordinates and class labels to transform . transformed = transform ( image = image , keypoints = keypoints , class_labels = class_labels ) transformed_image = transformed [ 'image' ] transformed_keypoints = transformed [ 'keypoints' ] transformed_class_labels = transformed [ 'class_labels' ] Note that label_fields expects a list, so you can set multiple fields that contain labels for your keypoints. So if you declare Compose like transform = A . Compose ([ A . RandomCrop ( width = 330 , height = 330 ), A . RandomBrightnessContrast ( p = 0.2 ), ], keypoint_params = A . KeypointParams ( format = 'xy' , label_fields = [ 'class_labels' , 'class_sides' ])) you can use those multiple arguments to pass info about class labels, like class_labels = [ 'left_elbow' , 'right_elbow' , 'left_wrist' , 'right_wrist' , 'right_hip' , ] class_sides = [ 'left' , 'right' , 'left' , 'right' , 'right' ] transformed = transform ( image = image , keypoints = keypoints , class_labels = class_labels , class_sides = class_sides ) transformed_class_sides = transformed [ 'class_sides' ] transformed_class_labels = transformed [ 'class_labels' ] transformed_keypoints = transformed [ 'keypoints' ] transformed_image = transformed [ 'image' ] Example input and output data for keypoints augmentation with two separate arguments for class labels Note Some augmentations may affect class labels and make them incorrect. For example, the HorizontalFlip augmentation mirrors the input image. When you apply that augmentation to keypoints that mark the side of body parts (left or right), those keypoints will point to the wrong side (since left on the mirrored image becomes right ). So when you are creating an augmentation pipeline look carefully which augmentations. could be applied to the input data. HorizontalFlip may make keypoints' labels incorrect","title":"Step 4. Pass an image and keypoints to the augmentation pipeline and receive augmented images and boxes."},{"location":"getting_started/keypoints_augmentation/#examples","text":"Using Albumentations to augment keypoints","title":"Examples"},{"location":"getting_started/mask_augmentation/","text":"Mask augmentation for segmentation \u00b6 For instance and semantic segmentation tasks, you need to augment both the input image and one or more output masks. Albumentations ensures that the input image and the output mask will receive the same set of augmentations with the same parameters. The process of augmenting images and masks looks very similar to the regular image-only augmentation . You import the required libraries. You define an augmentation pipeline. You read images and masks from the disk. You pass an image and one or more masks to the augmentation pipeline and receive augmented images and masks. Steps 1 and 2. Import the required libraries and define an augmentation pipeline. \u00b6 Image augmentation for classification described Steps 1 and 2 in great detail. These are the same steps for the simultaneous augmentation of images and masks. import albumentations as A import cv2 transform = A . Compose ([ A . RandomCrop ( width = 256 , height = 256 ), A . HorizontalFlip ( p = 0.5 ), A . RandomBrightnessContrast ( p = 0.2 ), ]) Step 3. Read images and masks from the disk. \u00b6 Reading an image image = cv2 . imread ( \"/path/to/image.jpg\" ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) For semantic segmentation, you usually read one mask per image. Albumentations expects the mask to be a NumPy array. The height and width of the mask should have the same values as the height and width of the image. mask = cv2 . imread ( \"/path/to/mask.png\" ) For instance segmentation, you sometimes need to read multiple masks per image. Then you create a list that contains all the masks. mask_1 = cv2 . imread ( \"/path/to/mask_1.png\" ) mask_2 = cv2 . imread ( \"/path/to/mask_2.png\" ) mask_3 = cv2 . imread ( \"/path/to/mask_3.png\" ) masks = [ mask_1 , mask_2 , mask_3 ] Some datasets use other formats to store masks. For example, they can use Run-Length Encoding or Polygon coordinates. In that case, you need to convert a mask to a NumPy before augmenting it with Albumentations. Often dataset authors provide special libraries and tools to simplify the conversion. Step 4. Pass image and masks to the augmentation pipeline and receive augmented images and masks. \u00b6 If the image has one associated mask, you need to call transform with two arguments: image and mask . In image you should pass the input image, in mask you should pass the output mask. transform will return a dictionary with two keys: image will contain the augmented image, and mask will contain the augmented mask. transformed = transform ( image = image , mask = mask ) transformed_image = transformed [ 'image' ] transformed_mask = transformed [ 'mask' ] An image and a mask before and after augmentation. Inria Aerial Image Labeling dataset contains aerial photos as well as their segmentation masks. Each pixel of the mask is marked as 1 if the pixel belongs to the class building and 0 otherwise. If the image has multiple associated masks, you should use the masks argument instead of mask . In masks you should pass a list of masks. transformed = transform ( image = image , masks = masks ) transformed_image = transformed [ 'image' ] transformed_masks = transformed [ 'masks' ] Examples \u00b6 Using Albumentations for a semantic segmentation task Showcase. Cool augmentation examples on diverse set of images from various real-world tasks.","title":"Mask augmentation for segmentation"},{"location":"getting_started/mask_augmentation/#mask-augmentation-for-segmentation","text":"For instance and semantic segmentation tasks, you need to augment both the input image and one or more output masks. Albumentations ensures that the input image and the output mask will receive the same set of augmentations with the same parameters. The process of augmenting images and masks looks very similar to the regular image-only augmentation . You import the required libraries. You define an augmentation pipeline. You read images and masks from the disk. You pass an image and one or more masks to the augmentation pipeline and receive augmented images and masks.","title":"Mask augmentation for segmentation"},{"location":"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline","text":"Image augmentation for classification described Steps 1 and 2 in great detail. These are the same steps for the simultaneous augmentation of images and masks. import albumentations as A import cv2 transform = A . Compose ([ A . RandomCrop ( width = 256 , height = 256 ), A . HorizontalFlip ( p = 0.5 ), A . RandomBrightnessContrast ( p = 0.2 ), ])","title":"Steps 1 and 2. Import the required libraries and define an augmentation pipeline."},{"location":"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk","text":"Reading an image image = cv2 . imread ( \"/path/to/image.jpg\" ) image = cv2 . cvtColor ( image , cv2 . COLOR_BGR2RGB ) For semantic segmentation, you usually read one mask per image. Albumentations expects the mask to be a NumPy array. The height and width of the mask should have the same values as the height and width of the image. mask = cv2 . imread ( \"/path/to/mask.png\" ) For instance segmentation, you sometimes need to read multiple masks per image. Then you create a list that contains all the masks. mask_1 = cv2 . imread ( \"/path/to/mask_1.png\" ) mask_2 = cv2 . imread ( \"/path/to/mask_2.png\" ) mask_3 = cv2 . imread ( \"/path/to/mask_3.png\" ) masks = [ mask_1 , mask_2 , mask_3 ] Some datasets use other formats to store masks. For example, they can use Run-Length Encoding or Polygon coordinates. In that case, you need to convert a mask to a NumPy before augmenting it with Albumentations. Often dataset authors provide special libraries and tools to simplify the conversion.","title":"Step 3. Read images and masks from the disk."},{"location":"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks","text":"If the image has one associated mask, you need to call transform with two arguments: image and mask . In image you should pass the input image, in mask you should pass the output mask. transform will return a dictionary with two keys: image will contain the augmented image, and mask will contain the augmented mask. transformed = transform ( image = image , mask = mask ) transformed_image = transformed [ 'image' ] transformed_mask = transformed [ 'mask' ] An image and a mask before and after augmentation. Inria Aerial Image Labeling dataset contains aerial photos as well as their segmentation masks. Each pixel of the mask is marked as 1 if the pixel belongs to the class building and 0 otherwise. If the image has multiple associated masks, you should use the masks argument instead of mask . In masks you should pass a list of masks. transformed = transform ( image = image , masks = masks ) transformed_image = transformed [ 'image' ] transformed_masks = transformed [ 'masks' ]","title":"Step 4. Pass image and masks to the augmentation pipeline and receive augmented images and masks."},{"location":"getting_started/mask_augmentation/#examples","text":"Using Albumentations for a semantic segmentation task Showcase. Cool augmentation examples on diverse set of images from various real-world tasks.","title":"Examples"},{"location":"getting_started/setting_probabilities/","text":"Setting probabilities for transforms in an augmentation pipeline \u00b6 Each augmentation in Albumentations has a parameter named p that sets the probability of applying that augmentation to input data. The following augmentations have the default value of p set 1 (which means that by default they will be applied to each instance of input data): Compose , ReplayCompose , CenterCrop , Crop , CropNonEmptyMaskIfExists , FromFloat , CenterCrop , Crop , CropNonEmptyMaskIfExists , FromFloat , IAACropAndPad , Lambda , LongestMaxSize , Normalize , PadIfNeeded , RandomCrop , RandomCropNearBBox , RandomResizedCrop , RandomSizedBBoxSafeCrop , RandomSizedCrop , Resize , SmallestMaxSize , ToFloat . All other augmentations have the default value of p set 0.5, which means that by default, they will be applied to 50% of instances of input data. Let's take a look at the example: import albumentations as A import cv2 p1 = 0.95 p2 = 0.85 p3 = 0.75 transform = A . Compose ([ A . RandomRotate90 ( p = p2 ), A . OneOf ([ A . IAAAdditiveGaussianNoise ( p = 0.9 ), A . GaussNoise ( p = 0.6 ), ], p = p3 ) ], p = p1 ) image = cv2 . imread ( 'some/image.jpg' ) image = cv2 . cvtColor ( cv2 . COLOR_BGR2RGB ) transformed = transform ( image = image ) transformed_image = transformed [ 'image' ] We declare an augmentation pipeline. In this pipeline, we use three placeholder values to set probabilities: p1 , p2 , and p3 . Let's take a closer look at them. p1 \u00b6 p1 sets the probability that the augmentation pipeline will apply augmentations at all. If p1 is set to 0, then augmentations inside Compose will never be applied to the input image, so the augmentation pipeline will always return the input image unchanged. If p1 is set to 1, then all augmentations inside Compose will have a chance to be applied. The example above contains two augmentations inside Compose : RandomRotate90 and the OneOf block with two child augmentations (more on their probabilities later). Any value of p1 between 0 and 1 means that augmentations inside Compose could be applied with the probability between 0 and 100%. If p1 equals to 1 or p1 is less than 1, but the random generator decides to apply augmentations inside Compose probabilities p2 and p3 come into play. p2 \u00b6 Each augmentation inside Compose has a probability of being applied. p2 sets the probability of applying RandomRotate90 . In the example above, p2 equals 0.85, so RandomRotate90 has an 85% chance to be applied to the input image. p3 \u00b6 p3 sets the probability of applying the OneOf block. If the random generator decided to apply RandomRotate90 at the previous step, then OneOf will receive data augmented by it. If the random generator decided not to apply RandomRotate90 then OneOf will receive the input data (that was passed to Compose ) since RandomRotate90 is skipped. The OneOf block applies one of the augmentations inside it. That means that if the random generator chooses to apply OneOf then one child augmentation from it will be applied to the input data. To decide which augmentation within the OneOf block is used, Albumentations uses the following rule: The OneOf block normalizes the probabilities of all augmentations inside it, so their probabilities sum up to 1. Next, OneOf chooses one of the augmentations inside it with a chance defined by its normalized probability and applies it to the input data. In the example above IAAAdditiveGaussianNoise has probability 0.9 and GaussNoise probability 0.6. After normalization, they become 0.6 and 0.4. Which means that OneOf will decide that it should use IAAAdditiveGaussianNoise with probability 0.6 and GaussNoise otherwise. Example calculations \u00b6 Thus, each augmentation in the example above will be applied with the probability: RandomRotate90 : p1 * p2 IAAAdditiveGaussianNoise : p1 * p3 * (0.9 / (0.9 + 0.6)) GaussianNoise : p1 * p3 * (0.6 / (0.9 + 0.6))","title":"Setting probabilities for transforms in an augmentation pipeline"},{"location":"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline","text":"Each augmentation in Albumentations has a parameter named p that sets the probability of applying that augmentation to input data. The following augmentations have the default value of p set 1 (which means that by default they will be applied to each instance of input data): Compose , ReplayCompose , CenterCrop , Crop , CropNonEmptyMaskIfExists , FromFloat , CenterCrop , Crop , CropNonEmptyMaskIfExists , FromFloat , IAACropAndPad , Lambda , LongestMaxSize , Normalize , PadIfNeeded , RandomCrop , RandomCropNearBBox , RandomResizedCrop , RandomSizedBBoxSafeCrop , RandomSizedCrop , Resize , SmallestMaxSize , ToFloat . All other augmentations have the default value of p set 0.5, which means that by default, they will be applied to 50% of instances of input data. Let's take a look at the example: import albumentations as A import cv2 p1 = 0.95 p2 = 0.85 p3 = 0.75 transform = A . Compose ([ A . RandomRotate90 ( p = p2 ), A . OneOf ([ A . IAAAdditiveGaussianNoise ( p = 0.9 ), A . GaussNoise ( p = 0.6 ), ], p = p3 ) ], p = p1 ) image = cv2 . imread ( 'some/image.jpg' ) image = cv2 . cvtColor ( cv2 . COLOR_BGR2RGB ) transformed = transform ( image = image ) transformed_image = transformed [ 'image' ] We declare an augmentation pipeline. In this pipeline, we use three placeholder values to set probabilities: p1 , p2 , and p3 . Let's take a closer look at them.","title":"Setting probabilities for transforms in an augmentation pipeline"},{"location":"getting_started/setting_probabilities/#p1","text":"p1 sets the probability that the augmentation pipeline will apply augmentations at all. If p1 is set to 0, then augmentations inside Compose will never be applied to the input image, so the augmentation pipeline will always return the input image unchanged. If p1 is set to 1, then all augmentations inside Compose will have a chance to be applied. The example above contains two augmentations inside Compose : RandomRotate90 and the OneOf block with two child augmentations (more on their probabilities later). Any value of p1 between 0 and 1 means that augmentations inside Compose could be applied with the probability between 0 and 100%. If p1 equals to 1 or p1 is less than 1, but the random generator decides to apply augmentations inside Compose probabilities p2 and p3 come into play.","title":"p1"},{"location":"getting_started/setting_probabilities/#p2","text":"Each augmentation inside Compose has a probability of being applied. p2 sets the probability of applying RandomRotate90 . In the example above, p2 equals 0.85, so RandomRotate90 has an 85% chance to be applied to the input image.","title":"p2"},{"location":"getting_started/setting_probabilities/#p3","text":"p3 sets the probability of applying the OneOf block. If the random generator decided to apply RandomRotate90 at the previous step, then OneOf will receive data augmented by it. If the random generator decided not to apply RandomRotate90 then OneOf will receive the input data (that was passed to Compose ) since RandomRotate90 is skipped. The OneOf block applies one of the augmentations inside it. That means that if the random generator chooses to apply OneOf then one child augmentation from it will be applied to the input data. To decide which augmentation within the OneOf block is used, Albumentations uses the following rule: The OneOf block normalizes the probabilities of all augmentations inside it, so their probabilities sum up to 1. Next, OneOf chooses one of the augmentations inside it with a chance defined by its normalized probability and applies it to the input data. In the example above IAAAdditiveGaussianNoise has probability 0.9 and GaussNoise probability 0.6. After normalization, they become 0.6 and 0.4. Which means that OneOf will decide that it should use IAAAdditiveGaussianNoise with probability 0.6 and GaussNoise otherwise.","title":"p3"},{"location":"getting_started/setting_probabilities/#example-calculations","text":"Thus, each augmentation in the example above will be applied with the probability: RandomRotate90 : p1 * p2 IAAAdditiveGaussianNoise : p1 * p3 * (0.9 / (0.9 + 0.6)) GaussianNoise : p1 * p3 * (0.6 / (0.9 + 0.6))","title":"Example calculations"},{"location":"getting_started/simultaneous_augmentation/","text":"Simultaneous augmentation of multiple targets: masks, bounding boxes, keypoints \u00b6 Albumentations can apply the same set of transformations to the input images and all the targets that are passed to transform : masks, bounding boxes, and keypoints. Please refer to articles Image augmentation for classification , Mask augmentation for segmentation , Bounding boxes augmentation for object detection , and Keypoints augmentation for the detailed description of each data type. Note Some transforms in Albumentation don't support bounding boxes or keypoints. If you try to use them you will get an exception. Please refer to this article to check whether a transform can augment bounding boxes and keypoints. Below is an example, how you can simultaneously augment the input image, mask, bounding boxes with their labels, and keypoints with their labels. Note that the only required argument to transform is image ; all other arguments are optional, and you can combine them in any way. Step 1. Define Compose with parameters that specify formats for bounding boxes and keypoints. \u00b6 transform = A . Compose ( [ A . RandomCrop ( width = 330 , height = 330 ), A . RandomBrightnessContrast ( p = 0.2 )], bbox_params = A . BboxParams ( format = \"coco\" , label_fields = [ \"bbox_classes\" ]), keypoint_params = A . KeypointParams ( format = \"xy\" , label_fields = [ \"keypoints_classes\" ]), ) Step 2. Load all required data from the disk. \u00b6 Please refer to articles Image augmentation for classification , Mask augmentation for segmentation , Bounding boxes augmentation for object detection , and Keypoints augmentation for more information about loading the input data. For example, here is an image from the COCO dataset . that has one associated mask, one bounding box with the class label person , and five keypoints that define body parts. An example image with mask, bounding boxes and keypoints Step 3. Pass all targets to transform and receive their augmented versions \u00b6 transformed = transform ( image = img , mask = mask , bboxes = bboxes , bbox_classes = bbox_classes , keypoints = keypoints , keypoints_classes = keypoints_classes , ) transformed_image = transformed [ \"image\" ] transformed_mask = transformed [ \"mask\" ] transformed_bboxes = transformed [ \"bboxes\" ] transformed_bbox_classes = transformed [ \"bbox_classes\" ] transformed_keypoints = transformed [ \"keypoints\" ] transformed_keypoints_classes = transformed [ \"keypoints_classes\" ] The augmented version of the image and its targets Examples \u00b6 Showcase. Cool augmentation examples on diverse set of images from various real-world tasks.","title":"Simultaneous augmentation of multiple targets: masks, bounding boxes, keypoints"},{"location":"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints","text":"Albumentations can apply the same set of transformations to the input images and all the targets that are passed to transform : masks, bounding boxes, and keypoints. Please refer to articles Image augmentation for classification , Mask augmentation for segmentation , Bounding boxes augmentation for object detection , and Keypoints augmentation for the detailed description of each data type. Note Some transforms in Albumentation don't support bounding boxes or keypoints. If you try to use them you will get an exception. Please refer to this article to check whether a transform can augment bounding boxes and keypoints. Below is an example, how you can simultaneously augment the input image, mask, bounding boxes with their labels, and keypoints with their labels. Note that the only required argument to transform is image ; all other arguments are optional, and you can combine them in any way.","title":"Simultaneous augmentation of multiple targets: masks, bounding boxes, keypoints"},{"location":"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints","text":"transform = A . Compose ( [ A . RandomCrop ( width = 330 , height = 330 ), A . RandomBrightnessContrast ( p = 0.2 )], bbox_params = A . BboxParams ( format = \"coco\" , label_fields = [ \"bbox_classes\" ]), keypoint_params = A . KeypointParams ( format = \"xy\" , label_fields = [ \"keypoints_classes\" ]), )","title":"Step 1. Define Compose with parameters that specify formats for bounding boxes and keypoints."},{"location":"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk","text":"Please refer to articles Image augmentation for classification , Mask augmentation for segmentation , Bounding boxes augmentation for object detection , and Keypoints augmentation for more information about loading the input data. For example, here is an image from the COCO dataset . that has one associated mask, one bounding box with the class label person , and five keypoints that define body parts. An example image with mask, bounding boxes and keypoints","title":"Step 2. Load all required data from the disk."},{"location":"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions","text":"transformed = transform ( image = img , mask = mask , bboxes = bboxes , bbox_classes = bbox_classes , keypoints = keypoints , keypoints_classes = keypoints_classes , ) transformed_image = transformed [ \"image\" ] transformed_mask = transformed [ \"mask\" ] transformed_bboxes = transformed [ \"bboxes\" ] transformed_bbox_classes = transformed [ \"bbox_classes\" ] transformed_keypoints = transformed [ \"keypoints\" ] transformed_keypoints_classes = transformed [ \"keypoints_classes\" ] The augmented version of the image and its targets","title":"Step 3. Pass all targets to transform and receive their augmented versions"},{"location":"getting_started/simultaneous_augmentation/#examples","text":"Showcase. Cool augmentation examples on diverse set of images from various real-world tasks.","title":"Examples"},{"location":"getting_started/transforms_and_targets/","text":"A list of transforms and their supported targets \u00b6 We can split all transforms into two groups: pixel-level transforms, and spatial-level transforms. Pixel-level transforms will change just an input image and will leave any additional targets such as masks, bounding boxes, and keypoints unchanged. Spatial-level transforms will simultaneously change both an input image as well as additional targets such as masks, bounding boxes, and keypoints. For the additional information, please refer to this section of \"Why you need a dedicated library for image augmentation\" . Pixel-level transforms \u00b6 Here is a list of all available pixel-level transforms. You can apply a spatial-level transform to any target, and under the hood, the transform will change only the input image and return any other input targets such as masks, bounding boxes, or keypoints unchanged. Blur CLAHE ChannelDropout ChannelShuffle CoarseDropout Downscale Equalize FancyPCA FromFloat GaussNoise GaussianBlur GlassBlur HueSaturationValue IAAAdditiveGaussianNoise IAAEmboss IAASharpen IAASuperpixels ISONoise ImageCompression InvertImg MedianBlur MotionBlur MultiplicativeNoise Normalize Posterize RGBShift RandomBrightnessContrast RandomFog RandomGamma RandomRain RandomShadow RandomSnow RandomSunFlare Solarize ToFloat ToGray ToSepia Spatial-level transforms \u00b6 Here is a table with spatial-level transforms and targets they support. If you try to apply a spatial-level transform to an unsupported target, Albumentations will raise an error. Transform Image Masks BBoxes Keypoints CenterCrop \u2713 \u2713 \u2713 \u2713 Crop \u2713 \u2713 \u2713 \u2713 CropNonEmptyMaskIfExists \u2713 \u2713 \u2713 \u2713 ElasticTransform \u2713 \u2713 Flip \u2713 \u2713 \u2713 \u2713 GridDistortion \u2713 \u2713 GridDropout \u2713 \u2713 HorizontalFlip \u2713 \u2713 \u2713 \u2713 IAAAffine \u2713 \u2713 \u2713 \u2713 IAACropAndPad \u2713 \u2713 \u2713 \u2713 IAAFliplr \u2713 \u2713 \u2713 \u2713 IAAFlipud \u2713 \u2713 \u2713 \u2713 IAAPerspective \u2713 \u2713 \u2713 \u2713 IAAPiecewiseAffine \u2713 \u2713 \u2713 \u2713 Lambda \u2713 \u2713 \u2713 \u2713 LongestMaxSize \u2713 \u2713 \u2713 \u2713 MaskDropout \u2713 \u2713 NoOp \u2713 \u2713 \u2713 \u2713 OpticalDistortion \u2713 \u2713 PadIfNeeded \u2713 \u2713 \u2713 \u2713 RandomCrop \u2713 \u2713 \u2713 \u2713 RandomCropNearBBox \u2713 \u2713 \u2713 \u2713 RandomGridShuffle \u2713 \u2713 RandomResizedCrop \u2713 \u2713 \u2713 \u2713 RandomRotate90 \u2713 \u2713 \u2713 \u2713 RandomScale \u2713 \u2713 \u2713 \u2713 RandomSizedBBoxSafeCrop \u2713 \u2713 \u2713 RandomSizedCrop \u2713 \u2713 \u2713 \u2713 Resize \u2713 \u2713 \u2713 \u2713 Rotate \u2713 \u2713 \u2713 \u2713 ShiftScaleRotate \u2713 \u2713 \u2713 \u2713 SmallestMaxSize \u2713 \u2713 \u2713 \u2713 Transpose \u2713 \u2713 \u2713 \u2713 VerticalFlip \u2713 \u2713 \u2713 \u2713","title":"A list of transforms and their supported targets"},{"location":"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets","text":"We can split all transforms into two groups: pixel-level transforms, and spatial-level transforms. Pixel-level transforms will change just an input image and will leave any additional targets such as masks, bounding boxes, and keypoints unchanged. Spatial-level transforms will simultaneously change both an input image as well as additional targets such as masks, bounding boxes, and keypoints. For the additional information, please refer to this section of \"Why you need a dedicated library for image augmentation\" .","title":"A list of transforms and their supported targets"},{"location":"getting_started/transforms_and_targets/#pixel-level-transforms","text":"Here is a list of all available pixel-level transforms. You can apply a spatial-level transform to any target, and under the hood, the transform will change only the input image and return any other input targets such as masks, bounding boxes, or keypoints unchanged. Blur CLAHE ChannelDropout ChannelShuffle CoarseDropout Downscale Equalize FancyPCA FromFloat GaussNoise GaussianBlur GlassBlur HueSaturationValue IAAAdditiveGaussianNoise IAAEmboss IAASharpen IAASuperpixels ISONoise ImageCompression InvertImg MedianBlur MotionBlur MultiplicativeNoise Normalize Posterize RGBShift RandomBrightnessContrast RandomFog RandomGamma RandomRain RandomShadow RandomSnow RandomSunFlare Solarize ToFloat ToGray ToSepia","title":"Pixel-level transforms"},{"location":"getting_started/transforms_and_targets/#spatial-level-transforms","text":"Here is a table with spatial-level transforms and targets they support. If you try to apply a spatial-level transform to an unsupported target, Albumentations will raise an error. Transform Image Masks BBoxes Keypoints CenterCrop \u2713 \u2713 \u2713 \u2713 Crop \u2713 \u2713 \u2713 \u2713 CropNonEmptyMaskIfExists \u2713 \u2713 \u2713 \u2713 ElasticTransform \u2713 \u2713 Flip \u2713 \u2713 \u2713 \u2713 GridDistortion \u2713 \u2713 GridDropout \u2713 \u2713 HorizontalFlip \u2713 \u2713 \u2713 \u2713 IAAAffine \u2713 \u2713 \u2713 \u2713 IAACropAndPad \u2713 \u2713 \u2713 \u2713 IAAFliplr \u2713 \u2713 \u2713 \u2713 IAAFlipud \u2713 \u2713 \u2713 \u2713 IAAPerspective \u2713 \u2713 \u2713 \u2713 IAAPiecewiseAffine \u2713 \u2713 \u2713 \u2713 Lambda \u2713 \u2713 \u2713 \u2713 LongestMaxSize \u2713 \u2713 \u2713 \u2713 MaskDropout \u2713 \u2713 NoOp \u2713 \u2713 \u2713 \u2713 OpticalDistortion \u2713 \u2713 PadIfNeeded \u2713 \u2713 \u2713 \u2713 RandomCrop \u2713 \u2713 \u2713 \u2713 RandomCropNearBBox \u2713 \u2713 \u2713 \u2713 RandomGridShuffle \u2713 \u2713 RandomResizedCrop \u2713 \u2713 \u2713 \u2713 RandomRotate90 \u2713 \u2713 \u2713 \u2713 RandomScale \u2713 \u2713 \u2713 \u2713 RandomSizedBBoxSafeCrop \u2713 \u2713 \u2713 RandomSizedCrop \u2713 \u2713 \u2713 \u2713 Resize \u2713 \u2713 \u2713 \u2713 Rotate \u2713 \u2713 \u2713 \u2713 ShiftScaleRotate \u2713 \u2713 \u2713 \u2713 SmallestMaxSize \u2713 \u2713 \u2713 \u2713 Transpose \u2713 \u2713 \u2713 \u2713 VerticalFlip \u2713 \u2713 \u2713 \u2713","title":"Spatial-level transforms"},{"location":"introduction/image_augmentation/","text":"What is image augmentation and how it can improve the performance of deep neural networks \u00b6 Deep neural networks require a lot of training data to obtain good results and prevent overfitting. However, it often very difficult to get enough training samples. Multiple reasons could make it very hard or even impossible to gather enough data: To make a training dataset, you need to obtain images and then label them. For example, you need to assign correct class labels if you have an image classification task. For an object detection task, you need to draw bounding boxes around objects. For a semantic segmentation task, you need to assign a correct class to each input image pixel. This process requires manual labor, and sometimes it could be very costly to label the training data. For example, to correctly label medical images, you need expensive domain experts. Sometimes even collecting training images could be hard. There are many legal restrictions for working with healthcare data, and obtaining it requires a lot of effort. Sometimes getting the training images is more feasible, but it will cost a lot of money. For example, to get satellite images, you need to pay a satellite operator to take those photos. To get images for road scene recognition, you need an operator that will drive a car and collect the required data. Image augmentation to the rescue \u00b6 Image augmentation is a process of creating new training examples from the existing ones. To make a new sample, you slightly change the original image. For instance, you could make a new image a little brighter; you could cut a piece from the original image; you could make a new image by mirroring the original one, etc. Here are some examples of transformations of the original image that will create a new training sample. By applying those transformations to the original training dataset, you could create an almost infinite amount of new training samples. How much does image augmentation improves the quality and performance of deep neural networks \u00b6 Basic augmentations techniques were used almost in all papers that describe the state-of-the-art models for image recognition. AlexNet was the first model that demonstrated exceptional capabilities of using deep neural networks for image recognition. For training, the authors used a set of basic image augmentation techniques. They resized original images to the fixed size of 256 by 256 pixels, and then they cropped patches of size 224 by 224 pixels as well as their horizontal reflections from those resized images. Also, they altered the intensities of the RGB channels in images. Successive state-of-the-art models such as Inception , ResNet , and EfficientNet also used image augmentation techniques for training. In 2018 Google published a paper about AutoAugment - an algorithm that automatically discovers the best set of augmentations for the dataset. They showed that a custom set of augmentations improves the performance of the model. Here is a comparison between a model that used only the base set of augmentations and a model that used a specific set of augmentations discovered by AutoAugment. The table shows Top-1 accuracy (%) on the ImageNet validation set; higher is better. Model Base augmentations AutoAugment augmentations ResNet-50 76.3 77.6 ResNet-200 78.5 80.0 AmoebaNet-B (6,190) 82.2 82.8 AmoebaNet-C (6,228) 83.1 83.5 The table demonstrates that a diverse set of image augmentations improves the performance of neural networks compared to a base set with only a few most popular transformation techniques. Augmentations help to fight overfitting and improve the performance of deep neural networks for computer vision tasks such as classification, segmentation, and object detection. The best part is that image augmentations libraries such as Albumentations make it possible to add image augmentations to any computer vision pipeline with minimal effort.","title":"What is image augmentation and how it can improve the performance of deep neural networks"},{"location":"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks","text":"Deep neural networks require a lot of training data to obtain good results and prevent overfitting. However, it often very difficult to get enough training samples. Multiple reasons could make it very hard or even impossible to gather enough data: To make a training dataset, you need to obtain images and then label them. For example, you need to assign correct class labels if you have an image classification task. For an object detection task, you need to draw bounding boxes around objects. For a semantic segmentation task, you need to assign a correct class to each input image pixel. This process requires manual labor, and sometimes it could be very costly to label the training data. For example, to correctly label medical images, you need expensive domain experts. Sometimes even collecting training images could be hard. There are many legal restrictions for working with healthcare data, and obtaining it requires a lot of effort. Sometimes getting the training images is more feasible, but it will cost a lot of money. For example, to get satellite images, you need to pay a satellite operator to take those photos. To get images for road scene recognition, you need an operator that will drive a car and collect the required data.","title":"What is image augmentation and how it can improve the performance of deep neural networks"},{"location":"introduction/image_augmentation/#image-augmentation-to-the-rescue","text":"Image augmentation is a process of creating new training examples from the existing ones. To make a new sample, you slightly change the original image. For instance, you could make a new image a little brighter; you could cut a piece from the original image; you could make a new image by mirroring the original one, etc. Here are some examples of transformations of the original image that will create a new training sample. By applying those transformations to the original training dataset, you could create an almost infinite amount of new training samples.","title":"Image augmentation to the rescue"},{"location":"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks","text":"Basic augmentations techniques were used almost in all papers that describe the state-of-the-art models for image recognition. AlexNet was the first model that demonstrated exceptional capabilities of using deep neural networks for image recognition. For training, the authors used a set of basic image augmentation techniques. They resized original images to the fixed size of 256 by 256 pixels, and then they cropped patches of size 224 by 224 pixels as well as their horizontal reflections from those resized images. Also, they altered the intensities of the RGB channels in images. Successive state-of-the-art models such as Inception , ResNet , and EfficientNet also used image augmentation techniques for training. In 2018 Google published a paper about AutoAugment - an algorithm that automatically discovers the best set of augmentations for the dataset. They showed that a custom set of augmentations improves the performance of the model. Here is a comparison between a model that used only the base set of augmentations and a model that used a specific set of augmentations discovered by AutoAugment. The table shows Top-1 accuracy (%) on the ImageNet validation set; higher is better. Model Base augmentations AutoAugment augmentations ResNet-50 76.3 77.6 ResNet-200 78.5 80.0 AmoebaNet-B (6,190) 82.2 82.8 AmoebaNet-C (6,228) 83.1 83.5 The table demonstrates that a diverse set of image augmentations improves the performance of neural networks compared to a base set with only a few most popular transformation techniques. Augmentations help to fight overfitting and improve the performance of deep neural networks for computer vision tasks such as classification, segmentation, and object detection. The best part is that image augmentations libraries such as Albumentations make it possible to add image augmentations to any computer vision pipeline with minimal effort.","title":"How much does image augmentation improves the quality and performance of deep neural networks"},{"location":"introduction/why_albumentations/","text":"Why Albumentations \u00b6 A single interface to work with images, masks, bounding boxes, and key points. \u00b6 Albumentations provides a single interface to work with different computer vision tasks such as classification, semantic segmentation, instance segmentation, object detection, pose estimation, etc. Battle-tested \u00b6 The library is widely used in industry , deep learning research , machine learning competitions , and open source projects . High performance \u00b6 Albumentations optimized for maximum speed and performance. Under the hood, the library uses highly optimized functions from OpenCV and NumPy for data processing. We have a regularly updated benchmark that compares the speed of popular image augmentations libraries for the most common image transformations. Albumentations demonstrates the best performance in most cases. Diverse set of supported augmentations \u00b6 Albumentations supports more than 60 different image augmentations. Extensibility \u00b6 Albumentations allows to easily add new augmentations and use them in computer vision pipelines through a single interface along with built-in transformations. Rigorous testing \u00b6 Bugs in the augmentation pipeline could silently corrupt the input data. They can easily go unnoticed, but the performance of the models trained with incorrect data will degrade. Albumentations has an extensive test suite that helps to discover bugs during development. It is open source and MIT licensed \u00b6 You can find the source code on GitHub .","title":"Why Albumentations"},{"location":"introduction/why_albumentations/#why-albumentations","text":"","title":"Why Albumentations"},{"location":"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points","text":"Albumentations provides a single interface to work with different computer vision tasks such as classification, semantic segmentation, instance segmentation, object detection, pose estimation, etc.","title":"A single interface to work with images, masks, bounding boxes, and key points."},{"location":"introduction/why_albumentations/#battle-tested","text":"The library is widely used in industry , deep learning research , machine learning competitions , and open source projects .","title":"Battle-tested"},{"location":"introduction/why_albumentations/#high-performance","text":"Albumentations optimized for maximum speed and performance. Under the hood, the library uses highly optimized functions from OpenCV and NumPy for data processing. We have a regularly updated benchmark that compares the speed of popular image augmentations libraries for the most common image transformations. Albumentations demonstrates the best performance in most cases.","title":"High performance"},{"location":"introduction/why_albumentations/#diverse-set-of-supported-augmentations","text":"Albumentations supports more than 60 different image augmentations.","title":"Diverse set of supported augmentations"},{"location":"introduction/why_albumentations/#extensibility","text":"Albumentations allows to easily add new augmentations and use them in computer vision pipelines through a single interface along with built-in transformations.","title":"Extensibility"},{"location":"introduction/why_albumentations/#rigorous-testing","text":"Bugs in the augmentation pipeline could silently corrupt the input data. They can easily go unnoticed, but the performance of the models trained with incorrect data will degrade. Albumentations has an extensive test suite that helps to discover bugs during development.","title":"Rigorous testing"},{"location":"introduction/why_albumentations/#it-is-open-source-and-mit-licensed","text":"You can find the source code on GitHub .","title":"It is open source and MIT licensed"},{"location":"introduction/why_you_need_a_dedicated_library_for_image_augmentation/","text":"Why you need a dedicated library for image augmentation \u00b6 At first glance, image augmentations look very simple; you apply basic transformations to an image: mirroring, cropping, changing brightness and contrast, etc. There are a lot of libraries that could do such image transformations. Here is an example of how you could use Pillow , a popular image processing library for Python, to make simple augmentations. from PIL import Image , ImageEnhance image = Image . open ( \"parrot.jpg\" ) mirrored_image = image . transpose ( Image . FLIP_LEFT_RIGHT ) rotated_image = image . rotate ( 45 ) brightness_enhancer = ImageEnhance . Brightness ( image ) brighter_image = brightness_enhancer . enhance ( factor = 1.5 ) However, this approach has many limitations, and it doesn't handle all cases with image augmentation. An image augmentation library such as Albumentations gives you a lot of advantages. Here is a list of few pitfalls that augmentation libraries can handle very well. The need to apply the same transform to an image and for labels for segmentation, object detection, and keypoint detection tasks. \u00b6 For image classification, you need to modify only an input image and keep output labels intact because output labels are invariant to image modifications. Note There are some exceptions to this rule. For example, an image could contain a cat and have an assigned label cat . During image augmentation, if you crop a part of an image that doesn't have a cat on it, then the output label cat becomes wrong and misleading. Usually, you deal with those situations by deciding which augmentations you could apply to a dataset without risking to have problems with incorrect labels. For segmentation, you need to apply some transformations both to an input image and an output mask. You also have to use the same parameters both for the image transformation and the mask transformation. Let's look at an example of a semantic segmentation task from Inria Aerial Image Labeling Dataset. The dataset contains aerial photos as well as masks for those photos. Each pixel of the mask is marked either as 1 if the pixel belongs to the class building and 0 otherwise. There are two types of image augmentations: pixel-level augmentations and spatial-level augmentations. Pixel-level augmentations change the values of pixels of the original image, but they don't change the output mask. Image transformations such as changing brightness or contrast of adjusting values of the RGB-palette of the image are pixel-level augmentations. We modify the input image by adjusting its brightness, but we keep the output mask intact. On the contrary, spatial-level augmentations change both the image and the mask. When you apply image transformations such as mirroring or rotation or cropping a part of the input image, you also need to apply the same transformation to the output label to preserve its correctness. We rotate both the input image and the output mask. We use the same set of transformations with the same parameters, both for the image and the mask. The same is true for object detection tasks. For pixel-level augmentations, you only need to change the input image. With spatial-level augmentations, you need to apply the same transformation not only to the image but for bounding boxes coordinates as well. After applying spatial-level augmentations, you need to update coordinates of bounding boxes to represent the correct locations of objects on the augmented image. Pixel-level augmentations such as brightness adjustment change only the input image but not the coordinates of bounding boxes. Spatial-level augmentations such as mirroring and cropping a part of the image change both the input image and the bounding boxes' coordinates. Albumentations knows how to correctly apply transformation both to the input data as well as the output labels. Working with probabilities \u00b6 During training, you usually want to apply augmentations with a probability of less than 100% since you also need to have the original images in your training pipeline. Also, it is beneficial to be able to control the magnitude of image augmentation, how much does the augmentation change the original image. If the original dataset is large, you could apply only the basic augmentations with probability around 10-30% and with a small magnitude of changes. If the dataset is small, you need to act more aggressively with augmentations to prevent overfitting of neural networks, so you usually need to increase the probability of applying each augmentation to 40-50% and increase the magnitude of changes the augmentation makes to the image. Image augmentation libraries allow you to set the required probabilities and the magnitude of values for each transformation. Declarative definition of the augmentation pipeline and unified interface \u00b6 Usually, you want to apply not a single augmentation, but a set of augmentations with specific parameters such as probability and magnitude of changes. Augmentation libraries allow you to declare such a pipeline in a single place and then use it for image transformation through a unified interface. Some libraries can store and load transformation parameters to formats such as JSON, YAML, etc. Here is an example definition of an augmentation pipeline. This pipeline will first crop a random 512px x 512px part of the input image. Then with probability 30%, it will randomly change brightness and contrast of that crop. Finally, with probability 30%, it will horizontally flip the resulting image. import albumentations as A transform = A . Compose ([ A . RandomCrop ( 512 , 512 ), A . RandomBrightnessContrast ( p = 0.3 ), A . HorizontalFlip ( p = 0.5 ), ]) Rigorous testing \u00b6 A bug in the augmentation pipeline could easily go unnoticed. A buggy pipeline could silently corrupt input data. There won't be any exceptions and code failures, but the performance of trained neural networks will degrade because they received a garbage input during training. Augmentation libraries usually have large test suites that capture regressions during development. Also large user base helps to find unnoticed bugs and report them to developers.","title":"Why you need a dedicated library for image augmentation"},{"location":"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation","text":"At first glance, image augmentations look very simple; you apply basic transformations to an image: mirroring, cropping, changing brightness and contrast, etc. There are a lot of libraries that could do such image transformations. Here is an example of how you could use Pillow , a popular image processing library for Python, to make simple augmentations. from PIL import Image , ImageEnhance image = Image . open ( \"parrot.jpg\" ) mirrored_image = image . transpose ( Image . FLIP_LEFT_RIGHT ) rotated_image = image . rotate ( 45 ) brightness_enhancer = ImageEnhance . Brightness ( image ) brighter_image = brightness_enhancer . enhance ( factor = 1.5 ) However, this approach has many limitations, and it doesn't handle all cases with image augmentation. An image augmentation library such as Albumentations gives you a lot of advantages. Here is a list of few pitfalls that augmentation libraries can handle very well.","title":"Why you need a dedicated library for image augmentation"},{"location":"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks","text":"For image classification, you need to modify only an input image and keep output labels intact because output labels are invariant to image modifications. Note There are some exceptions to this rule. For example, an image could contain a cat and have an assigned label cat . During image augmentation, if you crop a part of an image that doesn't have a cat on it, then the output label cat becomes wrong and misleading. Usually, you deal with those situations by deciding which augmentations you could apply to a dataset without risking to have problems with incorrect labels. For segmentation, you need to apply some transformations both to an input image and an output mask. You also have to use the same parameters both for the image transformation and the mask transformation. Let's look at an example of a semantic segmentation task from Inria Aerial Image Labeling Dataset. The dataset contains aerial photos as well as masks for those photos. Each pixel of the mask is marked either as 1 if the pixel belongs to the class building and 0 otherwise. There are two types of image augmentations: pixel-level augmentations and spatial-level augmentations. Pixel-level augmentations change the values of pixels of the original image, but they don't change the output mask. Image transformations such as changing brightness or contrast of adjusting values of the RGB-palette of the image are pixel-level augmentations. We modify the input image by adjusting its brightness, but we keep the output mask intact. On the contrary, spatial-level augmentations change both the image and the mask. When you apply image transformations such as mirroring or rotation or cropping a part of the input image, you also need to apply the same transformation to the output label to preserve its correctness. We rotate both the input image and the output mask. We use the same set of transformations with the same parameters, both for the image and the mask. The same is true for object detection tasks. For pixel-level augmentations, you only need to change the input image. With spatial-level augmentations, you need to apply the same transformation not only to the image but for bounding boxes coordinates as well. After applying spatial-level augmentations, you need to update coordinates of bounding boxes to represent the correct locations of objects on the augmented image. Pixel-level augmentations such as brightness adjustment change only the input image but not the coordinates of bounding boxes. Spatial-level augmentations such as mirroring and cropping a part of the image change both the input image and the bounding boxes' coordinates. Albumentations knows how to correctly apply transformation both to the input data as well as the output labels.","title":"The need to apply the same transform to an image and for labels for segmentation, object detection, and keypoint detection tasks."},{"location":"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities","text":"During training, you usually want to apply augmentations with a probability of less than 100% since you also need to have the original images in your training pipeline. Also, it is beneficial to be able to control the magnitude of image augmentation, how much does the augmentation change the original image. If the original dataset is large, you could apply only the basic augmentations with probability around 10-30% and with a small magnitude of changes. If the dataset is small, you need to act more aggressively with augmentations to prevent overfitting of neural networks, so you usually need to increase the probability of applying each augmentation to 40-50% and increase the magnitude of changes the augmentation makes to the image. Image augmentation libraries allow you to set the required probabilities and the magnitude of values for each transformation.","title":"Working with probabilities"},{"location":"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface","text":"Usually, you want to apply not a single augmentation, but a set of augmentations with specific parameters such as probability and magnitude of changes. Augmentation libraries allow you to declare such a pipeline in a single place and then use it for image transformation through a unified interface. Some libraries can store and load transformation parameters to formats such as JSON, YAML, etc. Here is an example definition of an augmentation pipeline. This pipeline will first crop a random 512px x 512px part of the input image. Then with probability 30%, it will randomly change brightness and contrast of that crop. Finally, with probability 30%, it will horizontally flip the resulting image. import albumentations as A transform = A . Compose ([ A . RandomCrop ( 512 , 512 ), A . RandomBrightnessContrast ( p = 0.3 ), A . HorizontalFlip ( p = 0.5 ), ])","title":"Declarative definition of the augmentation pipeline and unified interface"},{"location":"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing","text":"A bug in the augmentation pipeline could easily go unnoticed. A buggy pipeline could silently corrupt input data. There won't be any exceptions and code failures, but the performance of trained neural networks will degrade because they received a garbage input during training. Augmentation libraries usually have large test suites that capture regressions during development. Also large user base helps to find unnoticed bugs and report them to developers.","title":"Rigorous testing"}],"index":{"fieldVectors":[["title/",[0,4.893,1,0.998,2,3.071]],["text/",[0,3.384,1,1.973,2,2.123,3,3.954,4,2.954,5,2.954,6,0.35,7,1.416,8,2.428,9,3.209,10,1.661,11,3.209,12,1.3,13,4.03,14,3.889,15,3.209,16,2.954,17,2.768,18,2.228,19,3.048,20,2.954,21,0.846,22,3.617,23,2.005,24,4.879,25,2.397,26,3.209,27,3.387,28,2.307,29,2.954,30,2.954,31,2.123,32,4.821,33,3.387,34,5.144,35,5.903,36,2.033,37,3.617,38,3.331,39,3.387,40,2.931,41,4.667,42,2.033,43,1.719,44,1.756,45,1.816,46,3.76,47,3.18,48,3.134,49,3.731,50,1.858,51,3.097,52,4.107,53,2.238,54,1.899,55,2.327,56,2.307,57,4.208,58,2.621,59,3.508,60,4.09,61,1.319,62,2.855,63,3.617,64,2.954,65,3.209,66,2.397,67,3.617,68,4.03,69,2.729,70,0.759,71,2.157,72,1.441,73,2.691,74,2.172,75,2.691,76,1.775,77,1.839,78,2.074,79,2.062,80,2.5,81,2.76,82,1.56,83,1.251,84,0.786,85,1.737,86,1.917,87,1.173,88,1.953,89,1.198,90,2.228,91,1.504,92,2.062,93,2.033,94,2.123,95,2.228,96,0.759,97,2.069,98,0.931,99,2.5,100,2.855,101,2.5,102,2.768,103,2.266,104,2.266,105,1.837,106,2.351,107,2.351,108,2.191,109,1.858,110,2.351,111,2.447,112,3.617,113,3.617,114,2.954,115,2.954,116,2.954,117,2.954,118,3.07,119,3.07,120,3.617,121,3.07,122,3.07,123,3.07,124,3.801,125,3.07,126,1.719,127,3.07,128,2.5,129,3.384,130,3.384,131,3.384,132,2.855,133,3.644,134,3.384,135,2.447,136,3.384]],["title/#welcome-to-albumentations-documentation",[0,4.893,1,0.998,2,3.071]],["text/#welcome-to-albumentations-documentation",[1,1.875,4,4.686,5,4.686,6,0.34,7,1.24,8,2.81,9,5.091,10,1.649,11,5.091,12,1.681,13,4.633,14,5.408,15,5.091,16,4.686,17,4.391,18,3.534,19,4.24,20,4.686,21,1.176,22,5.739,23,3.181,24,6.786,25,3.803,26,5.091,27,4.711,28,3.66,29,4.686,30,4.686,31,3.369,32,5.542,33,4.711,34,5.368,35,7.632,36,3.225,37,5.739,38,3.476,39,3.534,40,3.058,41,4.87,42,3.225,43,2.727,44,2.786,45,2.88,46,2.699,47,3.319,48,3.271,49,3.839,50,2.948,51,2.671,52,3.929,53,1.607,54,1.638,55,3.237,56,3.66,57,5.852,58,4.158,59,3.66,60,4.268,61,2.093,62,4.529,63,5.739,64,4.686,65,5.091,66,3.803,67,5.739,68,3.476,69,2.848,70,1.204,71,3.421,72,2.285]],["title/#introduction-to-image-augmentation",[6,0.186,7,0.707,34,4.893]],["text/#introduction-to-image-augmentation",[1,1.575,6,0.342,7,1.297,8,2.698,13,5.003,38,5.003,39,5.086,40,4.401,73,6.143,74,3.262,75,6.143]],["title/#getting-started-with-albumentations",[1,0.998,32,3.79,41,4.439]],["text/#getting-started-with-albumentations",[6,0.27,7,1.428,47,4.391,49,3.811,51,3.534,52,3.9,53,2.557,76,3.726,77,2.525,78,2.37,79,2.355,80,5.247,81,3.811,82,2.59,83,2.627,84,1.305,85,3.646,86,2.646,87,2.463,88,1.995]],["title/#examples",[54,2.049]],["text/#examples",[1,1.959,6,0.339,7,1.42,10,1.772,46,4.479,48,3.601,49,3.171,51,2.941,52,4.185,53,2.28,54,1.803,59,4.029,74,2.495,77,1.746,78,2.339,79,2.325,81,3.171,86,2.202,88,2.369,89,2.093,90,3.891,91,2.626,92,3.601,93,3.55,94,3.708,95,3.891,96,1.325,97,3.064,98,1.38,99,4.366,100,4.985,101,4.366,102,4.833,103,3.958,104,3.958,105,3.207,106,4.105,107,4.105,108,3.827,109,3.245,110,4.105,111,4.273]],["title/#external-resources",[112,6.051,113,6.051]],["text/#external-resources",[1,1.858,114,6.913,115,6.913,116,6.913,117,6.913,118,7.184,119,7.184]],["title/#other-topics",[120,7.177]],["text/#other-topics",[1,1.842,60,6.203,121,7.078,122,7.078,123,7.078,124,6.673,125,7.078,126,3.963,127,7.078]],["title/#api-reference",[68,3.666,69,3.003]],["text/#api-reference",[7,1.121,68,5.027,128,5.736,129,7.763,130,7.763,131,7.763,132,6.549,133,6.38,134,7.763,135,5.613,136,7.763]],["title/contributing/",[127,6.091]],["text/contributing/",[1,1.205,3,2.854,8,2.063,21,0.972,27,5.865,29,7.362,30,6.652,60,4.699,66,5.397,76,4.838,127,5.361,137,6.652,138,6.317,139,3.766,140,4.273,141,4.366,142,9.015,143,4.105,144,5.159,145,6.317,146,4.287,147,8.145,148,8.145,149,7.227,150,6.317,151,5.604,152,9.857,153,8.745,154,6.317,155,8.145,156,6.317,157,8.145,158,6.317,159,5.397,160,4.985,161,2.882,162,4.273,163,5.604,164,1.979,165,5.76,166,2.537,167,3.55,168,3.1,169,6.317,170,6.317,171,6.317]],["title/contributing/#contributing",[127,6.091]],["text/contributing/#contributing",[1,1.214,8,2.079,21,0.979,27,5.882,29,7.388,30,6.684,60,4.734,66,5.424,76,4.849,137,6.684,138,6.365,139,3.794,140,4.305,141,4.399,142,9.047,143,4.136,144,5.197,145,6.365,146,4.308,147,8.185,148,8.185,149,7.261,150,6.365,151,5.647,152,9.88,153,8.766,154,6.365,155,8.185,156,6.365,157,8.185,158,6.365,159,5.424,160,5.023,161,2.904,162,4.305,163,5.647,164,1.994,165,5.788,166,2.556,167,3.577,168,3.124,169,6.365,170,6.365,171,6.365]],["title/faq/",[121,4.439,122,4.439,123,4.439]],["text/faq/",[1,1.744,2,2.048,3,3.904,6,0.321,7,1.221,8,1.139,10,1.624,12,1.537,18,2.148,20,1.68,21,1.304,31,2.048,33,1.267,42,1.156,43,1.658,44,1.693,45,1.751,51,1.624,53,1.497,54,2.17,55,2.534,61,1.272,66,2.311,69,1.021,74,1.378,76,3.861,77,1.798,78,1.688,79,1.677,82,0.583,83,0.712,84,1.124,85,1.675,86,2.542,87,1.735,88,1.405,89,0.681,90,1.267,91,2.489,92,1.172,93,1.156,94,2.666,96,1.87,97,2.252,98,1.406,103,2.845,104,2.185,121,1.746,122,1.746,123,1.746,135,2.359,140,2.359,141,2.411,143,3.476,146,2.39,159,3.009,161,0.938,162,1.391,168,1.712,172,2.748,173,4.092,174,3.263,175,3.263,176,2.594,177,2.96,178,3.263,179,3.04,180,1.836,181,2.594,182,3.263,183,1.253,184,3.263,185,3.263,186,3.263,187,2.685,188,2.96,189,1.933,190,3.263,191,3.263,192,2.753,193,2.569,194,1.908,195,1.988,196,2.753,197,4.725,198,4.092,199,6.505,200,0.976,201,1.344,202,5.003,203,3.515,204,2.466,205,2.669,206,0.677,207,1.715,208,4.6,209,2.815,210,2.113,211,2.079,212,5.312,213,2.451,214,5.003,215,4.138,216,1.751,217,1.265,218,3.263,219,2.594,220,3.875,221,3.138,222,3.351,223,4.227,224,2.365,225,3.708,226,3.263,227,2.845,228,2.359,229,2.048,230,2.057,231,2.057,232,2.057,233,1.825,234,3.488,235,3.488,236,4.541,237,2.057,238,2.057,239,3.488,240,3.488,241,2.057,242,1.49,243,3.263,244,1.746,245,2.057,246,1.68,247,1.49,248,1.712,249,1.01,250,1.53,251,2.447,252,1.083,253,1.11,254,1.53,255,1.574,256,1.49,257,1.363,258,1.454,259,1.391,260,1.988,261,1.68,262,2.552,263,2.057,264,1.574,265,2.057,266,2.057,267,1.267,268,1.825,269,1.574,270,1.454,271,1.68,272,0.988,273,2.158,274,1.53,275,1.825,276,1.454,277,2.057,278,0.92,279,1.68,280,1.825,281,2.569,282,2.057,283,1.454,284,1.363,285,1.267,286,1.859,287,3.263,288,2.225,289,1.422,290,1.312,291,1.01,292,0.799,293,1.226,294,2.484,295,2.594,296,3.475,297,0.607,298,1.207,299,2.411,300,0.988,301,1.14,302,1.289,303,1.207,304,1.503,305,3.562,306,1.827,307,1.517,308,0.987,309,1.164,310,3.351,311,1.164,312,1.312,313,1.401,314,2.669,315,2.057,316,2.466,317,3.708,318,2.048,319,1.623,320,2.057,321,2.057,322,1.574,323,1.825,324,1.623,325,1.574,326,1.68,327,2.057,328,2.057,329,1.363,330,1.363,331,1.207,332,2.057]],["title/faq/#frequently-asked-questions",[121,4.439,122,4.439,123,4.439]],["text/faq/#frequently-asked-questions",[1,1.758,6,0.328,7,1.287,8,1.686,10,1.656,18,3.179,21,1.095,43,2.453,44,2.506,45,2.591,51,2.403,53,1.445,54,2.032,61,1.882,76,3.999,77,1.967,78,1.847,79,1.835,84,0.738,86,2.481,87,1.674,88,1.356,91,2.959,94,3.03,96,1.709,97,2.678,98,1.56,135,3.491,140,3.491,141,3.567,143,4.625,146,2.717,172,3.657,173,5.446,174,4.828,175,4.828,176,3.839,177,4.38,178,4.828,179,3.614,180,2.717,181,3.839,182,4.828,183,1.854,184,4.828,185,4.828,186,4.828,187,3.573,188,4.38,189,2.861,190,4.828,191,4.828,192,4.073,193,2.479,194,2.823,195,2.942,196,4.073,197,4.073,198,3.949,199,8.147,200,1.445,201,1.989,202,6.658,203,4.178,204,3.65,205,3.949,206,1.002,207,1.674,208,5.033,209,2.717,210,3.127,211,3.077,212,4.579,213,2.786,214,4.828,215,4.919,216,2.591,217,1.221,218,4.828,219,3.839,220,5.158,221,3.567,222,3.234,223,4.625,224,2.811,225,4.215,226,4.828,227,2.453]],["title/faq/#installation",[76,3.523]],["text/faq/#installation",[]],["title/faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem",[1,0.449,76,1.156,172,1.21,173,1.802,174,2.204,175,2.204,176,1.752,177,1.999,178,2.204,179,1.196,180,1.24,181,1.752]],["text/faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem",[66,5.499,76,4.073,159,6.739,179,4.214,228,5.613,229,4.872,230,8.299,231,8.299,232,8.299,233,7.363]],["title/faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory",[8,0.618,18,1.166,51,0.881,76,0.929,143,2.112,172,0.973,173,1.449,179,0.961,182,1.771,183,0.68,184,1.771,185,1.771,186,1.771,187,0.95,188,1.607]],["text/faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory",[2,4.538,21,1.189,66,5.123,76,4.846,87,2.508,222,4.844,228,5.229,234,9.234,235,9.234,236,9.874,237,7.731,238,7.731,239,9.234,240,9.234,241,7.731,242,5.601,243,7.231,244,6.561,245,7.731]],["title/faq/#examples",[54,2.049]],["text/faq/#examples",[]],["title/faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples",[54,1.315,189,2.553,190,4.309,191,4.309]],["text/faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples",[1,1.448,6,0.362,10,1.642,12,1.483,74,2.998,193,3.646,229,4.457,246,6.2,247,5.501,248,4.483,249,3.726,250,5.647,251,3.686,252,3.996,253,4.098,254,5.647,255,5.809,256,5.501,257,5.031,258,5.368,259,5.135,260,5.206,261,6.2]],["title/faq/#usage",[192,5.664]],["text/faq/#usage",[]],["title/faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2",[6,0.089,10,0.451,77,0.693,84,0.359,135,1.697,193,1.205,194,1.372,195,1.43,196,1.98,197,1.98,198,1.92]],["text/faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2",[10,1.725,12,1.413,20,5.908,21,1.113,31,5.208,55,3.062,77,2.0,84,1.429,88,1.901,90,4.456,146,3.808,168,3.551,197,7.571,198,6.788,203,4.247,262,4.985,263,7.235,264,5.536,265,7.235,266,7.235,267,4.456,268,6.419,269,5.536,270,5.116,271,5.908,272,3.475,273,3.438,274,5.381,275,6.419,276,5.116,277,7.235,278,3.237]],["title/faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used",[7,0.458,10,0.61,96,0.711,98,0.574,140,2.294,200,0.949,201,1.307]],["text/faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used",[7,1.262,10,1.678,42,4.425,54,2.248,96,1.652,98,1.581,103,6.235,104,5.849,279,6.43,280,6.986,281,3.05,282,7.874,283,5.568,284,5.218,285,4.85,286,4.197]],["title/faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it",[1,0.361,6,0.116,7,0.256,44,0.919,45,0.95,61,0.69,88,0.497,91,0.787,96,0.397,97,1.223,98,0.321,202,3.04,203,1.111]],["text/faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it",[1,1.475,6,0.275,7,1.248,21,1.189,53,2.164,54,2.207,77,2.137,78,2.006,79,1.993,82,2.192,88,2.031,89,2.561,97,2.908,227,3.674,273,3.674,281,2.525,287,7.231,288,5.89,289,5.343,290,4.931,291,3.794,292,3.003,293,4.609,294,4.228,295,5.75]],["title/faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them",[1,0.595,6,0.111,7,0.421,91,1.296,94,1.83,203,1.83,204,2.204,205,2.385]],["text/faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them",[1,1.591,6,0.297,54,2.381,91,3.467,92,4.754,93,4.687,94,4.896,273,3.963,287,7.801,294,4.561,295,6.203]],["title/faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10",[7,0.39,43,0.784,86,0.575,87,0.535,96,0.346,98,0.489,206,0.32,207,0.678,208,2.04,209,0.869,210,1.0,211,0.984,212,1.464,213,0.891,333,1.812]],["text/faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10",[1,1.695,7,0.717,12,1.956,21,1.431,54,2.071,55,3.76,84,1.27,86,3.097,87,1.721,96,2.13,161,2.421,207,2.09,208,5.13,209,3.819,212,7.334,213,2.865,214,6.787,217,1.717,222,3.325,262,2.982,281,3.212,286,2.828,296,6.325,297,1.565,298,3.115,299,5.014,300,2.549,301,2.942,302,3.325,303,3.115,304,2.287,305,5.052,306,2.386,307,3.155,308,1.798,309,2.421,310,5.568,311,2.421,312,2.729,313,2.914,314,5.551,315,5.307,316,5.13,317,6.751,318,4.259,319,4.188,320,5.307]],["title/faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug",[1,0.29,6,0.054,7,0.205,10,0.273,53,0.426,77,0.42,78,0.394,79,0.392,86,0.53,98,0.257,141,1.051,187,0.763,215,1.855,216,0.763,218,1.422,219,1.131,220,1.945,221,1.051,222,0.952]],["text/faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug",[6,0.285,53,2.246,78,2.082,79,2.069,85,3.854,162,5.427,168,3.938,215,5.545,221,5.545,321,8.024,322,6.139,323,7.119,324,6.332,325,6.139,326,6.552,327,8.024,328,8.024,329,5.317,330,5.317]],["title/faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations",[1,0.424,10,0.669,78,0.576,79,0.572,146,1.169,223,2.417,224,1.469,225,1.813,226,2.077,227,1.055]],["text/faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations",[1,1.502,2,4.623,21,1.211,33,4.85,69,3.908,74,3.11,83,2.724,85,3.782,193,3.782,223,6.067,224,3.11,225,6.43,227,4.437,243,7.366,251,3.744,294,4.307,304,3.393,331,4.623,332,7.874]],["title/release_notes/",[125,5.136,126,2.876]],["text/release_notes/",[1,1.595,2,2.708,3,3.777,6,0.336,7,1.194,21,1.487,53,2.147,55,1.952,61,1.682,73,3.431,74,1.822,76,2.264,78,1.989,79,1.977,81,2.315,88,1.212,91,1.918,96,1.38,103,2.89,125,3.915,126,2.192,132,5.191,141,6.351,144,3.767,153,4.092,168,2.264,172,2.37,173,5.033,179,2.342,180,5.089,187,3.302,189,2.557,200,1.291,201,1.778,228,3.12,247,3.342,248,2.264,252,2.428,253,2.49,269,3.529,271,3.767,274,5.703,276,3.262,278,2.943,288,2.942,292,1.792,296,3.529,297,1.361,304,1.988,305,2.37,309,2.195,311,2.195,326,6.262,334,4.613,335,3.12,336,4.613,337,4.613,338,4.613,339,4.613,340,5.191,341,9.044,342,4.613,343,3.64,344,2.475,345,4.613,346,4.613,347,1.708,348,3.529,349,4.613,350,3.767,351,4.613,352,6.154,353,5.299,354,6.051,355,2.841,356,2.557,357,4.092,358,3.12,359,3.529,360,4.613,361,3.804,362,4.613,363,3.057,364,3.862,365,4.613,366,4.613,367,2.49,368,2.398,369,2.629,370,3.915,371,2.75,372,2.794,373,4.613,374,2.215,375,2.942,376,4.613,377,5.372,378,2.557,379,3.915,380,3.057,381,4.613,382,2.458,383,4.092,384,2.668,385,3.767,386,4.613]],["title/release_notes/#release-notes",[125,5.136,126,2.876]],["text/release_notes/#release-notes",[]],["title/release_notes/#046",[334,7.177]],["text/release_notes/#046",[]],["title/release_notes/#improvements",[73,5.338]],["text/release_notes/#improvements",[1,1.351,2,4.158,6,0.252,21,1.347,76,3.477,103,4.438,132,6.91,168,3.477,179,3.597,180,3.728,189,3.926,200,1.983,201,2.73,228,4.791,248,3.477,269,5.42,274,6.513,278,3.918,288,4.518,305,3.639,309,2.364,311,2.364,335,4.791,336,7.084,337,7.084,338,7.084,339,7.084,340,5.59,341,8.891,342,7.084,343,5.59,344,3.294,345,7.084,346,7.084,347,2.623,348,5.42,349,7.084,350,5.785,351,7.084,352,6.626]],["title/release_notes/#bug-fixes",[141,4.182,180,3.185]],["text/release_notes/#bug-fixes",[1,1.6,6,0.345,7,1.27,21,1.49,53,2.349,55,2.311,61,1.991,74,2.157,78,2.177,79,2.163,81,2.741,88,1.435,91,2.27,96,1.552,141,6.495,144,4.46,153,4.845,172,2.806,173,5.66,180,5.099,187,3.713,247,3.957,252,2.874,253,2.948,271,4.46,274,4.062,276,3.862,292,2.122,296,4.178,297,1.611,304,2.353,309,1.822,311,1.822,326,6.851,340,4.31,341,8.791,352,5.108,353,5.798,354,6.621,355,3.363,356,3.027,357,4.845,358,3.694,359,4.178,360,5.461,361,4.278,362,5.461,363,3.619,364,4.343,365,5.461,366,5.461,367,2.948,368,2.839,369,3.113,370,4.635,371,3.256,372,3.308,373,5.461,374,2.623,375,3.483,376,5.461,377,6.041,378,3.027,379,4.635,380,3.619,381,5.461,382,2.91,383,4.845,384,3.158,385,4.46,386,5.461]],["title/api_reference/",[128,4.96]],["text/api_reference/",[7,0.986,53,2.043,68,5.834,78,1.893,79,1.882,84,1.47,91,3.707,129,6.826,130,6.826,131,6.826,132,5.759,133,6.647,134,6.826,135,4.936,136,6.826,347,3.567,378,4.045,387,6.193,388,7.297,389,7.297,390,4.836,391,7.297,392,7.297,393,7.297,394,7.297,395,7.297,396,7.297,397,7.297]],["title/api_reference/augmentations/",[128,4.96]],["text/api_reference/augmentations/",[53,2.279,78,2.112,79,2.099,84,1.36,91,3.957,133,6.308,347,3.737,392,8.14,393,8.14,394,8.14,395,8.14]],["title/api_reference/augmentations/bbox_utils/",[78,0.965,79,0.959,91,1.546,133,2.464,347,1.377,398,3.478]],["text/api_reference/augmentations/bbox_utils/",[1,1.075,3,3.566,6,0.324,10,0.842,12,1.941,19,4.189,21,1.391,25,0.922,61,0.508,70,1.881,78,2.605,79,2.642,83,2.301,84,0.48,86,0.865,91,0.579,98,1.171,126,1.18,133,0.922,139,4.506,167,0.782,193,1.96,206,1.343,210,2.472,213,2.203,217,1.788,224,0.55,227,0.662,242,1.009,251,3.123,272,1.192,273,1.18,276,1.756,286,2.77,297,0.991,298,1.973,299,0.962,301,0.772,306,1.476,308,1.643,309,2.845,311,2.845,344,0.934,347,0.516,353,0.962,354,1.099,355,2.514,361,2.709,367,2.203,398,1.302,399,3.592,400,1.529,401,3.04,402,4.329,403,4.544,404,4.911,405,1.847,406,3.571,407,1.762,408,1.826,409,3.5,410,3.979,411,3.979,412,4.01,413,4.01,414,2.693,415,2.353,416,2.726,417,2.107,418,1.931,419,1.695,420,1.178,421,2.886,422,2.322,423,1.457,424,1.529,425,5.341,426,5.001,427,2.072,428,2.184,429,1.07,430,2.737,431,3.813,432,4.16,433,2.184,434,2.571,435,4.085,436,3.464,437,3.036,438,1.959,439,1.799,440,2.107,441,2.107,442,2.057,443,2.076,444,1.392,445,2.107,446,2.107,447,1.392,448,3.238,449,1.529,450,4.382,451,3.168,452,2.525,453,0.922,454,0.83,455,0.857,456,0.872,457,1.235,458,1.392,459,1.392,460,1.392,461,1.392,462,1.392,463,1.392,464,1.065,465,1.392,466,1.529,467,5.644,468,1.529,469,2.726,470,4.411,471,1.065,472,1.235,473,1.181,474,1.392,475,1.645,476,1.529,477,3.098,478,3.826,479,2.105,480,2.852,481,3.766,482,1.144,483,1.009,484,0.707,485,1.685,486,0.789,487,2.203,488,1.137,489,1.235,490,1.529,491,2.483,492,2.483,493,1.959,494,1.959,495,0.905,496,1.799,497,1.529,498,1.235,499,1.235,500,2.726,501,0.905,502,1.529,503,1.959,504,1.392,505,2.027,506,0.962,507,1.392,508,2.203,509,1.235,510,1.392]],["title/api_reference/augmentations/bbox_utils/#helper-functions-for-working-with-bounding-boxes-augmentationsbbox_utils",[78,0.965,79,0.959,91,1.546,133,2.464,347,1.377,398,3.478]],["text/api_reference/augmentations/bbox_utils/#helper-functions-for-working-with-bounding-boxes-augmentationsbbox_utils",[]],["title/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils",[511,7.881]],["text/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils",[]],["title/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area",[512,7.881]],["text/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area",[6,0.322,21,1.152,70,1.901,78,2.528,79,2.512,98,1.269,206,1.455,309,2.5,311,2.5,401,2.5,402,3.804,403,3.992,405,5.572,406,5.092,407,3.409,408,1.845,409,3.56,410,3.418,411,3.418,412,3.523,413,3.523,414,3.16,415,2.464]],["title/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bbox",[513,7.177]],["text/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bbox",[361,4.871,401,2.811,417,7.148,418,3.471,419,3.048,420,2.119,421,5.956,422,7.879,423,4.945]],["title/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bboxes",[513,7.177]],["text/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bboxes",[361,4.871,401,2.811,417,7.148,418,3.471,419,3.048,420,2.119,421,5.956,422,7.879,423,4.945]],["title/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations",[514,7.881]],["text/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations",[1,1.433,6,0.267,10,1.004,12,1.773,21,1.305,70,1.781,78,2.586,79,2.647,98,0.946,126,2.655,193,2.683,206,1.085,213,3.016,251,3.669,286,4.524,309,2.832,311,2.832,344,2.102,361,3.231,367,3.016,401,1.864,402,2.837,403,2.978,408,1.729,409,3.57,410,3.873,411,3.873,412,3.533,413,3.533,414,2.437,415,1.838,425,7.53,426,4.957,427,2.837,428,3.631,429,2.408,430,4.121,431,5.741,432,5.866,433,3.631,434,4.275,435,6.15,436,6.376,437,5.588,438,4.409,439,4.048,440,4.742,441,4.742,442,2.453,443,2.476,444,5.587,445,4.742,446,4.742,447,5.587,448,3.861]],["title/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations",[515,7.881]],["text/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations",[1,0.95,6,0.284,10,0.895,12,1.777,21,1.229,70,1.677,78,2.558,79,2.643,98,0.843,126,2.366,193,2.391,206,0.967,213,2.688,224,1.966,251,3.636,286,4.26,297,1.469,301,2.76,309,2.886,311,2.886,361,2.88,367,2.688,401,1.661,402,2.528,403,2.654,408,1.628,409,3.799,410,3.946,411,3.946,412,3.759,413,3.759,414,2.252,415,1.638,418,2.052,419,1.802,420,1.746,425,4.418,426,4.418,427,2.528,428,3.236,430,3.881,431,5.406,432,5.977,433,3.236,434,3.81,435,6.266,436,5.892,437,5.164,438,3.929,439,3.608,440,4.226,441,4.226,442,3.048,443,3.077,445,4.226,446,4.226,448,4.798,450,6.494,451,3.654,452,2.912,453,3.299,454,2.969,455,3.067,456,3.12,457,4.418,458,4.979,459,4.979,460,4.979,461,4.979,462,4.979,463,4.979,464,3.81,465,4.979]],["title/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations",[516,7.881]],["text/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations",[1,1.628,6,0.304,10,1.222,21,1.313,70,1.791,78,2.539,79,2.653,83,3.228,98,1.152,193,3.265,206,1.32,251,3.51,309,2.269,311,2.269,344,2.558,361,3.932,401,2.269,402,3.452,403,3.624,408,1.738,410,3.102,411,3.102,412,3.198,413,3.198,414,2.769,415,2.237,425,7.573,426,6.032,427,3.452,428,4.418,429,2.93,430,3.301,431,4.599,432,4.699,433,4.418,434,5.202,467,6.736]],["title/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations",[517,7.881]],["text/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations",[1,1.599,10,1.507,78,2.175,79,2.161,83,2.9,193,4.025,251,3.643,427,4.256,450,7.84]],["title/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox",[518,7.177]],["text/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox",[6,0.346,21,1.425,70,1.943,78,2.403,79,2.388,98,1.133,206,1.299,213,3.612,242,4.849,298,3.928,309,2.82,311,2.82,367,3.612,401,2.233,402,4.291,403,4.504,408,1.886,409,4.016,410,3.856,411,3.856,412,3.974,413,3.974,414,2.741,415,2.201,442,2.938,443,2.966,448,4.625,451,3.522,452,3.884,470,7.172,471,5.12,472,5.937,473,5.679,474,6.692,475,4.434]],["title/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes",[518,7.177]],["text/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes",[6,0.319,21,1.379,70,1.881,78,2.508,79,2.493,83,2.547,98,1.247,206,1.429,309,2.456,311,2.456,401,2.456,402,3.737,403,3.923,408,1.826,410,4.09,411,4.09,412,4.216,413,4.216,414,2.908,415,2.421,451,3.874,467,7.075,470,7.608]],["title/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes",[519,7.881]],["text/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes",[1,1.183,6,0.318,21,1.238,25,4.109,70,1.689,78,2.606,79,2.672,83,3.092,86,2.161,98,1.05,206,1.204,273,2.947,276,5.691,297,1.829,298,3.64,309,2.069,311,2.069,353,4.286,354,4.894,355,4.957,401,2.069,402,3.149,403,3.305,406,5.507,407,3.028,408,1.639,410,2.829,411,2.829,412,2.917,413,2.917,414,2.611,415,2.04,421,5.691,467,6.352,477,4.798,479,5.043,480,6.831,481,4.493,482,2.858,483,4.493,484,3.149,485,2.406,486,2.557,487,7.141,488,5.064,489,5.502]],["title/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility",[520,7.881]],["text/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility",[6,0.285,21,1.504,70,1.681,78,2.537,79,2.584,84,1.273,98,1.043,206,1.196,227,2.926,272,3.847,273,2.926,297,1.816,309,2.673,311,2.673,355,4.934,401,2.054,406,4.502,407,2.316,408,1.631,409,3.807,410,4.063,411,4.063,412,4.188,413,4.188,415,2.635,418,2.537,467,7.027,477,4.776,480,5.225,481,6.833,485,2.394,491,6.156,492,6.156,493,4.858,494,6.322,495,4.001,496,5.804,497,4.934,498,5.462,499,5.462]],["title/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox",[521,7.177]],["text/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox",[6,0.349,21,1.316,70,1.961,78,2.425,79,2.41,98,1.156,206,1.326,213,3.685,298,4.007,309,2.855,311,2.855,367,3.685,401,2.278,402,4.345,403,4.561,408,1.903,409,4.067,410,3.904,411,3.904,412,4.024,413,4.024,414,2.776,415,2.246,442,2.997,443,3.025,448,4.718,451,4.504,452,3.92,470,5.794,475,4.524,501,4.436]],["title/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes",[521,7.177]],["text/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes",[6,0.319,21,1.379,70,1.881,78,2.508,79,2.493,83,2.547,98,1.247,206,1.429,309,2.456,311,2.456,401,2.456,402,3.737,403,3.923,408,1.826,410,4.09,411,4.09,412,4.216,413,4.216,414,2.908,415,2.421,451,4.719,467,7.075,470,6.247]],["title/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes",[522,7.881]],["text/api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes",[6,0.301,10,1.203,21,1.3,61,2.44,70,1.773,78,2.524,79,2.509,83,2.315,86,2.332,98,1.133,167,3.76,206,1.299,251,2.517,299,4.625,309,2.82,311,2.82,401,2.82,405,4.977,408,1.721,409,3.18,410,3.856,411,3.856,412,3.974,413,3.974,415,2.201,418,2.757,419,3.058,420,1.683,467,5.281,482,3.084,485,2.768,503,5.281,504,6.692,505,6.901,506,4.625,507,6.692,508,7.497,509,5.937,510,6.692]],["title/api_reference/augmentations/functional/",[84,0.748,347,1.937,523,4.893]],["text/api_reference/augmentations/functional/",[2,1.532,3,3.842,6,0.337,7,0.527,8,1.008,10,0.701,12,2.001,13,0.477,19,4.649,21,1.299,23,0.436,32,1.891,36,0.827,38,1.257,39,0.907,40,0.419,42,0.442,47,0.455,53,2.524,61,0.287,62,0.621,69,0.731,70,1.984,71,0.469,77,0.721,78,1.87,79,1.916,81,0.395,83,0.718,84,0.21,85,0.378,86,0.513,93,0.442,94,1.532,96,0.435,98,1.337,139,5.0,140,0.532,162,0.996,193,0.378,194,0.805,195,1.487,200,0.412,206,1.533,209,0.775,210,0.477,211,0.469,213,1.897,215,1.803,216,2.294,217,1.984,248,1.018,252,0.775,253,2.105,260,1.183,278,0.352,283,0.556,294,1.427,297,1.513,301,0.816,302,0.922,306,1.814,308,1.824,309,2.069,311,2.008,316,1.041,335,0.996,344,0.554,347,0.291,367,1.409,368,2.028,369,1.487,371,0.469,385,0.642,399,3.986,401,2.069,402,4.346,403,4.562,404,5.489,407,1.322,408,1.926,409,4.014,410,2.982,411,2.982,412,3.074,413,3.074,414,3.068,415,2.596,418,0.607,419,2.029,420,1.644,428,0.511,429,0.339,433,0.511,442,3.165,443,3.245,448,1.803,452,0.87,453,0.976,454,0.878,455,0.907,456,0.922,464,0.602,471,2.361,473,1.249,481,1.504,482,3.322,485,1.366,495,0.957,497,0.907,506,0.544,523,0.736,524,0.864,525,4.365,526,1.472,527,1.162,528,1.472,529,1.166,530,1.306,531,2.133,532,1.901,533,5.013,534,3.078,535,2.087,536,0.864,537,1.472,538,1.306,539,1.202,540,1.306,541,1.202,542,1.202,543,1.472,544,1.306,545,0.698,546,0.698,547,0.511,548,0.698,549,0.864,550,1.472,551,0.698,552,0.864,553,1.472,554,1.202,555,0.698,556,0.544,557,0.787,558,0.642,559,0.502,560,0.521,561,0.864,562,1.472,563,1.472,564,1.306,565,1.306,566,1.162,567,0.698,568,0.698,569,0.864,570,0.864,571,3.608,572,2.469,573,2.284,574,2.003,575,0.839,576,0.864,577,1.556,578,2.53,579,0.864,580,2.164,581,1.765,582,2.441,583,1.377,584,0.586,585,0.938,586,1.377,587,0.864,588,4.388,589,0.864,590,0.521,591,0.493,592,1.202,593,0.698,594,0.787,595,0.864,596,0.864,597,2.441,598,3.46,599,3.608,600,1.017,601,1.377,602,1.377,603,1.377,604,1.377,605,0.864,606,3.891,607,0.787,608,0.864,609,1.095,610,1.162,611,1.466,612,2.21,613,2.609,614,0.736,615,1.249,616,1.249,617,1.249,618,1.162,619,0.939,620,1.249,621,1.202,622,1.249,623,1.249,624,1.249,625,1.249,626,1.095,627,1.249,628,1.638,629,0.452,630,2.435,631,1.249,632,1.126,633,1.249,634,1.067,635,1.249,636,0.864,637,0.698,638,0.864,639,1.306,640,1.306,641,0.668,642,0.544,643,0.544,644,0.698,645,0.511,646,0.585,647,0.521,648,0.698,649,0.532,650,0.864,651,0.521,652,0.787,653,0.698,654,0.698,655,0.602,656,0.698,657,0.602,658,0.602,659,0.477,660,0.698,661,0.698,662,0.698,663,0.698,664,0.642,665,0.787,666,0.787,667,0.864,668,0.736,669,0.864,670,0.851,671,0.864,672,0.787,673,2.441,674,0.787,675,0.864,676,1.306,677,0.602,678,1.095,679,0.359,680,1.504,681,1.041,682,0.787,683,2.361,684,0.621,685,0.642,686,0.698,687,0.787,688,0.278,689,0.787,690,0.462,691,0.787,692,0.698,693,0.864,694,1.761,695,1.761,696,0.864,697,1.183,698,0.864,699,0.864,700,0.252,701,0.864,702,1.162,703,0.787,704,0.864,705,0.864,706,2.075,707,2.075,708,0.864,709,0.864,710,0.864,711,0.864,712,0.864,713,0.864,714,0.864,715,1.472,716,0.532,717,1.472,718,0.787,719,1.996,720,0.787,721,0.787,722,0.787,723,0.787,724,0.787,725,0.787,726,0.698,727,0.864,728,1.306,729,0.642,730,0.642,731,0.864,732,1.249,733,0.698,734,0.787,735,0.864,736,0.864,737,0.668,738,0.787,739,0.864,740,0.642,741,1.202,742,1.126,743,0.787,744,0.864,745,2.075,746,0.544,747,2.075,748,0.787,749,0.787,750,0.787,751,0.787,752,0.787,753,0.787]],["title/api_reference/augmentations/functional/#functional-transforms-augmentationsfunctional",[84,0.748,347,1.937,523,4.893]],["text/api_reference/augmentations/functional/#functional-transforms-augmentationsfunctional",[]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional",[754,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional",[]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog",[755,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog",[6,0.35,7,1.035,8,2.502,70,1.927,83,2.65,98,1.297,206,1.488,408,1.87,415,2.52,485,2.745,525,4.567,526,7.661,527,6.045,528,7.661,529,4.305,530,8.148,531,5.294,532,4.718,533,6.494,534,7.248,535,5.181]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain",[756,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain",[6,0.323,7,1.017,8,2.458,70,1.906,98,1.274,206,1.461,404,4.89,408,1.85,414,2.947,415,2.475,485,2.249,525,4.486,531,5.2,532,4.634,533,6.424,537,7.524,538,6.676,539,6.145,540,6.676,541,6.145,542,6.145,543,7.524,544,8.06,545,6.676,546,6.676,547,4.89,548,6.676]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow",[757,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow",[6,0.285,7,1.084,8,2.621,70,1.98,83,2.776,98,1.359,206,1.558,408,1.922,415,2.639,525,4.784,529,4.509,531,5.545,532,4.942,533,6.675,550,8.024,551,7.119]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow",[758,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow",[6,0.328,7,1.04,8,2.514,42,4.325,70,1.932,98,1.303,206,1.494,368,4.001,407,2.895,408,1.875,415,2.532,525,4.588,531,5.319,532,4.74,533,6.512,534,6.073,553,7.695,554,6.284,555,6.827,556,5.319,557,7.695,558,6.284,559,4.908,560,5.099]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare",[759,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare",[7,1.04,8,2.514,70,1.932,83,2.662,98,1.303,206,1.494,408,1.875,414,3.197,415,2.532,485,2.752,525,4.588,529,4.325,531,5.319,532,4.74,533,6.512,562,7.695,563,7.695,564,6.827,565,6.827,566,6.073,567,6.827,568,6.827]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop",[760,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop",[6,0.314,21,1.357,70,1.851,78,2.48,79,2.465,98,1.215,206,1.393,401,2.394,402,4.481,403,4.703,408,1.797,409,4.194,410,4.361,411,4.361,412,4.495,413,4.495,414,3.381,415,2.36,482,4.067]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip",[761,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip",[6,0.307,21,1.446,70,1.972,78,2.439,79,2.424,98,1.17,206,1.342,297,2.543,335,4.674,367,3.73,401,2.306,402,4.378,403,4.595,408,1.914,409,4.098,410,3.934,411,3.934,412,4.055,413,4.055,414,3.049,415,2.273,419,2.501,420,2.169,448,4.776,571,7.977,572,3.509,573,4.49,574,3.939,575,3.939]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip",[762,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip",[6,0.318,21,1.375,70,1.876,78,2.504,79,2.488,98,1.241,206,1.423,401,2.445,402,4.54,403,4.765,408,1.821,409,4.249,410,4.08,411,4.08,412,4.205,413,4.205,414,2.9,415,2.411,443,3.248,572,3.721,574,4.177,577,4.369,578,3.447]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90",[763,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90",[6,0.308,70,1.814,78,2.443,79,2.428,86,2.418,98,1.175,206,1.347,216,4.339,294,4.728,316,4.906,368,3.608,401,2.315,402,4.389,403,4.607,408,1.76,409,4.684,410,3.944,411,3.944,412,4.066,413,4.066,414,3.054,415,2.282,419,2.511,420,1.745,580,4.273,581,4.693,582,8.086,583,6.49,584,2.763,585,3.135,586,6.49]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate",[764,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate",[6,0.316,21,1.368,70,1.866,78,2.494,79,2.479,98,1.231,206,1.411,216,4.464,401,2.424,402,4.516,403,4.74,408,1.811,409,3.453,410,4.058,411,4.058,412,4.183,413,4.183,414,3.118,415,2.39,581,6.016,588,5.402]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose",[765,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose",[6,0.305,21,1.319,70,1.965,78,2.43,79,2.415,98,1.161,206,1.331,213,3.7,367,3.7,401,2.287,402,4.356,403,4.572,408,1.907,409,4.45,410,3.914,411,3.914,412,4.035,413,4.035,414,3.037,415,2.255,419,3.104,420,2.158,448,4.737,578,4.752,590,4.542,591,4.294,592,5.597,593,6.081,594,6.854]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip",[766,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip",[6,0.318,21,1.375,70,1.876,78,2.504,79,2.488,98,1.241,206,1.423,401,2.445,402,4.54,403,4.765,408,1.821,409,4.249,410,4.08,411,4.08,412,4.205,413,4.205,414,2.9,415,2.411,442,3.217,572,3.721,573,4.763,577,4.369,578,3.447]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords",[767,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords",[6,0.3,10,1.198,21,1.422,70,1.768,78,2.187,79,2.384,98,1.129,206,1.294,301,3.695,309,2.224,311,2.224,344,2.507,401,2.224,402,4.28,403,4.492,407,2.507,408,1.717,409,4.393,410,3.846,411,3.846,412,3.964,413,3.964,414,3.151,415,2.193,452,3.535,453,4.417,454,3.974,455,4.105,456,4.176,482,4.618,597,6.235,598,5.913,599,5.657,600,4.607,601,6.235,602,6.235,603,6.235,604,6.235]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords",[768,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords",[6,0.299,10,1.194,21,1.419,53,2.716,70,1.764,79,1.712,98,1.124,206,1.289,301,3.68,309,3.237,311,3.079,344,2.498,402,3.371,403,3.538,407,2.498,408,1.712,409,3.996,414,3.147,415,2.184,442,3.691,443,3.726,452,2.784,453,4.399,454,3.958,455,4.089,456,4.16,482,4.712,588,4.725,597,6.21,599,5.634,600,4.588,601,6.21,602,6.21,603,6.21,604,6.21,606,4.539,607,6.639]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform",[769,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform",[2,5.391,6,0.273,36,4.305,38,4.641,39,4.718,96,1.607,615,6.501,616,6.501,617,6.501,618,6.045,619,4.886,620,6.501,621,6.256,622,6.501,623,6.501,624,6.501,625,6.501,626,5.698,627,6.501,628,6.045,629,2.352,630,7.248,631,6.501,632,5.861,633,6.501,634,5.551,635,6.501]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx",[770,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx",[2,5.377,6,0.271,36,4.286,38,4.62,39,4.697,96,1.6,615,6.472,616,6.472,617,6.472,618,6.018,619,4.864,620,6.472,621,6.228,622,6.472,623,6.472,624,6.472,625,6.472,626,5.672,627,6.472,628,6.018,629,2.341,630,7.228,631,6.472,632,5.835,633,6.472,634,5.526,635,6.472,637,6.766]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize",[213,3.874]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize",[6,0.348,10,1.674,62,5.344,70,1.786,71,4.037,77,2.574,98,1.147,162,4.58,193,3.252,195,3.86,206,1.315,209,3.564,213,5.435,248,3.324,253,5.274,260,3.86,385,5.53,407,2.548,408,1.734,415,2.228,420,1.703,428,4.401,433,4.401,443,3.001,525,4.037,533,6.585,585,3.06,592,5.53,630,5.344,639,6.008,640,6.008,641,5.747,642,4.68,643,4.68,644,6.008,645,4.401,646,5.037,647,4.487,648,6.008,649,4.58]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca",[771,6.714]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca",[6,0.255,7,0.969,10,1.29,13,4.346,38,4.346,40,3.823,47,4.149,70,1.851,98,1.215,194,4.826,195,5.03,206,1.393,211,4.277,260,4.089,408,1.797,414,2.327,415,2.36,419,2.596,420,1.804,485,2.144,497,4.418,506,4.958,525,4.277,535,4.852,628,5.661,652,7.174,653,6.364,654,6.364,655,5.489,656,6.364,657,5.489,658,5.489,659,4.346,660,6.364,661,6.364,662,6.364,663,6.364,664,5.858,665,7.174,666,7.174]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.grid_distortion",[772,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.grid_distortion",[69,4.265,283,6.077,672,8.594,673,8.039,674,8.594]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise",[773,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise",[6,0.364,70,1.851,81,3.601,85,3.445,96,1.505,98,1.215,200,2.008,206,1.393,260,4.089,297,2.603,302,4.495,408,1.797,415,2.36,485,2.638,533,6.24,580,4.418,613,7.174,676,6.364,678,5.336,681,5.073,682,7.174,683,7.834,684,5.661,685,5.858,686,6.364,687,7.174,688,2.538,689,7.174,690,4.211,691,7.174,692,6.364]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop",[774,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop",[6,0.308,21,1.333,32,6.28,53,2.763,70,1.818,98,1.18,206,1.353,309,3.148,311,3.148,402,3.537,403,3.713,408,1.765,409,4.119,414,3.357,415,2.292,442,3.805,443,3.841,464,5.331,482,4.679,588,4.87,598,6.181,599,5.913,606,4.678,694,5.913,695,5.913]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip",[775,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip",[6,0.295,21,1.407,53,2.697,70,1.919,98,1.103,206,1.264,297,2.45,309,2.173,311,2.173,335,4.404,367,3.515,368,3.385,402,3.306,403,3.47,408,1.862,409,3.947,414,2.966,415,2.142,419,3.309,420,2.559,442,3.646,443,3.681,448,4.5,571,7.761,572,5.052,573,5.943,574,5.212,575,3.711,588,4.667,606,4.483,697,5.212]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip",[776,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip",[6,0.321,21,1.386,53,2.825,70,1.891,98,1.258,206,1.442,309,2.478,311,2.478,402,3.77,403,3.957,408,1.835,409,4.283,414,2.923,415,2.443,442,3.957,443,4.301,572,3.77,574,4.232,577,4.427,578,3.492,588,5.065,606,4.865]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop",[777,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop",[6,0.309,21,1.336,32,6.296,53,2.767,70,1.823,98,1.185,206,1.359,309,3.154,311,3.154,402,3.552,403,3.728,408,1.769,409,3.325,414,3.361,415,2.301,442,3.814,443,3.851,482,4.684,588,4.883,598,6.207,599,5.937,606,4.69,694,5.937,695,5.937,700,2.238]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90",[778,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90",[6,0.304,21,1.316,53,2.743,70,1.961,86,2.379,98,1.156,206,1.326,216,4.295,294,4.68,309,2.278,311,2.278,316,4.827,367,3.685,368,3.549,402,3.466,403,3.638,408,1.903,409,4.067,414,3.032,415,2.246,418,2.813,419,2.47,420,1.717,442,3.757,443,3.792,448,4.718,580,5.27,581,4.617,582,8.005,583,6.386,584,2.719,585,3.084,586,6.386,588,4.809,606,4.619,703,6.827]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate",[779,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate",[6,0.32,21,1.383,53,2.821,70,1.886,98,1.252,206,1.436,216,4.512,309,2.467,311,2.467,402,3.754,403,3.94,408,1.831,409,4.272,414,2.916,415,2.432,442,3.946,443,3.984,485,2.21,588,5.803,606,4.852]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale",[780,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale",[21,1.383,53,2.821,70,1.886,98,1.252,206,1.436,408,1.831,409,3.513,414,2.916,415,2.432,442,4.252,443,4.292,534,7.094,578,4.228,588,5.051,606,5.574,706,8.989,707,8.989]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_transpose",[781,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_transpose",[21,1.428,53,2.872,70,1.948,98,1.321,206,1.515,216,3.916,408,1.891,409,4.412,415,2.567,442,4.076,443,4.115,588,5.571,606,5.012]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip",[782,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip",[6,0.321,21,1.386,53,2.825,70,1.891,98,1.258,206,1.442,309,2.478,311,2.478,402,3.77,403,3.957,408,1.835,409,4.283,414,2.923,415,2.443,442,4.26,443,3.994,572,3.77,573,4.825,577,4.427,578,3.492,588,5.065,606,4.865]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.multiply",[471,5.492]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.multiply",[6,0.336,70,1.98,98,1.359,206,1.558,408,1.922,415,2.639,471,7.922,525,4.784,533,7.093,534,7.45]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion",[783,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion",[7,1.045,10,1.39,69,3.837,84,1.105,140,5.229,248,4.532,673,9.236,715,9.234,716,5.229,717,9.234,718,7.731,719,7.826,720,7.731,721,7.731,722,7.731,723,7.731,724,7.731,725,7.731,726,6.859]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize",[729,5.861]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize",[6,0.326,61,2.781,70,1.922,93,4.286,94,5.763,98,1.292,206,1.481,252,4.821,253,4.944,368,4.762,408,1.865,414,2.474,415,2.509,418,3.143,419,2.76,525,4.547,533,6.477,728,8.126,729,6.228,730,6.228]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.preserve_channel_dim",[784,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.preserve_channel_dim",[253,4.663,732,7.331,733,7.664,734,8.638]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.preserve_shape",[785,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.preserve_shape",[6,0.309,497,5.347,732,7.368]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.py3round",[786,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.py3round",[23,4.788,278,3.865,737,7.331,738,8.638]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize",[742,5.492]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize",[6,0.329,70,1.943,98,1.315,206,1.508,297,2.291,302,4.866,407,3.483,408,1.886,414,2.519,415,2.555,481,6.709,495,6.017,525,4.63,533,6.547,741,7.561,742,7.085,743,7.766]],["title/api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image",[787,7.881]],["text/api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image",[6,0.364,70,1.937,98,1.309,195,4.406,200,2.164,206,1.501,408,1.88,409,3.674,415,2.543,429,3.331,745,9.234,746,5.343,747,9.874,748,7.731,749,7.731,750,7.731,751,7.731,752,7.731,753,7.731]],["title/api_reference/augmentations/keypoints_utils/",[53,1.152,91,1.711,133,2.727,347,1.524,788,3.849]],["text/api_reference/augmentations/keypoints_utils/",[3,4.499,6,0.313,12,1.945,19,4.879,53,2.788,91,2.97,133,4.733,139,5.248,217,2.082,298,5.167,308,1.914,347,2.645,361,5.09,399,4.183,402,4.469,403,4.691,404,5.72,417,6.062,452,2.996,497,5.421,788,6.682,789,9.665,790,7.844]],["title/api_reference/augmentations/keypoints_utils/#helper-functions-for-working-with-keypoints-augmentationskeypoints_utils",[53,1.152,91,1.711,133,2.727,347,1.524,788,3.849]],["text/api_reference/augmentations/keypoints_utils/#helper-functions-for-working-with-keypoints-augmentationskeypoints_utils",[]],["title/api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils",[791,7.881]],["text/api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils",[]],["title/api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoint",[792,7.177]],["text/api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoint",[6,0.304,53,2.394,298,5.02,361,4.945,452,3.586,497,5.266]],["title/api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoints",[792,7.177]],["text/api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoints",[6,0.304,53,2.394,298,5.02,361,4.945,417,7.257,497,5.266]],["title/api_reference/augmentations/transforms/",[84,0.865,793,4.942]],["text/api_reference/augmentations/transforms/",[2,0.343,3,3.397,4,0.698,5,0.245,6,0.347,7,0.245,8,0.443,10,0.968,12,1.964,13,0.354,19,4.016,21,0.574,27,0.185,32,0.423,36,0.168,38,0.517,39,0.36,40,0.16,43,0.142,44,0.415,47,0.338,50,0.154,51,0.139,53,1.225,61,0.405,62,0.674,69,0.552,70,1.529,71,1.446,72,2.949,77,1.86,78,0.47,81,0.15,82,2.066,83,1.832,84,0.984,86,0.973,87,1.97,89,0.099,91,0.125,92,0.171,93,1.468,94,0.343,95,0.36,96,1.474,97,0.22,98,1.241,99,0.207,126,0.142,139,4.319,160,0.461,161,0.137,162,1.075,164,0.425,167,0.168,168,1.615,179,0.297,180,0.158,193,0.28,194,0.467,195,0.633,200,1.756,201,0.523,206,1.423,207,1.959,208,4.935,209,0.954,210,4.438,211,1.33,213,1.204,215,3.104,216,0.798,217,1.662,219,1.009,221,1.676,224,0.118,242,0.217,248,1.965,252,0.714,253,2.297,255,0.229,256,0.217,257,0.199,260,0.773,262,0.328,272,0.28,273,0.278,275,0.266,279,0.245,285,0.185,291,0.419,294,0.319,297,2.269,298,0.176,299,2.274,300,0.144,304,1.484,305,1.041,306,2.358,308,1.87,309,1.706,311,1.641,312,1.351,314,0.229,316,0.959,318,1.309,325,1.038,326,0.245,344,0.113,347,0.75,353,0.59,356,0.752,368,2.213,369,1.489,370,0.254,371,0.509,372,0.181,385,0.477,401,1.536,402,0.152,404,4.735,406,0.168,407,1.646,408,1.835,409,0.406,410,0.507,411,0.507,412,0.523,413,0.523,414,2.941,418,3.223,419,2.575,420,1.833,421,1.282,423,2.498,427,1.824,428,0.555,429,0.584,433,0.722,439,0.619,442,0.595,443,0.705,445,0.254,446,0.496,452,0.76,454,0.348,455,0.36,471,1.706,472,0.266,475,1.343,478,0.245,481,1.468,482,2.171,484,2.497,485,2.844,486,2.732,488,0.245,494,0.877,495,0.195,496,0.423,499,0.266,501,0.555,503,0.461,506,0.207,508,0.266,525,0.348,527,0.461,529,0.168,530,0.986,531,0.937,532,0.835,534,0.461,535,0.917,538,0.518,539,0.477,540,0.518,541,0.477,542,0.477,544,0.518,545,0.266,546,0.266,547,0.195,548,0.266,551,1.203,554,0.477,555,0.266,556,1.253,558,0.908,560,0.736,564,0.518,565,0.518,566,0.674,567,0.266,568,1.203,571,0.496,572,0.921,573,1.178,574,1.033,575,0.487,577,0.348,578,0.275,580,1.494,581,0.752,584,0.633,585,1.414,588,0.625,590,0.199,592,0.477,606,1.094,609,1.348,610,0.877,611,3.335,612,3.5,614,0.546,615,0.254,616,0.254,617,0.254,618,0.236,619,0.191,620,0.254,621,0.477,622,0.254,623,0.254,624,0.254,625,0.254,626,0.223,627,0.254,628,0.674,629,0.092,630,0.674,631,0.254,632,0.447,633,0.254,634,0.217,635,0.254,639,0.518,640,0.518,641,0.725,642,0.207,643,0.404,644,0.266,645,0.195,646,0.223,647,0.199,648,0.266,649,0.203,651,1.054,653,0.266,654,0.266,655,0.447,656,0.266,659,0.822,660,0.266,661,0.266,662,0.266,663,0.266,664,0.245,668,0.546,670,0.173,676,0.518,677,0.654,678,0.827,679,2.861,680,0.423,681,0.212,683,1.216,684,0.877,685,0.245,686,0.266,688,2.517,692,0.266,697,0.333,700,1.001,702,0.674,716,0.203,719,1.55,728,0.266,730,0.245,740,0.477,741,0.698,742,0.229,746,0.404,771,0.28,793,0.245,794,0.329,795,1.577,796,0.984,797,1.292,798,1.821,799,1.55,800,2.202,801,2.567,802,0.329,803,0.3,804,0.254,805,0.229,806,0.266,807,0.698,808,0.3,809,0.329,810,0.584,811,1.72,812,1.903,813,1.468,814,0.236,815,0.725,816,0.3,817,0.329,818,0.3,819,0.329,820,0.986,821,0.329,822,0.584,823,1.433,824,3.203,825,0.3,826,1.55,827,2.265,828,3.161,829,0.329,830,0.854,831,0.758,832,0.758,833,0.854,834,1.183,835,0.827,836,0.477,837,0.546,838,1.798,839,0.546,840,0.546,841,0.546,842,0.546,843,0.546,844,0.329,845,1.349,846,1.848,847,0.329,848,0.584,849,0.584,850,0.3,851,1.216,852,0.584,853,0.799,854,0.684,855,0.3,856,0.191,857,0.3,858,0.983,859,0.329,860,0.584,861,0.584,862,0.584,863,0.266,864,0.329,865,0.584,866,0.641,867,0.584,868,0.758,869,1.108,870,0.254,871,0.3,872,0.229,873,0.195,874,0.115,875,0.3,876,0.329,877,0.372,878,2.204,879,1.387,880,3.568,881,1.52,882,1.715,883,1.715,884,1.715,885,1.715,886,1.715,887,1.889,888,1.108,889,1.108,890,1.108,891,1.108,892,1.108,893,1.108,894,1.965,895,1.431,896,0.758,897,0.413,898,0.3,899,0.3,900,0.223,901,0.3,902,0.245,903,0.3,904,0.3,905,0.236,906,0.329,907,0.584,908,0.3,909,1.487,910,0.461,911,0.329,912,0.254,913,0.3,914,0.768,915,0.423,916,0.3,917,0.3,918,0.3,919,0.3,920,0.3,921,0.3,922,0.3,923,0.266,924,0.329,925,0.827,926,0.477,927,0.329,928,0.329,929,0.3,930,0.266,931,0.329,932,1.151,933,1.72,934,0.3,935,0.254,936,0.666,937,0.546,938,0.3,939,1.07,940,0.207,941,0.584,942,0.518,943,0.217,944,0.3,945,0.3,946,0.329,947,1.111,948,0.546,949,0.3,950,0.3,951,0.229,952,0.266,953,0.633,954,0.447,955,0.477,956,0.546,957,0.3,958,0.3,959,0.229,960,0.329,961,0.986,962,0.329,963,0.329,964,1.271,965,0.546,966,0.3,967,0.3,968,0.329,969,0.461,970,0.584,971,0.461,972,0.3,973,0.654,974,0.266,975,0.3,976,0.3,977,0.3,978,0.3,979,0.3,980,0.329,981,1.914,982,0.835,983,0.236,984,0.546,985,1.183,986,0.3,987,0.3,988,0.329,989,1.758,990,0.584,991,0.584,992,1.111,993,1.111,994,0.854,995,0.854,996,0.584,997,1.269,998,0.254,999,0.546,1000,0.3,1001,0.3,1002,1.356,1003,2.23,1004,0.584,1005,0.674,1006,0.584,1007,0.3,1008,0.3,1009,0.3,1010,0.3,1011,0.229,1012,0.758,1013,0.584,1014,0.584,1015,0.3,1016,0.3,1017,0.3,1018,0.3,1019,0.3,1020,0.3,1021,0.329,1022,0.329,1023,0.881,1024,2.25,1025,0.881,1026,0.501,1027,0.881,1028,1.04,1029,0.584,1030,0.329,1031,0.943,1032,0.641,1033,0.943,1034,0.584,1035,0.329,1036,0.546,1037,1.696,1038,0.854,1039,0.546,1040,0.584,1041,0.3,1042,0.329,1043,0.266,1044,0.329,1045,0.546,1046,0.329,1047,0.329,1048,0.3,1049,0.3,1050,0.3,1051,0.3,1052,0.195,1053,0.266,1054,0.3,1055,0.329,1056,0.329,1057,0.217,1058,0.635,1059,0.3,1060,0.236,1061,0.329,1062,1.487,1063,1.038,1064,1.151,1065,0.329,1066,0.854,1067,0.854,1068,0.245,1069,0.266,1070,0.3,1071,0.3,1072,0.3,1073,0.3,1074,0.3,1075,0.3,1076,0.329,1077,0.3,1078,0.245,1079,1.111,1080,0.3,1081,0.3,1082,0.3,1083,0.329,1084,0.3,1085,0.584,1086,0.584,1087,0.329,1088,0.3,1089,0.329,1090,0.329,1091,0.546,1092,0.584,1093,0.3,1094,0.3,1095,0.546,1096,0.546,1097,0.266,1098,0.3,1099,0.3,1100,0.329,1101,0.266,1102,0.266,1103,0.266,1104,0.877,1105,0.266,1106,0.266,1107,0.266,1108,0.584,1109,0.28,1110,0.3,1111,0.329,1112,1.715,1113,0.518,1114,0.329,1115,0.799,1116,0.266,1117,0.584,1118,0.329,1119,1.356,1120,0.447,1121,0.546,1122,0.496,1123,0.584,1124,0.3,1125,0.3,1126,0.3,1127,0.3,1128,0.329,1129,0.608,1130,0.908,1131,0.986,1132,0.329,1133,0.518,1134,0.518,1135,0.584,1136,0.447,1137,0.329,1138,0.329,1139,0.329,1140,0.584,1141,0.758,1142,0.3,1143,0.3,1144,0.3,1145,0.329,1146,0.496,1147,0.496,1148,0.641,1149,0.3,1150,0.329,1151,1.356,1152,0.518,1153,0.413,1154,0.584,1155,0.329,1156,0.266,1157,0.3,1158,0.245,1159,0.329,1160,0.584,1161,0.584,1162,0.584,1163,0.584,1164,0.3,1165,0.3,1166,0.3,1167,0.3,1168,0.3,1169,0.329,1170,0.28,1171,0.329,1172,0.3,1173,0.3,1174,0.329,1175,0.343,1176,0.329,1177,0.329,1178,1.914,1179,0.329,1180,0.496,1181,0.725,1182,0.725,1183,0.496,1184,0.546,1185,0.799,1186,0.266,1187,0.329,1188,0.229,1189,0.254,1190,0.3,1191,0.154,1192,0.329,1193,0.447,1194,0.584,1195,0.329,1196,0.518,1197,0.518,1198,0.28,1199,0.3,1200,0.477,1201,0.3,1202,0.3,1203,0.3,1204,0.3,1205,0.329,1206,0.518,1207,0.758,1208,0.854,1209,0.854,1210,0.854,1211,0.28,1212,0.329,1213,0.329,1214,0.959,1215,0.959,1216,0.959,1217,0.329,1218,0.266,1219,0.584,1220,0.329,1221,0.254,1222,1.108,1223,0.654,1224,0.254,1225,0.3,1226,0.3,1227,0.3,1228,0.3,1229,0.266,1230,0.329,1231,0.3,1232,0.329,1233,0.329,1234,0.3,1235,0.329,1236,0.3,1237,0.329,1238,0.3,1239,0.329,1240,0.266,1241,0.329]],["title/api_reference/augmentations/transforms/#transforms-augmentationstransforms",[84,0.865,793,4.942]],["text/api_reference/augmentations/transforms/#transforms-augmentationstransforms",[]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms",[1242,7.881]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms",[]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur",[797,4.578]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur",[6,0.357,10,1.312,70,1.531,82,2.069,84,1.043,87,2.367,96,1.531,98,1.236,200,2.497,206,1.417,207,1.716,408,1.816,414,3.124,418,3.007,423,4.284,484,4.528,485,2.181,486,2.833,585,4.029,688,2.582,700,2.334,795,5.16,796,3.543,797,5.688,798,7.282,799,5.583,800,3.204,801,2.702]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop",[1243,4.279]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop",[6,0.336,10,1.252,40,3.713,53,1.95,70,1.462,77,1.926,82,1.976,84,0.996,87,2.26,96,1.462,98,1.18,126,3.311,200,2.426,206,1.353,207,1.638,242,5.048,309,2.892,311,2.892,326,5.689,344,2.621,356,3.862,401,2.325,408,1.765,414,2.811,420,1.752,482,4.347,485,2.082,486,2.213,632,5.331,688,3.337,801,3.494,803,6.967,804,5.913,805,5.331,806,6.181,807,7.077,808,6.967]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout",[1244,6.714]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout",[6,0.343,70,1.538,82,2.078,84,1.047,87,2.377,96,1.538,98,1.241,200,2.052,206,1.423,207,1.723,253,5.209,297,2.162,368,3.811,407,2.757,408,1.821,414,3.13,418,3.02,485,2.672,486,2.328,688,2.593,800,3.217,801,2.714,810,7.329,811,6.22,812,4.238,813,6.991,814,5.784,815,6.22,816,7.329]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle",[1245,6.091]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle",[6,0.354,70,1.652,82,2.233,84,1.125,87,2.554,96,1.652,98,1.334,200,2.204,206,1.529,207,1.852,253,4.251,260,4.488,408,1.901,485,2.354,486,2.501,688,2.786,800,3.457,801,2.916,812,4.554,818,7.874]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE",[1246,5.2]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE",[6,0.334,70,1.45,82,1.96,84,0.988,87,2.241,93,4.846,96,1.809,98,1.17,200,1.935,206,1.342,207,1.625,213,4.654,297,2.543,369,3.939,408,1.756,414,2.797,418,2.848,420,2.169,481,5.007,484,3.509,485,3.027,486,2.986,641,7.318,688,2.445,800,3.034,820,8.339,822,6.91,823,6.097,824,5.402,825,6.91,826,5.287,827,3.25,828,5.287]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout",[836,5.861]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout",[6,0.31,12,1.704,21,1.524,69,2.927,70,1.238,82,1.673,83,2.041,86,3.04,98,0.999,206,1.146,221,6.027,297,1.74,309,2.599,311,2.599,368,4.05,407,2.219,408,1.586,414,3.326,421,6.167,423,5.12,475,5.162,485,2.328,486,2.947,556,5.383,612,5.252,688,2.087,719,6.673,801,2.185,811,5.006,813,4.274,830,7.789,831,6.911,832,6.911,833,7.789,834,6.487,835,4.387,836,4.817,837,5.518,838,8.229,839,5.518,840,5.518,841,5.518,842,5.518,843,5.518]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop",[482,3.307]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop",[6,0.34,53,2.008,70,1.505,77,1.983,82,2.034,98,1.215,206,1.393,221,4.958,401,2.394,408,1.797,410,3.273,411,3.273,412,3.374,413,3.374,414,3.235,421,6.24,423,5.181,442,3.874,443,3.911,452,4.182,454,5.261,455,5.435,482,3.306,688,2.538,801,2.657,826,6.752,846,6.24]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists",[1247,6.091]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists",[6,0.293,53,1.802,70,1.351,77,2.74,82,1.826,83,2.852,84,0.92,86,2.874,87,2.088,92,3.669,96,1.351,98,1.09,167,3.617,206,1.25,207,1.514,253,4.45,262,3.617,297,2.683,309,2.148,311,2.148,401,2.148,406,3.617,407,3.102,408,1.679,414,3.111,419,2.329,482,4.42,484,4.186,485,1.924,486,2.045,573,4.183,574,3.669,688,2.277,700,2.059,801,2.384,848,6.437,849,6.437,850,6.437,851,7.586,852,8.245,853,7.712,854,3.965,855,6.437,856,4.106,857,6.437,858,4.664]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout",[1248,6.714]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout",[6,0.338,69,3.501,70,1.48,82,2.0,83,2.441,98,1.195,206,1.37,221,6.036,297,2.081,309,2.354,311,2.354,368,3.668,407,2.654,408,1.779,414,3.305,423,5.127,475,4.674,485,2.61,556,4.875,688,2.495,719,7.259,801,2.612,811,5.987,813,5.111,836,5.761,838,7.749,839,6.599,840,6.599,841,6.599,842,6.599,843,6.599,860,7.054,861,7.054,862,7.054,863,6.258]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale",[870,6.091]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale",[6,0.367,21,1.137,70,1.551,71,4.408,78,2.332,82,2.097,98,1.252,206,1.436,408,1.831,420,1.86,485,2.687,486,2.349,606,4.852,611,5.051,688,2.615,801,2.738,846,6.356,865,7.393,867,7.393,868,6.559,869,6.037,870,6.274,871,7.393,872,5.657,873,4.804,874,2.849,875,7.393]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform",[1249,4.96]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform",[2,4.268,6,0.317,10,1.307,36,2.992,38,3.225,39,3.279,70,1.117,71,3.174,77,2.01,82,1.51,83,3.078,96,1.525,98,1.231,180,2.802,206,1.034,215,5.723,219,3.96,248,3.568,297,2.442,304,3.133,308,1.158,325,4.073,407,2.003,408,1.481,414,2.886,418,2.194,427,3.692,484,2.703,485,2.942,486,2.31,494,4.201,535,3.601,609,3.96,610,6.534,611,4.086,614,4.98,615,4.518,616,4.518,617,4.518,618,4.201,619,3.396,620,4.518,621,4.347,622,4.518,623,4.518,624,4.518,625,4.518,626,3.96,627,4.518,628,4.201,629,1.634,630,5.738,631,4.518,632,4.073,633,4.518,634,3.857,635,4.518,642,3.679,688,1.883,798,4.347,801,1.972,878,4.201,879,4.073,880,5.896,881,3.336,882,3.765,883,3.765,884,3.765,885,3.765,886,3.765,887,3.601,888,4.347,889,4.347,890,4.347,891,4.347,892,4.347,893,4.347,894,4.818,895,4.201,896,4.723,897,3.765,898,5.324,899,5.324,900,3.96,901,5.324,902,4.347,903,5.324,904,5.324,905,4.201]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize",[213,3.874]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize",[6,0.356,10,1.659,62,6.636,70,1.393,71,3.958,77,2.551,82,1.883,83,2.297,98,1.124,162,4.49,193,3.189,195,3.784,206,1.289,209,3.494,213,5.237,248,3.258,253,5.237,291,3.258,347,3.114,407,2.498,408,1.712,420,1.67,428,5.464,433,4.314,443,2.942,585,3.0,592,5.422,630,5.239,639,5.89,640,5.89,641,5.634,643,4.588,644,5.89,645,4.314,646,4.938,647,4.399,648,5.89,649,4.49,688,2.349,702,5.239,907,6.639,908,6.639,909,7.865,910,5.239]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA",[912,6.091]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA",[6,0.36,7,0.93,10,1.237,13,5.21,38,5.21,39,4.239,47,4.974,70,1.444,82,1.952,98,1.166,206,1.336,253,3.715,260,3.923,408,1.751,485,2.057,506,4.756,535,4.655,585,3.109,606,3.715,628,6.787,653,6.106,654,6.106,655,6.581,656,6.106,660,6.106,661,6.106,662,6.106,663,6.106,664,5.62,688,2.435,771,6.438,879,5.266,912,5.841,913,6.882,914,4.756,915,4.987,916,6.882,917,6.882,918,6.882,919,6.882,920,6.882,921,6.882,922,6.882,923,6.106]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA.__init__",[1250,5.338]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA.__init__",[]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip",[572,3.644]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip",[6,0.329,53,2.164,70,1.622,77,2.137,82,2.192,84,1.105,87,2.508,96,1.622,98,1.309,200,2.164,206,1.501,207,1.818,401,2.579,408,1.88,485,2.311,486,2.456,572,3.925,573,6.001,574,5.263,575,4.406,688,2.735,800,3.394,801,2.863]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply",[96,1.506]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply",[27,4.872,200,2.621,216,3.971,414,2.566,419,2.863,420,2.355,427,4.017,571,6.714,572,5.233,573,6.084,574,5.336,575,4.509,581,5.351,929,7.911,930,7.019]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat",[1251,5.664]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat",[6,0.286,21,1.238,70,1.301,72,2.47,82,1.759,84,1.277,87,2.011,96,1.301,98,1.05,179,3.149,194,4.887,195,3.535,200,2.253,201,3.644,206,1.204,207,1.458,285,3.819,291,3.044,294,3.392,297,2.789,353,4.286,408,2.111,418,2.555,419,2.244,423,4.725,427,3.149,429,2.672,471,4.745,472,5.502,485,2.406,486,2.839,612,4.185,621,5.064,801,2.297,815,5.263,858,4.493,932,7.584,933,7.584,934,6.201,935,5.263,936,3.044,937,5.801,938,6.201,939,4.894,940,4.286,941,8.049,942,7.141,943,4.493,944,6.201,945,6.201]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur",[1252,6.714]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur",[6,0.326,10,1.372,21,1.174,44,3.705,70,1.2,82,1.622,84,0.817,86,3.194,87,1.855,96,1.2,98,0.969,200,2.136,206,1.111,207,1.345,297,2.251,306,1.329,369,3.26,408,1.554,414,2.786,418,3.776,419,3.628,420,2.16,423,3.358,475,3.79,484,3.875,485,2.739,486,2.728,494,4.514,584,2.278,585,3.448,609,6.388,688,2.023,697,4.35,700,1.829,795,6.073,796,2.777,797,4.868,798,7.013,799,5.839,800,2.511,801,2.118,827,3.589,879,6.571,947,8.588,948,5.35,949,5.719,950,5.719,951,4.376,952,5.074,953,4.895,954,4.376,955,4.671,956,5.35,957,5.719,958,5.719,959,4.376]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise",[380,4.756]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise",[6,0.34,70,1.505,82,2.034,84,1.025,87,2.327,96,1.851,98,1.215,200,2.008,206,1.393,207,1.687,408,1.797,418,3.637,419,3.193,485,3.116,486,3.036,683,7.313,688,2.538,800,3.149,801,2.657,827,3.374,879,5.489,961,8.48,964,5.03,965,6.71,966,7.174,967,7.174]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur",[1253,6.714]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur",[4,6.953,6,0.331,44,3.288,69,3.361,70,1.421,82,1.92,84,0.968,87,2.197,96,1.786,98,1.147,162,5.759,200,1.896,206,1.315,207,1.592,211,4.037,368,3.521,407,2.548,408,1.734,414,2.762,418,2.791,420,1.703,428,4.401,485,2.545,486,2.958,584,2.697,609,5.037,683,5.181,688,2.396,719,6.514,746,4.68,798,5.53,799,5.181,800,2.973,801,2.508,879,5.181,954,5.181,955,5.53,970,6.772,971,5.344,972,6.772,973,5.181,974,6.008,975,6.772,976,6.772,977,6.772,978,6.772,979,6.772]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion",[375,4.578]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion",[6,0.28,10,1.417,61,2.189,70,1.26,71,3.579,77,2.178,82,1.703,83,3.231,96,1.26,98,1.017,206,1.166,215,6.079,219,4.465,248,3.867,297,2.594,304,3.396,308,1.714,325,4.593,407,2.258,408,1.605,414,3.146,418,2.474,427,4.001,485,3.076,486,2.794,611,4.428,668,5.616,688,2.124,801,2.223,827,2.823,828,4.593,878,4.738,880,6.189,881,3.761,882,4.245,883,4.245,884,4.245,885,4.245,886,4.245,887,4.06,888,4.903,889,4.903,890,4.903,891,4.903,892,4.903,893,4.903,894,5.222,895,4.738,981,7.371,983,4.738,984,5.616,985,4.465,986,6.003,987,6.003]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout",[998,6.091]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout",[6,0.337,10,1.122,12,1.219,21,1.321,32,4.521,69,2.127,70,0.899,77,2.373,82,1.215,86,2.564,96,0.899,97,1.612,98,0.726,99,2.962,206,0.832,209,2.256,210,2.596,211,5.651,213,2.314,221,2.962,297,1.84,306,0.996,309,2.455,311,2.082,368,3.244,407,2.347,408,1.271,414,3.075,419,3.347,420,1.85,421,3.031,423,2.516,442,2.739,443,2.765,452,2.617,484,4.103,485,1.281,486,3.07,556,2.962,573,2.785,574,2.443,584,2.485,612,5.025,688,1.516,800,1.881,801,1.587,811,3.637,812,3.608,813,5.33,828,7.94,837,4.009,838,5.535,851,3.279,896,3.802,989,4.521,990,4.286,991,4.286,992,7.357,993,7.357,994,6.239,995,6.239,996,4.286,997,4.009,998,3.637,999,4.009,1000,4.286,1001,4.286,1002,8.587,1003,9.665,1004,6.239,1005,4.924,1006,6.239,1007,4.286,1008,4.286,1009,4.286,1010,4.286,1011,3.279,1012,6.527,1013,6.239,1014,6.239,1015,4.286,1016,4.286,1017,4.286,1018,4.286,1019,4.286,1020,4.286]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip",[1254,3.523]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip",[6,0.329,53,2.174,70,1.629,77,2.146,82,2.202,84,1.11,87,2.519,96,1.629,98,1.315,200,2.174,206,1.508,207,1.826,401,2.591,408,1.886,443,3.442,485,2.321,486,2.467,572,3.943,574,4.426,577,4.63,578,3.652,688,2.747,800,3.409,801,2.876]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue",[384,4.151]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue",[6,0.32,70,1.315,82,1.778,84,0.896,87,2.034,96,1.315,98,1.062,168,4.661,200,1.755,206,1.218,207,1.474,297,2.391,308,2.19,408,1.651,414,3.478,418,4.151,485,1.874,486,3.017,688,2.218,800,2.753,801,2.322,812,3.626,827,4.225,1023,6.171,1024,5.337,1025,6.171,1026,4.759,1027,6.171,1028,7.583,1029,8.106]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression",[379,6.091]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression",[6,0.363,70,1.486,78,2.272,82,2.009,98,1.2,206,1.376,318,5.828,408,1.783,418,3.608,419,3.169,420,2.203,485,2.617,486,2.25,688,2.506,801,2.623,826,5.42,846,5.009,868,6.285,869,7.151,1031,6.012,1033,6.012,1034,7.084,1036,6.626,1037,8.891,1038,9.504,1039,6.626,1040,8.756,1041,7.084]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression.ImageCompressionType",[1036,6.714]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression.ImageCompressionType",[1043,7.783]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg",[1255,6.091]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg",[6,0.354,70,1.652,82,2.233,84,1.125,87,2.554,96,1.652,98,1.334,200,2.204,206,1.529,207,1.852,297,2.323,407,2.962,408,1.901,485,2.354,486,2.501,659,4.77,688,2.786,741,6.43,800,3.457,1045,7.366]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise",[1256,6.714]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise",[6,0.312,70,1.492,81,3.57,82,2.017,84,1.017,87,2.307,96,1.842,98,1.205,168,3.491,206,1.381,207,1.673,252,4.621,408,1.788,418,2.931,485,3.053,486,2.26,488,5.809,580,4.381,581,4.811,588,3.998,676,6.311,678,5.291,683,6.717,685,5.809,686,6.311,688,2.516,800,3.123,965,6.654,1028,8.212,1048,7.113,1049,7.113,1050,7.113,1051,7.113,1052,4.623,1053,6.311,1054,7.113]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression",[1257,6.368]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression",[6,0.348,70,1.586,78,2.364,82,2.143,98,1.28,206,1.468,318,5.348,408,1.855,418,3.754,419,3.297,485,2.723,688,2.674,801,2.799,826,5.783,846,5.344,868,6.705,869,7.439,1031,6.414,1033,6.414,1037,9.148,1039,7.07]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda",[1258,5.075]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda",[5,5.338,6,0.354,10,1.175,53,2.565,62,5.158,70,1.371,71,3.897,72,2.603,77,2.532,82,2.361,84,1.497,87,2.12,89,2.166,96,1.747,98,1.107,206,1.269,207,1.537,208,4.622,262,3.673,291,3.208,347,3.771,372,3.96,401,3.057,408,1.695,433,4.248,484,3.319,485,1.954,486,2.076,611,3.673,681,4.622,692,5.799,858,4.736,897,4.622,909,9.023,910,5.158,1057,4.736,1058,4.862,1059,6.537,1060,5.158]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize",[1259,6.091]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize",[6,0.364,53,2.008,70,1.505,71,4.277,77,1.983,82,2.034,84,1.261,87,2.327,95,4.418,96,1.505,98,1.215,160,5.661,206,1.393,207,1.687,213,3.872,248,3.521,401,2.394,408,1.797,414,2.327,420,1.804,423,5.181,484,3.642,485,2.144,486,2.803,611,4.959,688,2.538,801,2.657,880,4.754,887,4.852,985,5.336,989,5.198,1062,8.255,1063,5.489,1064,6.088]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout",[1260,6.091]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout",[6,0.362,7,1.026,50,3.9,51,3.534,77,2.81,221,5.247,253,4.931,297,2.239,368,3.947,475,6.053,556,5.247,812,4.391,827,3.571,853,7.102,999,7.102,1068,6.2,1069,6.736,1070,7.592,1071,7.592,1072,7.592,1073,7.592,1074,7.592,1075,7.592]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__",[1250,5.338]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__",[6,0.356,10,1.599,70,1.524,77,2.458,82,2.061,91,3.021,96,1.524,98,1.231,206,1.411,224,2.87,297,2.623,300,3.49,368,3.778,408,1.811,409,3.453,423,4.265,475,4.815,556,5.022,585,3.283,688,2.57,801,2.691,973,5.56,997,6.797,1066,7.266,1067,7.266,1077,7.266,1078,5.934,1079,10.017,1080,7.266,1081,7.266,1082,7.266]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur",[1261,5.664]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur",[6,0.355,10,1.586,70,1.505,82,2.034,84,1.025,87,2.327,96,1.505,98,1.215,200,2.471,206,1.393,207,1.687,408,1.797,414,2.327,418,2.956,423,4.211,484,4.481,485,2.144,486,2.803,494,5.661,585,3.987,688,2.538,700,2.295,795,5.073,796,3.483,797,5.629,799,5.489,800,3.149,801,2.657,948,6.71,1084,7.174,1085,8.825,1086,8.825]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur",[1262,5.338]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur",[6,0.357,10,1.312,70,1.531,82,2.069,84,1.043,87,2.367,96,1.871,98,1.236,200,2.497,206,1.417,207,1.716,408,1.816,414,2.367,418,3.007,423,4.284,484,4.528,485,2.181,486,2.833,585,4.029,688,2.582,700,2.334,795,5.16,796,3.543,797,5.688,798,7.282,799,5.583,800,3.204,801,2.702,1088,7.297]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise",[1263,6.714]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise",[6,0.361,10,1.486,12,1.262,21,0.994,61,2.356,70,1.356,82,1.832,97,2.431,98,1.094,195,3.683,206,1.255,209,4.35,210,5.818,253,4.461,297,2.833,368,4.738,407,3.109,408,1.683,409,3.928,418,2.663,433,5.371,471,7.898,485,2.871,486,2.625,700,2.644,812,3.737,827,3.039,914,6.298,1091,6.044,1092,6.462,1093,6.462,1094,6.462,1095,6.044,1096,6.044,1097,5.733,1098,6.462,1099,6.462]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize",[451,3.778]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize",[6,0.315,70,1.511,82,2.043,83,3.061,98,1.22,206,1.399,253,4.776,297,2.946,306,1.674,407,3.329,408,1.802,420,1.812,423,4.229,485,3.064,501,5.75,659,4.364,688,2.549,801,2.668,939,5.685,964,5.458,1045,6.739,1058,6.581,1104,7.557,1108,7.204,1110,7.204]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion",[1264,4.756]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion",[6,0.275,10,1.391,70,1.225,71,3.48,77,2.138,82,1.656,83,3.196,96,1.225,98,0.989,206,1.134,215,5.996,219,4.342,248,3.797,297,2.559,304,3.334,308,2.009,325,4.467,407,2.196,408,1.575,414,2.996,418,3.188,427,3.928,446,6.565,485,3.171,486,2.935,611,4.347,688,2.065,801,2.162,827,3.638,878,4.607,880,6.121,881,3.658,882,4.128,883,4.128,884,4.128,885,4.128,886,4.128,887,3.948,888,4.767,889,4.767,890,4.767,891,4.767,892,4.767,893,4.767,894,5.126,895,4.607,981,7.29,1112,6.532,1113,6.863]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded",[358,4.854]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded",[6,0.353,53,1.809,70,1.356,77,2.284,82,1.832,83,2.859,84,0.923,87,2.096,96,1.356,98,1.094,162,4.37,206,1.255,207,1.52,215,6.298,248,4.056,297,2.688,298,3.793,309,2.156,311,2.156,368,3.36,401,2.156,408,1.683,414,3.293,485,2.967,486,2.053,496,5.988,688,2.286,716,4.37,801,2.393,834,4.806,835,4.806,858,4.682,878,5.099,880,4.282,894,6.038,895,6.522,936,4.056,973,4.944,985,6.147,1115,6.044,1116,5.733,1117,8.265]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize",[729,5.861]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize",[6,0.307,61,2.52,70,1.45,82,1.96,83,2.983,84,0.988,87,2.241,93,3.883,94,5.062,96,1.45,98,1.17,206,1.342,207,1.625,252,3.637,253,3.73,297,2.038,368,4.483,369,3.939,408,1.756,414,3.285,418,3.553,419,2.501,485,2.065,486,2.739,688,2.445,728,6.131,730,5.643,800,3.034,827,3.25,1119,9.842,1120,5.287,1121,6.464,1122,5.865,1123,8.623,1124,6.91,1125,6.91,1126,6.91,1127,6.91]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness",[1265,5.492]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness",[6,0.342,70,1.524,82,2.061,84,1.038,87,2.357,96,1.524,98,1.231,168,4.365,200,2.034,206,1.411,207,1.709,308,1.934,408,1.811,418,3.665,485,3.071,486,2.825,560,5.894,580,4.475,688,2.57,800,3.19,801,2.691,812,4.202,824,6.276,827,3.417,1130,5.934,1131,6.446]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast",[1266,3.732]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast",[6,0.352,70,1.34,82,1.812,84,0.913,87,2.072,96,1.34,98,1.082,168,4.448,200,1.789,206,1.241,207,1.502,209,3.362,308,2.08,408,1.671,418,3.941,423,3.75,485,3.148,486,2.879,560,5.437,580,5.053,688,2.26,800,2.805,801,2.366,812,3.695,823,6.763,824,6.343,827,3.859,896,5.668,932,5.422,964,3.641,1130,6.7,1131,7.279,1133,5.668,1134,5.668,1135,6.389,1136,6.278]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast",[1267,5.861]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast",[6,0.342,70,1.524,82,2.061,84,1.038,87,2.357,96,1.524,98,1.231,168,4.365,200,2.034,206,1.411,207,1.709,308,1.934,408,1.811,418,3.665,485,3.071,486,2.825,580,4.475,688,2.57,800,3.19,801,2.691,812,4.202,823,6.289,824,6.276,827,3.417,1130,5.934,1131,6.446]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop",[1268,3.562]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop",[6,0.324,53,2.116,70,1.586,77,2.089,82,2.143,84,1.08,87,2.452,96,1.586,98,1.28,200,2.116,206,1.468,207,1.777,309,3.04,311,3.04,356,4.189,401,2.522,408,1.855,414,2.955,420,1.901,482,4.506,485,2.259,486,2.401,688,2.674,700,2.418,801,2.799]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox",[1269,6.091]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox",[6,0.345,53,2.079,70,1.558,77,2.052,82,2.106,84,1.061,87,2.409,96,1.558,98,1.258,206,1.442,207,1.746,297,2.19,401,3.007,408,1.835,418,3.06,420,1.868,452,3.114,482,3.422,485,2.9,486,2.863,688,2.627,700,2.375,801,2.75,982,4.573,1140,7.425,1141,6.588,1142,7.425,1143,7.425,1144,7.425]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog",[1270,5.492]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog",[6,0.339,7,0.965,8,2.333,70,1.499,82,2.026,98,1.21,206,1.387,408,1.792,418,3.931,419,3.452,420,2.4,485,2.851,527,5.637,530,8.835,531,4.937,532,4.399,534,6.946,566,5.637,678,6.547,684,5.637,688,2.527,801,2.645,824,5.515,826,5.466,846,5.051,1146,6.062,1147,6.062,1149,7.143]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma",[1271,5.664]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma",[6,0.329,70,1.622,82,2.192,98,1.309,206,1.501,275,6.859,297,2.28,308,1.681,408,1.88,418,3.186,485,3.057,486,2.456,688,2.735,801,2.863,827,3.636,1151,10.229,1152,6.859,1153,5.467,1154,7.731]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle",[1272,6.714]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle",[6,0.366,70,1.652,77,2.176,82,2.233,98,1.334,206,1.529,408,1.901,414,3.028,484,3.998,688,2.786,700,2.519,801,2.916,828,7.143,984,7.366,1156,6.986,1157,7.874,1158,6.43]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain",[1273,5.861]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain",[6,0.299,7,0.897,8,2.169,70,1.393,82,1.883,83,2.297,98,1.124,164,2.635,206,1.289,252,3.494,304,2.861,318,3.897,404,4.314,408,1.712,414,2.153,418,4.124,419,3.043,420,2.115,485,1.984,529,3.731,531,4.588,532,4.089,538,5.89,539,5.422,540,5.89,541,5.422,542,5.422,544,7.46,545,5.89,546,5.89,547,4.314,548,5.89,612,3.452,688,2.349,801,2.459,854,4.089,1024,5.452,1120,5.08,1121,6.21,1122,5.634,1160,6.639,1161,6.639,1162,6.639,1163,8.408,1164,6.639,1165,6.639,1166,6.639,1167,6.639,1168,6.639]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop",[1274,6.091]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop",[6,0.293,10,1.153,53,1.795,70,1.345,77,1.772,82,1.819,84,0.916,87,2.08,96,1.345,98,1.086,200,1.795,206,1.245,207,1.508,248,3.147,272,3.95,304,2.763,305,4.225,309,2.744,311,2.744,356,3.555,401,2.14,408,1.675,414,2.668,418,3.389,420,1.613,427,3.256,482,4.564,484,4.61,485,2.96,486,2.613,606,3.462,611,4.622,688,2.269,700,2.051,801,2.375,880,5.45,881,4.018,882,4.535,883,4.535,884,4.535,885,4.535,886,4.535,887,4.337,989,6.579,1063,4.907,1064,6.98,1172,6.413,1173,6.413]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90",[1275,4.151]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90",[6,0.328,53,2.154,70,1.614,77,2.127,82,2.182,84,1.1,87,2.496,96,1.614,98,1.303,200,2.154,206,1.494,207,1.81,216,3.863,273,3.657,316,5.442,401,2.568,408,1.875,475,5.099,485,2.3,486,2.445,581,5.205,688,2.722,800,3.378,801,2.85,812,4.45,1175,4.518]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90.apply",[96,1.506]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90.apply",[70,1.741,98,1.406,200,2.323,206,1.612,216,4.166,316,5.869,368,4.315,408,1.69,414,2.692,580,5.111,581,5.613,1175,4.872]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale",[1276,6.091]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale",[6,0.344,10,1.18,43,3.118,53,1.837,70,1.377,77,1.814,82,1.861,84,0.938,87,2.128,96,1.377,98,1.111,200,2.337,206,1.274,207,1.543,248,3.221,297,1.935,304,2.828,305,3.371,401,2.19,408,1.7,418,3.439,420,2.099,427,3.332,429,2.828,484,4.238,485,2.981,486,2.916,580,4.041,606,3.542,611,4.69,688,2.321,800,2.881,801,2.43,812,3.795,827,3.086,880,5.531,881,4.111,882,4.64,883,4.64,884,4.64,885,4.64,886,4.64,887,4.438,953,3.74,1095,6.138,1096,6.138,1178,7.623]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow",[1277,5.492]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow",[6,0.345,7,0.897,8,2.169,12,1.297,70,1.393,82,1.883,98,1.124,164,2.08,206,1.289,221,4.588,297,1.958,368,4.798,408,1.712,410,3.029,411,3.029,412,3.122,413,3.122,414,2.993,418,3.803,419,3.043,420,1.67,485,2.899,531,4.588,532,4.089,551,8.88,684,5.239,688,2.349,799,5.08,801,2.459,824,5.268,846,5.946,939,6.636,1005,5.239,1180,5.634,1181,7.136,1182,7.136,1183,5.634,1184,6.21,1185,6.21,1186,5.89]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop",[1278,5.2]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop",[6,0.328,10,1.189,70,1.387,77,1.828,82,1.875,84,0.945,87,2.145,96,1.76,98,1.12,200,2.348,206,1.284,207,1.555,248,3.246,304,2.85,305,4.309,309,3.074,311,2.799,356,3.666,401,2.799,408,1.708,414,2.721,420,1.663,427,3.358,482,4.464,484,3.358,485,2.507,486,2.664,503,5.219,508,5.867,611,4.714,688,2.339,700,2.115,801,2.449,880,5.558,881,4.143,882,4.676,883,4.676,884,4.676,885,4.676,886,4.676,887,4.473,1063,5.06,1188,5.06,1189,5.612,1190,6.613,1191,3.397]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop",[1279,4.497]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop",[6,0.299,10,1.194,53,1.859,70,1.393,77,1.835,82,1.883,84,0.949,87,2.153,96,1.393,98,1.124,200,1.859,206,1.289,207,1.561,248,3.258,304,2.861,305,4.32,309,2.806,311,2.806,356,3.68,401,2.215,408,1.712,414,3.147,420,1.67,427,3.371,482,4.612,484,4.269,485,2.513,486,2.671,611,4.725,688,2.349,700,2.124,801,2.459,824,4.16,880,5.572,881,4.16,882,4.695,883,4.695,884,4.695,885,4.695,886,4.695,887,4.49,989,4.811,1063,5.08,1064,5.634,1193,5.08,1194,6.639]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow",[1280,5.861]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow",[6,0.339,7,0.961,8,2.324,70,1.492,82,2.017,98,1.205,206,1.381,273,3.38,297,2.098,368,3.698,407,2.676,408,1.788,418,3.618,419,3.446,420,2.208,485,2.846,531,4.916,532,4.381,554,5.809,555,6.311,556,4.916,558,8.12,684,5.614,688,2.516,801,2.634,1196,6.311,1197,6.311,1199,7.113,1200,7.169,1201,7.113,1202,7.113,1203,7.113,1204,7.113]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare",[1281,5.861]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare",[6,0.337,7,0.844,8,2.041,12,1.58,70,1.311,82,1.772,98,1.058,164,2.534,206,1.213,221,4.318,252,3.288,297,1.843,368,4.205,408,1.647,410,2.85,411,2.85,412,2.938,413,2.938,414,3.264,418,4.048,419,3.245,420,2.034,485,3.008,531,4.318,532,3.847,564,5.542,565,5.542,566,6.382,567,5.542,568,8.715,684,4.93,688,2.21,799,4.78,801,2.314,824,5.067,826,4.78,846,4.417,1184,5.844,1185,7.565,1206,5.542,1207,7.175,1208,8.087,1209,8.087,1210,8.087]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize",[305,3.687]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize",[6,0.308,10,1.252,53,1.95,70,1.462,77,1.926,82,1.976,84,0.996,87,2.26,96,1.462,98,1.18,200,1.95,206,1.353,207,1.638,248,3.419,304,3.002,305,3.579,309,3.148,311,3.148,401,2.325,408,1.765,414,2.811,420,1.752,427,3.537,429,3.735,485,2.082,486,2.753,592,5.689,611,4.87,688,2.465,801,2.58,880,5.743,881,4.365,882,4.927,883,4.927,884,4.927,885,4.927,886,4.927,887,4.712,1115,8.107]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift",[1282,4.497]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift",[6,0.316,61,2.229,70,1.282,82,1.733,84,0.873,87,1.982,96,1.282,98,1.035,168,4.355,200,1.711,206,1.187,207,1.437,253,5.077,255,4.676,256,4.428,257,4.05,260,3.484,297,2.774,308,2.175,408,1.624,414,3.465,418,4.122,485,1.827,486,2.988,688,2.162,800,2.683,801,2.263,812,3.535,827,4.173,1024,5.622,1141,5.422,1214,6.65,1215,6.65,1216,6.65]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate",[216,3.602]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate",[6,0.272,10,1.372,53,1.601,70,1.2,71,3.41,77,2.109,82,1.622,83,3.17,84,0.817,87,1.855,96,1.601,98,0.969,200,1.601,206,1.111,207,1.345,215,5.936,216,2.871,219,4.254,248,3.745,297,2.533,304,3.288,308,1.659,316,5.396,325,4.376,401,1.908,407,2.152,408,1.554,414,3.304,418,2.357,427,3.875,485,2.853,486,2.911,588,4.826,611,4.289,643,3.953,688,2.023,700,1.829,800,2.511,801,2.118,812,3.308,824,5.741,827,2.69,878,4.514,880,6.072,881,3.583,882,4.044,883,4.044,884,4.044,885,4.044,886,4.044,887,3.868,888,4.671,889,4.671,890,4.671,891,4.671,892,4.671,893,4.671,894,5.057,895,4.514,915,4.144,1218,5.074,1219,7.631]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate",[1283,4.348]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate",[6,0.245,10,1.238,53,1.378,70,1.032,71,2.934,77,1.903,78,1.277,82,1.396,83,2.977,84,0.984,87,1.596,96,1.667,98,0.833,200,1.378,206,0.956,207,1.157,215,5.49,216,3.456,219,3.66,248,3.38,297,2.841,304,2.967,308,2.041,309,1.642,311,1.642,325,3.765,353,3.401,407,1.851,408,1.402,414,3.188,418,3.97,419,1.781,420,1.238,427,3.496,445,4.177,485,3.108,486,2.981,575,2.805,580,4.241,606,3.717,611,3.87,688,1.741,800,2.16,801,1.823,812,2.846,826,3.765,827,3.736,846,3.48,878,3.884,880,5.701,881,3.083,882,3.48,883,3.48,884,3.48,885,3.48,886,3.48,887,3.329,888,4.019,889,4.019,890,4.019,891,4.019,892,4.019,893,4.019,894,4.563,895,3.884,1112,6.084,1141,4.366,1178,6.79,1222,7.026,1223,5.269,1224,4.177,1225,4.921,1226,4.921,1227,4.921,1228,4.921,1229,4.366]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize",[1284,6.091]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize",[6,0.363,53,1.991,70,1.492,71,4.241,77,1.966,82,2.017,84,1.255,87,2.307,95,4.381,96,1.492,98,1.205,160,5.614,206,1.381,207,1.673,213,3.84,248,3.491,401,2.374,408,1.788,414,2.307,420,1.789,421,5.03,423,4.176,484,3.612,485,2.126,486,2.789,611,4.934,688,2.516,801,2.634,880,4.714,887,4.811,985,6.53,989,5.154,1062,8.212,1063,5.443,1064,6.037,1231,7.113]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize",[742,5.492]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize",[6,0.319,70,1.544,82,2.087,84,1.052,87,2.388,96,1.544,98,1.247,206,1.429,207,1.731,297,2.644,407,2.769,408,1.826,414,3.136,418,3.694,481,7.6,485,3.007,486,2.848,495,4.783,740,6.011,741,6.011,742,5.632,800,3.231,827,3.462]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat",[1285,5.664]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat",[6,0.336,70,1.462,72,2.775,82,1.976,84,1.239,87,2.26,96,1.462,98,1.18,179,3.537,195,3.971,200,2.426,201,2.685,206,1.353,207,1.638,279,5.689,294,3.81,297,2.911,353,4.815,407,2.621,408,2.01,418,2.871,419,2.521,423,5.088,429,3.002,485,2.59,486,2.753,499,6.181,501,4.527,612,4.506,801,2.58,858,5.048,933,8.006,937,6.517,939,5.498,1234,6.967]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray",[1286,6.091]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray",[6,0.369,70,1.579,82,2.134,84,1.075,87,2.441,96,1.579,98,1.274,193,3.614,200,2.107,206,1.461,207,1.769,260,4.289,297,2.219,385,7.419,407,2.831,408,1.85,485,2.249,486,2.39,688,2.662,741,6.145,800,3.303,801,2.787,936,4.459,956,7.039,964,4.289,1236,7.524]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia",[1287,6.714]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia",[6,0.354,70,1.652,82,2.233,84,1.125,87,2.554,96,1.959,98,1.334,200,2.204,206,1.529,207,1.852,260,4.488,408,1.901,485,2.354,486,2.501,494,6.214,688,2.786,800,3.457,801,2.916,1238,7.874]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose",[590,4.756]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose",[6,0.33,53,2.184,70,1.637,77,2.156,82,2.213,84,1.115,87,2.531,96,1.637,98,1.321,200,2.184,206,1.515,207,1.835,401,2.603,402,3.961,408,1.891,485,2.332,486,2.478,590,5.17,688,2.76,746,5.392,800,3.425,801,2.889,1240,6.922]],["title/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip",[1288,4.578]],["text/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip",[6,0.329,53,2.174,70,1.629,77,2.146,82,2.202,84,1.11,87,2.519,96,1.629,98,1.315,200,2.174,206,1.508,207,1.826,401,2.591,408,1.886,442,3.409,485,2.321,486,2.467,572,3.943,573,5.047,577,4.63,578,3.652,688,2.747,800,3.409,801,2.876]],["title/api_reference/core/",[128,4.96]],["text/api_reference/core/",[68,5.883,84,1.204,378,4.669,387,7.148,388,8.423,389,8.423,390,5.581,391,8.423]],["title/api_reference/core/composition/",[68,3.169,387,4.439,1289,4.893]],["text/api_reference/core/composition/",[1,0.809,3,3.632,6,0.093,12,1.988,19,4.052,21,0.652,31,1.527,53,2.328,61,1.546,68,1.575,70,1.43,72,2.911,78,2.0,79,2.204,82,1.202,83,3.142,84,1.46,87,2.211,91,1.081,96,1.744,97,1.595,98,1.408,139,4.358,189,2.35,206,1.497,207,1.813,209,4.231,217,1.73,224,1.674,251,3.216,253,3.341,276,2.998,281,2.022,290,2.704,292,1.01,297,1.25,298,1.527,299,1.797,300,1.249,304,2.312,306,2.258,308,1.59,309,2.065,311,2.065,335,1.759,340,2.052,355,1.602,361,2.452,363,1.723,364,1.527,382,3.299,387,2.207,401,1.791,404,4.751,406,3.016,407,0.978,408,1.57,410,2.448,411,2.448,412,1.994,413,1.994,420,0.654,421,2.998,428,2.755,430,2.058,431,3.63,432,2.93,433,4.022,435,4.485,436,3.598,437,3.153,438,2.052,439,1.884,440,2.207,441,2.207,442,2.717,443,2.743,451,3.258,452,1.778,464,1.99,477,2.527,478,3.462,479,2.656,480,2.207,485,2.037,486,2.554,487,3.761,488,2.124,489,2.307,559,1.659,581,2.867,588,1.461,606,1.404,612,4.55,643,4.711,679,2.448,800,1.861,856,1.659,858,1.884,1058,1.934,1130,2.124,1289,2.432,1290,2.855,1291,5.79,1292,2.6,1293,2.6,1294,4.239,1295,2.6,1296,2.6,1297,2.6,1298,2.6,1299,3.244,1300,3.345,1301,3.965,1302,3.965,1303,2.855,1304,2.489,1305,2.867,1306,2.307,1307,2.6,1308,2.809,1309,1.69,1310,2.307,1311,1.934,1312,2.855,1313,3.345,1314,3.462,1315,2.809,1316,2.124,1317,5.253,1318,3.598,1319,2.6,1320,2.307,1321,3.761,1322,2.6,1323,2.307,1324,2.855,1325,3.965,1326,2.307,1327,2.855,1328,2.207,1329,2.052,1330,2.855]],["title/api_reference/core/composition/#composition-api-corecomposition",[68,3.169,387,4.439,1289,4.893]],["text/api_reference/core/composition/#composition-api-corecomposition",[]],["title/api_reference/core/composition/#albumentations.core.composition",[1331,7.881]],["text/api_reference/core/composition/#albumentations.core.composition",[]],["title/api_reference/core/composition/#albumentations.core.composition.BboxParams",[364,4.213]],["text/api_reference/core/composition/#albumentations.core.composition.BboxParams",[1,1.369,12,1.949,61,1.905,70,1.096,78,2.401,79,2.572,83,2.837,84,0.747,97,1.966,98,1.216,206,1.015,209,3.778,224,2.064,251,3.597,276,3.695,297,1.541,298,3.067,309,2.946,311,2.946,355,3.218,361,3.022,382,2.785,401,2.736,406,4.608,407,1.966,408,1.462,410,3.741,411,3.741,412,3.376,413,3.376,421,5.076,428,3.395,430,3.485,431,5.546,432,4.961,433,3.395,435,6.397,436,6.092,437,5.339,438,4.123,439,3.786,440,4.434,441,4.434,442,3.151,443,3.181,451,4.316,464,3.998,477,3.115,479,3.274,480,4.434,485,2.145,486,2.605,487,6.369,488,4.267,489,4.636,1130,4.267,1291,4.888,1292,5.225,1293,5.225,1294,7.178,1295,5.225,1296,5.225,1297,5.225,1298,5.225,1299,3.998,1300,4.123,1301,4.888,1302,4.888]],["title/api_reference/core/composition/#albumentations.core.composition.Compose",[281,2.344]],["text/api_reference/core/composition/#albumentations.core.composition.Compose",[6,0.25,31,4.124,53,1.967,70,1.474,78,2.26,79,2.246,82,2.47,83,3.276,84,1.503,87,2.279,96,1.474,98,1.604,206,1.839,207,1.652,281,2.846,290,4.481,297,2.072,340,5.544,363,4.655,364,4.124,408,1.431,485,2.1,486,2.232,858,5.09,1304,4.124,1305,4.751,1306,6.232,1307,7.025,1308,5.772,1309,4.565,1310,6.232,1311,5.225]],["title/api_reference/core/composition/#albumentations.core.composition.KeypointParams",[363,4.756]],["text/api_reference/core/composition/#albumentations.core.composition.KeypointParams",[12,1.272,53,2.931,61,2.374,70,1.366,83,2.873,84,1.187,97,2.45,98,1.407,206,1.264,209,4.371,224,2.572,251,3.124,276,4.604,335,4.404,361,3.766,382,3.47,408,1.691,428,4.231,433,5.943,442,3.646,443,3.681,452,3.483,486,2.068,559,4.153,581,5.617,588,3.659,606,3.515,1291,6.091,1299,4.982,1300,5.139,1301,6.091,1302,6.091,1313,5.139,1314,5.317,1315,5.503,1316,5.317,1317,8.175,1318,7.049,1319,6.511,1320,5.777,1321,7.368,1322,6.511,1323,5.777]],["title/api_reference/core/composition/#albumentations.core.composition.OneOf",[1332,4.213]],["text/api_reference/core/composition/#albumentations.core.composition.OneOf",[21,1.142,70,1.558,83,3.118,84,1.52,87,3.148,91,3.087,96,1.891,98,1.258,189,4.116,206,1.442,207,1.746,281,2.425,300,3.566,304,3.884,408,1.512,420,1.868,451,3.908,485,2.219,486,2.359,643,6.707,800,3.26,1325,6.946,1326,6.588]],["title/api_reference/core/composition/#albumentations.core.composition.OneOrOther",[1333,7.881]],["text/api_reference/core/composition/#albumentations.core.composition.OneOrOther",[21,1.289,84,1.384,96,1.758,189,4.646,304,3.612,643,6.692,1325,7.84,1329,6.614]],["title/api_reference/core/composition/#albumentations.core.composition.PerChannel",[1334,7.881]],["text/api_reference/core/composition/#albumentations.core.composition.PerChannel",[70,1.593,83,3.39,84,1.487,87,2.463,96,2.182,98,1.286,206,1.474,207,1.785,253,5.289,281,2.48,292,2.949,408,1.546,485,2.269,486,2.902,612,4.749,800,3.333,1058,5.647]],["title/api_reference/core/serialization/",[68,3.169,378,2.899,1335,4.893]],["text/api_reference/core/serialization/",[3,4.039,10,1.317,12,1.827,19,4.378,23,1.951,31,2.066,36,1.978,50,2.767,51,2.507,55,3.101,68,2.132,70,1.537,71,3.211,72,3.145,83,1.218,84,1.497,88,2.457,97,2.026,98,1.411,104,3.374,105,1.787,139,4.709,143,3.5,146,1.852,193,1.69,201,1.356,206,1.816,213,2.907,217,1.869,222,3.374,249,1.727,251,2.461,278,1.575,285,3.317,291,3.211,294,1.925,306,1.935,308,1.717,344,2.026,350,2.874,367,1.9,378,5.414,399,3.483,404,5.132,408,1.608,415,1.158,428,5.132,485,1.052,612,2.8,619,2.245,649,2.38,851,4.121,910,2.777,926,2.874,940,2.432,954,2.693,1258,6.322,1308,4.335,1309,3.5,1335,3.292,1336,3.865,1337,3.52,1338,3.52,1339,3.52,1340,3.52,1341,2.874,1342,2.874,1343,2.874,1344,3.865,1345,3.865,1346,3.865,1347,3.865,1348,3.52,1349,3.52,1350,3.865,1351,3.122,1352,6.219,1353,6.179,1354,5.038,1355,4.006,1356,3.865,1357,7.792,1358,6.219,1359,5.52,1360,4.956,1361,3.122,1362,5.038,1363,3.865,1364,7.388,1365,6.574,1366,3.52,1367,4.571,1368,4.25,1369,6.119,1370,4.571,1371,3.865,1372,2.618]],["title/api_reference/core/serialization/#serialization-api-coreserialization",[68,3.169,378,2.899,1335,4.893]],["text/api_reference/core/serialization/#serialization-api-coreserialization",[]],["title/api_reference/core/serialization/#albumentations.core.serialization",[1373,7.881]],["text/api_reference/core/serialization/#albumentations.core.serialization",[]],["title/api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta",[1374,7.881]],["text/api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta",[10,1.721,72,3.813,84,1.175,88,2.159,206,1.596,1337,8.219,1338,8.219,1339,8.219,1340,8.219,1341,6.711,1342,6.711,1343,6.711]],["title/api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta.__new__",[1375,7.881]],["text/api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta.__new__",[31,4.969,51,3.941,146,4.455,294,4.63,415,2.785,910,6.68,1348,8.465,1349,8.465]],["title/api_reference/core/serialization/#albumentations.core.serialization.from_dict",[1376,6.368]],["text/api_reference/core/serialization/#albumentations.core.serialization.from_dict",[50,3.798,55,3.804,70,1.551,72,2.944,84,1.476,88,2.545,97,2.781,98,1.252,206,1.881,291,3.628,344,2.781,378,4.982,408,1.506,1258,7.125,1308,5.956,1309,4.804,1352,6.274,1353,6.964,1354,6.916,1355,5.499]],["title/api_reference/core/serialization/#albumentations.core.serialization.load",[105,3.644]],["text/api_reference/core/serialization/#albumentations.core.serialization.load",[50,3.536,55,3.639,70,1.444,72,2.741,84,1.475,88,2.582,97,2.589,98,1.166,105,3.494,143,4.472,206,1.822,249,3.378,251,2.589,291,3.378,344,2.589,378,5.447,408,1.402,428,5.589,1258,6.949,1308,4.56,1309,4.472,1352,5.841,1353,6.484,1354,6.438,1355,5.119,1357,8.045,1358,5.841,1359,5.699,1360,5.817,1361,6.106,1362,6.438]],["title/api_reference/core/serialization/#albumentations.core.serialization.save",[104,4.497]],["text/api_reference/core/serialization/#albumentations.core.serialization.save",[10,1.268,36,3.964,70,1.48,71,4.206,84,1.456,88,1.853,98,1.479,104,5.472,143,4.584,206,1.37,222,4.42,251,3.286,278,3.156,285,4.344,291,3.462,367,3.808,378,5.495,408,1.437,428,6.165,851,5.397,1357,8.17,1358,5.987,1359,5.787,1360,5.907,1362,6.599,1364,6.599,1365,6.892,1366,7.054,1367,5.987,1368,5.567,1369,6.599,1370,5.987]],["title/api_reference/core/serialization/#albumentations.core.serialization.to_dict",[1368,5.664]],["text/api_reference/core/serialization/#albumentations.core.serialization.to_dict",[10,1.301,23,4.01,51,3.368,70,1.518,71,4.313,83,2.503,84,1.467,88,1.901,98,1.502,193,3.475,201,2.788,206,1.405,213,4.789,222,4.533,285,4.456,350,5.908,378,4.917,408,1.807,485,2.162,649,4.893,851,5.536,940,5.0,954,5.536,1353,5.0,1364,8.298,1365,7.001,1367,6.14,1368,5.71,1369,8.298,1370,6.14,1372,5.381]],["title/api_reference/core/transforms_interface/",[84,0.748,390,3.466,1377,4.893]],["text/api_reference/core/transforms_interface/",[3,4.431,6,0.305,12,1.674,19,5.003,31,2.864,46,2.295,49,2.449,51,2.271,61,1.779,70,1.436,72,3.413,77,1.892,82,2.431,83,1.688,84,1.225,96,1.024,97,1.835,98,1.159,139,5.382,193,2.343,200,1.916,206,1.665,207,1.147,208,3.45,210,2.955,217,1.871,269,3.733,290,4.366,291,3.359,292,1.895,293,4.081,297,2.94,304,2.949,306,1.991,308,1.719,322,3.733,340,3.85,390,3.233,399,2.319,404,5.866,408,1.394,409,4.073,415,2.252,529,2.742,580,3.005,584,1.943,612,3.559,642,3.372,679,2.226,702,5.401,925,3.629,953,3.901,973,3.733,1012,7.604,1078,3.984,1308,3.233,1309,4.448,1310,7.014,1311,3.629,1328,4.141,1377,4.564,1378,5.357,1379,5.357,1380,4.879,1381,4.879,1382,4.879,1383,5.357,1384,5.357,1385,5.357,1386,4.879,1387,5.357,1388,6.844,1389,6.844,1390,6.844,1391,5.881,1392,4.879]],["title/api_reference/core/transforms_interface/#transforms-interface-coretransforms_interface",[84,0.748,390,3.466,1377,4.893]],["text/api_reference/core/transforms_interface/#transforms-interface-coretransforms_interface",[]],["title/api_reference/core/transforms_interface/#albumentations.core.transforms_interface",[1393,7.881]],["text/api_reference/core/transforms_interface/#albumentations.core.transforms_interface",[]],["title/api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform",[1394,7.881]],["text/api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform",[]],["title/api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets",[1395,7.881]],["text/api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets",[6,0.344,31,4.321,51,3.427,70,1.544,77,2.478,82,2.853,84,1.052,97,2.769,98,1.247,206,1.877,269,5.632,290,4.695,293,5.345,297,2.171,304,3.863,340,5.809,408,1.499,529,4.137,1308,4.878,1309,5.826,1310,8.577,1311,5.475,1380,7.361,1381,7.361,1382,7.361]],["title/api_reference/core/transforms_interface/#albumentations.core.transforms_interface.DualTransform",[1396,7.881]],["text/api_reference/core/transforms_interface/#albumentations.core.transforms_interface.DualTransform",[46,4.083,49,4.358,84,1.241]],["title/api_reference/core/transforms_interface/#albumentations.core.transforms_interface.ImageOnlyTransform",[1397,7.881]],["text/api_reference/core/transforms_interface/#albumentations.core.transforms_interface.ImageOnlyTransform",[6,0.309,84,1.241,96,1.822]],["title/api_reference/core/transforms_interface/#albumentations.core.transforms_interface.NoOp",[1398,6.091]],["text/api_reference/core/transforms_interface/#albumentations.core.transforms_interface.NoOp",[1386,8.772]],["title/api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple",[1399,7.881]],["text/api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple",[61,2.572,70,1.48,83,2.441,98,1.195,193,3.388,200,2.445,206,1.37,291,4.287,292,2.74,297,3.136,322,5.397,408,1.437,409,4.711,415,2.873,580,4.344,584,2.809,642,4.875,702,5.567,953,4.978,973,5.397,1012,8.796,1078,5.761,1328,5.987,1388,7.054,1389,7.054,1390,8.734,1391,7.056,1392,7.054]],["title/api_reference/imgaug/",[128,4.96]],["text/api_reference/imgaug/",[84,1.247,396,8.727]],["title/api_reference/imgaug/transforms/",[84,0.865,1400,5.66]],["text/api_reference/imgaug/transforms/",[3,3.54,6,0.331,10,0.668,12,1.981,19,3.983,40,1.182,61,0.809,70,1.508,72,3.222,77,1.87,82,2.138,84,1.216,87,2.445,89,0.735,96,1.508,98,1.217,126,2.28,139,4.284,162,2.515,200,2.012,206,1.395,207,2.077,208,5.081,209,1.168,210,4.566,216,1.114,217,1.7,252,1.168,254,2.765,272,2.697,278,2.147,280,1.968,283,3.97,297,1.415,299,3.88,306,2.406,308,1.921,312,2.703,318,2.182,324,1.751,355,3.851,368,2.495,369,3.2,402,1.127,404,4.67,406,2.089,407,0.835,408,1.463,414,1.821,418,2.577,419,2.448,420,0.935,451,2.526,456,2.329,478,3.036,485,2.881,486,2.987,529,1.247,535,3.797,559,4.808,577,2.216,580,1.366,606,3.879,611,2.697,612,1.933,649,1.501,651,2.464,659,2.252,677,3.672,679,3.692,683,3.672,697,2.119,700,1.189,800,3.155,812,2.15,814,3.787,828,4.296,879,1.698,881,1.39,914,1.533,915,3.477,936,1.825,954,2.845,955,3.036,964,1.265,969,1.751,974,1.968,1053,4.257,1091,2.075,1113,1.968,1129,2.624,1224,3.155,1229,1.968,1240,1.968,1343,1.812,1400,2.075,1401,2.436,1402,3.718,1403,2.436,1404,2.436,1405,3.477,1406,2.219,1407,2.436,1408,2.436,1409,2.436,1410,2.436,1411,4.082,1412,3.155,1413,4.489,1414,3.478,1415,3.478,1416,4.257,1417,4.257,1418,4.257,1419,2.436,1420,5.615,1421,3.478,1422,2.219,1423,4.489,1424,3.478,1425,2.219,1426,2.436,1427,2.436,1428,1.302,1429,2.219,1430,2.219,1431,1.968,1432,2.219,1433,2.436,1434,1.883,1435,3.718,1436,3.718,1437,2.075,1438,2.219,1439,1.968,1440,2.219,1441,2.436,1442,3.569,1443,5.615,1444,2.219,1445,2.219,1446,2.436,1447,3.718,1448,3.718,1449,1.968,1450,1.812,1451,5.615,1452,2.219,1453,2.219,1454,1.968,1455,1.968,1456,2.219,1457,2.219,1458,1.968,1459,2.219]],["title/api_reference/imgaug/transforms/#transforms-imgaugtransforms",[84,0.865,1400,5.66]],["text/api_reference/imgaug/transforms/#transforms-imgaugtransforms",[]],["title/api_reference/imgaug/transforms/#albumentations.imgaug.transforms",[1460,7.881]],["text/api_reference/imgaug/transforms/#albumentations.imgaug.transforms",[]],["title/api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise",[1461,5.338]],["text/api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise",[6,0.315,70,1.511,82,2.043,84,1.03,87,2.337,96,1.511,98,1.22,200,2.017,206,1.399,207,1.694,408,1.467,414,2.337,419,2.607,451,4.657,485,2.862,486,3.042,529,4.049,606,3.889,659,5.36,677,5.512,683,7.327,697,5.043,800,3.163,879,5.512,915,6.411,954,5.512,955,5.883,964,4.106,1402,7.204,1405,6.411,1406,7.204]],["title/api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine",[1462,6.714]],["text/api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine",[6,0.265,70,1.565,72,2.97,77,2.498,82,2.115,84,1.291,87,2.419,96,1.565,98,1.263,126,3.544,200,2.088,206,1.448,207,1.754,283,5.274,297,2.2,408,1.519,485,2.229,486,2.369,559,5.764,577,4.446,611,4.191,800,3.274,812,4.313,828,5.706,1224,6.33,1412,6.33,1413,6.977,1414,6.977,1415,6.977,1416,6.617,1417,6.617,1418,6.617]],["title/api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss",[1463,6.091]],["text/api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss",[6,0.363,70,1.48,82,2.0,84,1.008,87,2.288,96,1.48,98,1.195,200,1.975,206,1.37,207,1.659,272,4.195,278,3.156,299,4.875,355,5.379,408,1.437,418,3.599,419,2.553,485,3.045,486,3.014,535,4.771,800,3.097,814,5.567,936,3.462,1053,7.749,1420,9.914,1421,6.599,1422,7.054,1423,8.17,1424,6.599,1425,7.054]],["title/api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective",[1464,6.714]],["text/api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective",[6,0.251,10,1.268,40,3.759,70,1.48,72,2.809,77,2.414,82,2.0,84,1.248,87,2.288,96,1.48,98,1.195,126,3.352,200,1.975,206,1.37,207,1.659,297,2.081,408,1.437,451,3.713,456,5.472,485,2.835,486,2.774,559,4.499,606,3.808,611,3.964,700,2.794,800,3.097,914,4.875,915,5.111,954,5.397,955,5.761,974,6.258,1229,6.258,1343,5.761,1416,6.258,1417,6.258,1418,6.258,1428,4.141,1429,7.054,1430,7.054,1431,6.258,1432,7.054]],["title/api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine",[1465,6.091]],["text/api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine",[6,0.233,61,2.393,70,1.377,72,2.613,77,2.307,82,1.861,84,1.193,87,2.128,96,1.377,98,1.111,126,3.118,200,1.837,206,1.274,207,1.543,283,6.49,297,1.935,368,4.339,369,4.757,402,3.332,408,1.336,414,2.707,418,2.704,485,2.743,486,3.069,559,6.361,577,3.912,580,4.041,606,3.542,611,3.688,800,2.881,812,3.795,828,7.023,1113,5.822,1224,5.569,1240,5.822,1412,5.569,1413,7.807,1414,6.138,1415,6.138,1416,5.822,1417,5.822,1418,5.822,1435,6.562,1436,6.562,1438,6.562,1439,5.822,1440,6.562]],["title/api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen",[1466,6.091]],["text/api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen",[6,0.369,70,1.468,82,1.984,84,1.0,87,2.269,96,1.468,98,1.185,200,1.959,206,1.359,207,1.645,272,4.173,278,3.13,299,4.835,355,5.821,408,1.425,418,3.581,419,2.532,485,3.038,486,3.002,535,4.732,800,3.071,814,6.857,936,3.434,1421,6.544,1423,6.544,1424,6.544,1442,6.463,1443,9.885,1444,6.996,1445,6.996]],["title/api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels",[1467,6.714]],["text/api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels",[6,0.308,10,1.252,70,1.462,82,2.458,84,1.239,87,2.811,89,2.308,96,1.462,98,1.18,200,1.95,206,1.353,207,1.638,252,3.667,278,3.117,280,6.181,318,4.09,368,3.622,406,4.87,407,2.621,408,1.419,414,2.26,485,2.59,486,2.997,649,4.712,800,3.058,881,4.365,1405,5.048,1447,6.967,1448,6.967,1449,6.181,1450,5.689,1451,9.871,1452,6.967,1453,6.967,1454,6.181,1455,6.181,1456,6.967,1457,6.967,1458,6.181,1459,6.967]],["title/api_reference/pytorch/",[128,4.96]],["text/api_reference/pytorch/",[84,1.247,397,8.727]],["title/api_reference/pytorch/transforms/",[84,0.865,1468,5.66]],["text/api_reference/pytorch/transforms/",[3,4.267,6,0.317,10,1.111,12,1.743,19,4.944,21,0.95,49,4.03,70,1.296,72,3.198,77,2.61,84,1.148,98,1.046,139,4.787,192,4.876,193,3.856,206,1.2,207,1.453,208,4.369,209,4.226,217,1.9,286,3.293,292,2.4,299,4.27,306,2.274,308,1.746,331,3.627,404,5.218,408,1.635,414,2.004,420,1.554,433,4.015,451,4.226,501,4.015,612,3.212,659,3.743,688,2.186,964,3.522,1104,4.876,1191,3.174,1308,5.321,1309,4.015,1370,5.244,1468,5.78,1469,6.784,1470,8.03,1471,8.03,1472,7.511,1473,6.179,1474,6.179,1475,6.179,1476,6.784]],["title/api_reference/pytorch/transforms/#transforms-pytorchtransforms",[84,0.865,1468,5.66]],["text/api_reference/pytorch/transforms/#transforms-pytorchtransforms",[]],["title/api_reference/pytorch/transforms/#albumentations.pytorch.transforms",[1477,7.881]],["text/api_reference/pytorch/transforms/#albumentations.pytorch.transforms",[]],["title/api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor",[197,5.664]],["text/api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor",[6,0.318,10,1.318,19,4.062,49,4.488,70,1.538,77,2.667,84,1.047,98,1.241,192,5.784,193,3.52,206,1.423,286,3.906,292,2.847,331,4.302,408,1.821,414,2.377,433,4.763,451,3.857,501,4.763,659,4.44,688,2.593,964,4.177,1104,5.784,1191,3.765,1308,5.925,1309,4.763,1370,6.22,1470,7.329,1471,7.329,1472,6.856,1473,7.329,1474,7.329,1475,7.329]],["title/api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensorV2",[198,5.492]],["text/api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensorV2",[6,0.306,21,1.322,77,2.375,193,4.128,1472,8.039]],["title/examples/",[54,1.727,83,2.094]],["text/examples/",[1,1.954,3,2.822,6,0.337,7,1.418,10,1.766,46,4.46,48,3.561,49,3.136,51,2.908,52,4.155,53,2.264,54,2.308,59,3.985,74,2.467,77,1.727,78,2.327,79,2.312,81,3.136,83,2.161,86,2.177,88,2.356,89,2.07,90,3.847,91,2.597,92,3.561,93,3.511,94,3.667,95,3.847,96,1.311,97,3.042,98,1.37,99,4.318,100,4.93,101,4.318,102,4.78,103,3.914,104,3.914,105,3.172,106,4.06,107,4.06,108,3.784,109,3.209,110,4.06,111,4.225]],["title/examples/#list-of-examples",[54,1.727,83,2.094]],["text/examples/#list-of-examples",[1,1.959,6,0.339,7,1.42,10,1.772,46,4.479,48,3.601,49,3.171,51,2.941,52,4.185,53,2.28,54,1.803,59,4.029,74,2.495,77,1.746,78,2.339,79,2.325,81,3.171,86,2.202,88,2.369,89,2.093,90,3.891,91,2.626,92,3.601,93,3.55,94,3.708,95,3.891,96,1.325,97,3.064,98,1.38,99,4.366,100,4.985,101,4.366,102,4.833,103,3.958,104,3.958,105,3.207,106,4.105,107,4.105,108,3.827,109,3.245,110,4.105,111,4.273]],["title/examples/example/",[6,0.132,7,0.759,88,0.977,89,1.232,90,2.29]],["text/examples/example/",[1,0.948,3,3.132,6,0.362,7,1.079,8,0.761,10,1.155,12,1.688,21,1.616,42,1.309,43,1.107,44,1.13,45,1.169,54,0.665,56,1.485,61,0.849,74,0.92,84,1.177,88,1.688,89,2.128,90,2.384,96,0.489,97,1.456,109,1.196,166,2.324,172,1.989,179,1.182,180,2.037,183,2.307,193,1.859,207,2.137,217,2.15,229,1.367,246,1.902,247,1.687,248,1.9,249,1.9,250,2.879,251,1.869,252,2.615,253,1.257,254,1.732,255,1.782,256,1.687,257,1.543,258,1.647,259,1.575,260,2.831,261,1.902,262,2.175,278,1.042,281,1.623,292,1.504,300,1.118,306,2.441,307,3.015,308,2.228,312,3.418,313,2.324,344,0.876,347,1.84,371,2.308,375,2.469,380,1.543,384,2.239,399,1.107,420,0.586,429,1.003,505,3.161,572,1.182,578,1.095,584,1.978,585,2.244,590,2.565,629,2.361,651,2.565,670,5.178,679,1.766,690,1.367,700,2.35,795,3.513,796,1.879,797,2.469,820,2.066,827,1.095,873,1.513,874,2.23,936,1.143,982,3.564,1112,2.737,1129,3.513,1175,1.367,1178,3.055,1191,1.196,1221,3.285,1222,3.161,1223,2.962,1246,2.805,1254,1.143,1261,1.838,1262,1.732,1264,2.565,1266,1.211,1275,2.239,1283,3.009,1332,3.397,1461,1.732,1463,1.976,1465,1.976,1466,1.976,1478,3.397,1479,2.618,1480,3.835,1481,2.618,1482,1.575,1483,1.575,1484,1.575,1485,1.575,1486,3.36,1487,1.575,1488,1.575,1489,1.575,1490,1.575,1491,3.36,1492,1.513,1493,1.575,1494,1.575,1495,2.618,1496,1.575,1497,1.575,1498,1.575,1499,1.575,1500,1.575,1501,1.575,1502,3.009,1503,1.575,1504,1.575,1505,1.575,1506,1.575,1507,1.575,1508,1.575,1509,1.411,1510,1.434,1511,2.81,1512,1.156,1513,1.388,1514,1.309,1515,1.196,1516,1.309,1517,1.13,1518,1.107,1519,2.066,1520,1.169,1521,1.169,1522,3.043,1523,2.345,1524,1.485,1525,7.195,1526,4.912,1527,2.329,1528,4.968,1529,2.329,1530,1.715,1531,2.737]],["title/examples/example/#defining-a-simple-augmentation-pipeline-for-image-augmentation",[6,0.132,7,0.759,88,0.977,89,1.232,90,2.29]],["text/examples/example/#defining-a-simple-augmentation-pipeline-for-image-augmentation",[1,1.615,7,1.144,10,1.522,42,4.757,54,2.416,88,2.224,89,2.805,90,5.214]],["title/examples/example/#import-the-required-libraries",[8,1.709,183,1.878,344,1.968]],["text/examples/example/#import-the-required-libraries",[1,1.599,183,3.77,700,2.681,874,3.23,1509,5.077,1510,5.162,1511,4.069]],["title/examples/example/#define-the-visualization-function",[89,1.733,347,1.937,629,1.606]],["text/examples/example/#define-the-visualization-function",[6,0.329,12,1.51,21,1.519,217,2.185,306,1.796,308,2.273,371,5.505,399,3.674,578,3.636,629,2.373,1511,4.794,1512,3.837,1513,4.609,1514,4.344,1515,3.972,1516,4.344]],["title/examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space",[6,0.095,193,1.289,249,1.317,250,1.996,252,2.289,260,1.529,505,3.551,1517,1.303]],["text/examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space",[1,1.308,6,0.376,10,1.542,12,1.676,21,1.44,74,2.707,193,3.292,217,2.215,229,4.024,246,5.597,247,4.966,248,4.21,249,3.364,250,5.098,251,3.523,252,3.608,253,3.7,254,5.098,255,5.244,256,4.966,257,4.542,258,4.847,259,4.636,260,4.89,261,5.597,306,1.993,308,2.036,629,2.104,874,3.608,1518,3.257,1519,6.081,1520,3.44,1521,3.44]],["title/examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image",[6,0.174,7,0.662,89,1.033,172,1.601,292,1.211,827,1.466]],["text/examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image",[6,0.369,7,1.055,10,1.064,21,1.429,43,2.813,44,2.874,45,2.971,61,2.159,84,1.417,88,2.051,96,1.242,97,2.937,109,3.041,166,3.136,180,4.109,207,1.836,217,2.346,262,4.387,300,2.843,306,2.384,308,2.231,429,2.551,629,2.682,679,3.562,690,3.475,700,2.971,796,3.79,936,2.905,1175,3.475,1191,3.041,1254,2.905,1283,3.586,1522,4.078,1523,4.729,1524,3.776,1525,8.689,1526,6.626]],["title/examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image",[6,0.155,7,0.588,10,0.482,88,0.705,89,0.889,172,1.379,281,0.877,292,1.042]],["text/examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image",[6,0.31,12,1.811,21,1.668,84,1.112,166,2.366,207,2.353,217,1.841,281,1.924,306,2.483,307,3.791,308,2.243,312,3.83,313,3.126,375,3.758,380,2.627,384,3.407,420,0.997,572,2.013,584,2.346,585,3.176,590,3.904,629,1.809,651,3.904,670,5.84,700,1.885,795,4.972,797,3.758,820,3.517,982,4.793,1112,4.166,1129,4.549,1178,4.649,1221,5.0,1222,4.811,1223,4.508,1246,4.269,1261,3.129,1262,2.949,1264,3.904,1266,2.061,1275,3.407,1283,3.569,1332,4.569,1461,2.949,1463,3.365,1465,3.365,1466,3.365,1522,2.586,1525,7.28,1526,5.0,1527,3.965,1528,7.031,1529,3.965,1530,2.611,1531,4.166]],["title/examples/example_16_bit_tiff/",[6,0.146,91,1.711,92,2.345,93,2.312,94,2.416]],["text/examples/example_16_bit_tiff/",[1,1.106,3,2.907,6,0.359,7,1.041,8,0.763,10,1.384,12,1.821,21,1.516,25,1.547,36,1.312,42,1.312,43,1.11,44,1.134,45,1.172,54,0.666,56,1.489,61,0.851,75,1.737,84,1.142,85,1.121,88,1.69,89,1.649,91,1.613,92,2.837,93,3.258,94,4.838,96,0.814,97,1.46,98,0.395,109,1.2,126,1.11,143,1.517,164,0.732,179,1.186,180,2.042,183,2.31,187,1.172,189,1.294,193,2.784,194,2.122,195,2.211,200,1.801,201,2.479,204,4.099,205,4.436,207,1.879,211,2.313,217,1.74,229,2.278,248,1.146,249,1.904,262,2.18,272,1.121,278,1.045,281,0.763,285,1.438,297,2.271,300,1.121,306,2.373,307,2.165,308,2.085,312,3.182,313,1.558,344,0.878,347,1.843,353,3.44,368,1.214,371,2.313,372,2.35,375,1.489,384,1.35,399,1.11,407,1.46,408,1.31,418,2.051,419,0.845,427,1.186,429,1.006,478,1.907,485,0.698,486,0.742,498,3.442,501,4.181,559,1.489,572,1.186,578,1.098,584,0.93,585,1.753,629,1.975,642,1.614,651,4.263,659,2.35,670,2.244,678,2.886,690,1.371,700,1.854,716,1.579,795,2.743,796,1.134,797,1.489,801,0.865,827,1.098,856,1.489,858,1.692,872,1.787,873,1.517,874,2.479,933,4.224,936,1.146,952,2.072,982,2.389,1023,1.517,1024,1.312,1025,1.517,1027,1.517,1112,1.651,1129,3.518,1175,1.371,1178,1.843,1191,1.2,1221,1.982,1222,1.907,1223,1.787,1251,3.062,1261,1.843,1262,1.737,1264,1.547,1275,1.35,1283,1.414,1285,3.928,1332,2.278,1372,1.737,1478,3.403,1479,2.624,1480,3.842,1481,2.624,1482,1.579,1483,1.579,1484,1.579,1485,1.579,1486,3.366,1487,1.579,1488,1.579,1489,1.579,1490,1.579,1491,3.366,1492,1.517,1493,1.579,1494,1.579,1495,2.624,1496,1.579,1497,1.579,1498,1.579,1499,1.579,1500,1.579,1501,1.579,1502,3.015,1503,1.579,1504,1.579,1505,1.579,1506,1.579,1507,1.579,1508,1.579,1509,2.35,1510,1.438,1511,2.814,1512,1.159,1513,1.392,1514,1.312,1515,1.2,1516,1.312,1517,1.134,1518,1.11,1520,1.172,1521,1.172,1522,2.185,1523,2.35,1524,1.489,1530,1.719,1532,1.907,1533,2.072,1534,1.907,1535,2.335,1536,2.335,1537,1.787,1538,2.687,1539,3.88,1540,2.072,1541,2.335,1542,2.335,1543,2.335,1544,2.335,1545,2.335,1546,2.335,1547,2.335,1548,2.335,1549,2.335,1550,1.737,1551,2.335,1552,2.335,1553,1.787,1554,1.186,1555,2.335,1556,4.977,1557,2.335,1558,1.517,1559,3.88,1560,3.88,1561,3.88,1562,1.787,1563,1.579,1564,2.335,1565,3.88,1566,2.335,1567,2.335,1568,1.907,1569,2.335,1570,2.072,1571,2.335,1572,3.88]],["title/examples/example_16_bit_tiff/#working-with-non-8-bit-images",[6,0.146,91,1.711,92,2.345,93,2.312,94,2.416]],["text/examples/example_16_bit_tiff/#working-with-non-8-bit-images",[6,0.371,7,1.04,10,1.383,42,4.325,54,2.197,92,4.386,93,4.325,94,6.129,96,1.614,204,6.512,205,5.888,229,4.518,372,4.662,1532,6.284,1533,6.827,1534,6.284,1535,7.695,1536,7.695,1537,5.888]],["title/examples/example_16_bit_tiff/#import-the-required-libraries",[8,1.709,183,1.878,344,1.968]],["text/examples/example_16_bit_tiff/#import-the-required-libraries",[1,1.599,183,3.77,700,2.681,874,3.23,1509,5.077,1510,5.162,1511,4.069]],["title/examples/example_16_bit_tiff/#define-the-visualization-function",[89,1.733,347,1.937,629,1.606]],["text/examples/example_16_bit_tiff/#define-the-visualization-function",[6,0.366,10,1.312,12,1.426,21,1.481,217,2.11,297,2.152,306,2.072,308,2.237,371,5.317,399,3.468,501,4.742,578,3.432,629,2.24,716,4.936,1509,4.421,1511,4.675,1512,3.622,1513,4.351,1514,4.101,1515,3.749,1516,4.101,1538,3.939,1539,8.918,1540,6.474]],["title/examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk",[6,0.132,94,2.183,204,2.629,205,2.845,249,1.825,1517,1.805]],["text/examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk",[6,0.363,10,1.273,12,1.711,21,1.527,126,3.366,143,4.603,205,5.42,217,2.249,248,3.477,249,3.477,306,2.034,308,2.067,629,2.175,874,3.826,1518,3.366,1520,3.555,1521,3.555,1538,4.727,1541,7.084,1542,7.084,1543,7.084,1544,7.084,1545,7.084,1546,7.084,1547,7.084,1548,7.084,1549,7.084,1550,5.269,1551,7.084,1552,7.084]],["title/examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images",[6,0.111,7,0.421,88,0.819,89,1.033,91,1.296,94,1.83,204,2.204,205,2.385]],["text/examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images",[1,1.202,6,0.333,7,1.099,10,1.381,12,1.905,21,1.54,25,2.195,36,1.862,43,1.574,44,1.608,45,1.663,61,1.208,75,2.464,84,1.287,85,1.591,88,1.865,89,1.098,92,1.888,93,2.889,94,3.018,96,0.695,97,1.934,98,0.561,109,1.702,164,1.038,180,2.705,187,1.663,189,1.836,193,3.409,194,2.811,195,2.93,200,2.151,201,2.961,207,2.117,211,3.065,217,1.216,229,1.945,262,2.889,272,1.591,281,1.082,285,2.04,297,2.502,300,1.591,306,2.395,307,2.739,308,2.069,312,3.524,313,2.064,353,4.353,368,1.722,372,2.007,375,2.113,384,1.916,407,1.934,408,1.565,418,2.595,419,1.199,427,1.682,429,1.428,478,2.705,485,0.99,486,1.052,498,4.56,501,4.612,559,2.113,572,1.682,585,2.322,629,1.578,642,2.29,651,5.091,659,3.114,670,2.973,678,3.823,690,1.945,700,2.015,795,3.635,796,1.608,797,2.113,801,1.227,827,1.558,856,2.113,858,2.4,872,2.535,933,5.345,936,1.626,952,2.939,982,3.166,1023,2.153,1024,1.862,1025,2.153,1027,2.153,1112,2.343,1129,4.202,1175,1.945,1178,2.614,1191,1.702,1221,2.812,1222,2.705,1223,2.535,1251,4.056,1261,2.614,1262,2.464,1264,2.195,1275,1.916,1283,2.007,1285,4.97,1332,3.018,1372,2.464,1522,2.765,1523,3.114,1524,2.113,1530,2.278,1553,2.535,1554,1.682,1555,3.313,1556,6.298,1557,3.313,1558,2.153,1559,5.14,1560,5.14,1561,5.14,1562,2.535,1563,2.241,1564,3.313,1565,5.14,1566,3.313,1567,3.313,1568,2.705,1569,3.313,1570,2.939,1571,3.313,1572,5.14]],["title/examples/example_bboxes/",[1,0.595,7,0.421,10,0.56,46,1.466,51,1.451,52,1.601,78,0.809,79,0.804]],["text/examples/example_bboxes/",[1,0.982,2,1.271,3,3.21,6,0.334,7,1.067,8,0.391,10,0.925,12,2.044,21,1.464,28,0.763,33,1.333,36,0.672,43,1.029,44,0.58,45,0.6,46,0.562,50,1.112,51,0.557,52,0.614,54,1.04,55,1.541,56,0.763,61,0.79,69,1.075,70,0.454,72,1.451,74,0.855,78,2.295,79,2.345,80,0.826,83,0.749,84,1.336,86,0.755,88,1.352,89,1.705,91,0.497,96,0.623,97,0.815,98,0.714,105,0.607,109,0.614,126,0.568,161,0.988,164,2.832,166,0.87,167,0.672,168,1.456,179,0.607,180,1.14,183,1.515,206,0.232,207,1.379,211,0.713,217,2.178,222,0.749,223,0.777,224,1.172,227,0.568,251,2.207,252,1.917,257,0.792,262,1.217,264,0.915,267,0.736,272,1.04,278,0.535,281,1.681,292,0.841,294,0.654,297,1.391,298,0.702,300,0.574,304,0.933,305,1.112,306,2.449,307,0.52,308,2.194,309,1.215,311,1.215,312,2.422,313,3.221,331,1.271,344,0.45,347,1.349,348,0.915,356,1.2,364,3.62,382,2.513,399,1.029,401,2.875,406,2.649,407,1.116,410,2.676,411,2.676,412,1.018,413,1.018,414,1.529,415,1.198,419,1.318,420,1.186,427,0.607,429,1.818,430,2.684,437,1.61,452,1.528,477,3.677,479,3.675,482,0.998,483,0.866,484,1.507,486,0.688,525,3.497,575,0.681,578,0.562,584,0.862,619,0.763,629,2.119,642,0.826,657,1.657,658,1.657,659,2.206,679,1.662,690,0.702,697,1.234,700,1.508,796,1.441,813,1.569,827,0.562,846,0.845,873,0.777,874,2.48,900,0.889,936,0.587,943,0.866,953,1.691,982,2.243,989,0.866,1011,1.657,1026,2.138,1052,0.777,1175,0.702,1191,1.112,1214,0.845,1215,0.845,1216,0.845,1243,1.769,1254,1.063,1266,0.622,1282,0.749,1283,1.312,1304,2.768,1328,1.015,1329,0.943,1428,0.702,1478,2.476,1479,1.464,1480,2.414,1481,1.464,1482,0.809,1483,0.809,1484,0.809,1485,0.809,1486,2.007,1487,0.809,1488,0.809,1489,0.809,1490,0.809,1491,2.007,1492,0.777,1493,0.809,1494,0.809,1495,1.464,1496,0.809,1497,0.809,1498,0.809,1499,0.809,1500,0.809,1501,0.809,1502,2.206,1503,0.809,1504,0.809,1505,0.809,1506,0.809,1507,0.809,1508,0.809,1509,1.312,1510,0.736,1511,1.768,1512,1.473,1513,0.713,1514,0.672,1515,0.614,1516,0.672,1517,0.58,1518,0.568,1520,0.6,1521,0.6,1522,1.852,1523,1.312,1524,0.763,1538,1.966,1554,1.507,1573,1.195,1574,1.195,1575,1.061,1576,2.423,1577,1.768,1578,0.976,1579,1.768,1580,3.742,1581,2.342,1582,1.657,1583,0.792,1584,1.768,1585,2.423,1586,0.976,1587,1.768,1588,1.768,1589,0.976,1590,1.464,1591,0.976,1592,1.061,1593,1.061,1594,1.061,1595,1.061,1596,0.976,1597,0.976,1598,5.269,1599,3.798,1600,0.713,1601,0.976,1602,0.557,1603,0.792,1604,1.061,1605,1.061,1606,1.061,1607,1.252,1608,1.531,1609,1.838,1610,1.061,1611,1.061,1612,1.061,1613,1.061,1614,1.061,1615,1.061,1616,1.061,1617,1.061,1618,1.061,1619,1.061,1620,1.496,1621,1.531,1622,0.809,1623,0.866,1624,1.061,1625,0.792,1626,2.404,1627,3.064,1628,1.195,1629,1.381,1630,1.496,1631,1.928,1632,0.672,1633,0.866,1634,1.061,1635,1.195,1636,4.183,1637,0.724,1638,2.968,1639,1.061,1640,1.195]],["title/examples/example_bboxes/#using-albumentations-to-augment-bounding-boxes-for-object-detection-tasks",[1,0.595,7,0.421,10,0.56,46,1.466,51,1.451,52,1.601,78,0.809,79,0.804]],["text/examples/example_bboxes/#using-albumentations-to-augment-bounding-boxes-for-object-detection-tasks",[]],["title/examples/example_bboxes/#import-the-required-libraries",[8,1.709,183,1.878,344,1.968]],["text/examples/example_bboxes/#import-the-required-libraries",[1,1.575,183,3.753,700,2.642,874,3.182,1509,5.816,1510,5.086,1511,4.009,1573,8.259,1574,8.259]],["title/examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image",[6,0.111,72,1.241,78,0.809,79,0.804,89,1.033,224,1.231,347,1.154,629,0.957]],["text/examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image",[6,0.24,12,2.13,21,1.48,78,0.957,79,0.951,164,1.156,166,1.481,217,2.276,252,3.951,257,2.444,306,2.397,308,2.299,312,3.314,347,1.366,348,2.822,399,2.652,401,2.83,410,4.139,411,4.139,412,2.625,413,2.625,414,2.752,415,1.213,419,2.02,420,1.404,437,4.151,525,5.537,578,1.735,584,1.469,619,2.352,629,2.067,657,4.27,658,4.27,659,4.548,697,3.181,827,1.735,874,3.395,943,2.672,953,3.837,982,2.272,1511,3.268,1512,3.341,1513,2.199,1514,2.073,1515,1.895,1516,2.073,1538,3.013,1575,3.272,1576,5.498,1577,4.557,1578,3.012,1579,4.557,1580,7.154,1581,5.313,1582,4.27,1583,2.444,1584,4.557,1585,5.498,1586,3.012,1587,4.557,1588,4.557,1589,3.012,1590,3.775,1591,3.012,1592,3.272,1593,3.272,1594,3.272,1595,3.272,1596,3.012,1597,3.012,1598,4.407,1599,3.437,1600,2.199,1601,3.012]],["title/examples/example_bboxes/#get-an-image-and-annotations-for-it",[6,0.215,223,3.932]],["text/examples/example_bboxes/#get-an-image-and-annotations-for-it",[6,0.343,10,1.492,28,5.294,54,2.369,79,2.14,430,4.029,1554,4.214,1602,3.863,1603,5.499,1604,7.363,1605,7.363]],["title/examples/example_bboxes/#load-the-image-from-the-disk",[6,0.186,105,2.656,1517,2.539]],["text/examples/example_bboxes/#load-the-image-from-the-disk",[6,0.356,12,1.56,21,1.54,217,2.227,306,2.187,308,2.047,874,3.857,1518,3.795,1520,4.008,1521,4.008,1606,7.085]],["title/examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels",[72,1.351,78,0.88,79,0.874,89,1.124,224,1.339,452,1.422,1554,1.722]],["text/examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels",[2,3.575,6,0.217,10,1.592,12,2.017,21,1.223,33,3.751,36,3.422,43,2.894,61,2.221,69,3.022,70,1.278,72,3.168,78,2.528,79,2.512,161,3.629,164,2.492,166,2.446,206,1.183,224,2.405,227,2.894,251,2.992,297,1.796,306,2.058,309,2.032,311,2.032,313,2.446,331,3.575,401,2.032,410,2.779,411,2.779,430,2.956,452,3.336,629,1.87,900,4.53,1428,3.575,1478,3.575,1502,3.689,1538,4.294,1598,4.669,1599,3.751,1607,3.522,1608,4.306,1609,5.168,1610,5.403,1611,5.403,1612,5.403,1613,5.403,1614,5.403,1615,5.403,1616,5.403,1617,5.403,1618,5.403,1619,5.403,1620,5.497,1621,5.624,1622,4.119,1623,4.413]],["title/examples/example_bboxes/#visuaize-the-original-image-with-bounding-boxes",[6,0.146,78,1.068,79,1.061,272,1.976,1624,3.651]],["text/examples/example_bboxes/#visuaize-the-original-image-with-bounding-boxes",[6,0.298,12,1.995,217,1.983,308,1.823,401,2.797,629,2.573,1598,4.92,1599,5.162]],["title/examples/example_bboxes/#define-an-augmentation-pipeline",[7,0.707,88,1.374,89,1.733]],["text/examples/example_bboxes/#define-an-augmentation-pipeline",[2,3.03,6,0.339,7,1.101,10,0.928,12,1.716,21,1.465,33,3.179,43,2.453,44,2.506,45,2.591,50,2.652,61,1.882,69,2.561,70,1.083,74,2.811,78,2.114,79,2.101,84,1.421,88,2.141,91,2.146,96,1.083,97,2.678,98,0.874,109,2.652,164,2.887,167,2.901,180,3.746,207,1.214,217,2.078,251,2.678,262,4.0,281,2.325,292,2.005,300,2.479,306,2.345,308,2.071,313,3.272,331,3.03,364,5.156,382,2.751,401,2.719,427,2.621,429,2.224,430,2.506,452,2.165,629,2.185,642,3.567,679,2.355,690,3.03,700,2.606,796,2.506,936,2.533,1175,3.03,1191,2.652,1254,2.533,1304,3.03,1522,3.577,1523,4.312,1524,3.292,1598,5.156,1599,3.179,1608,3.65,1609,4.38,1625,3.42,1626,2.942,1627,3.354]],["title/examples/example_bboxes/#another-example",[54,1.727,1329,4.775]],["text/examples/example_bboxes/#another-example",[6,0.326,12,1.884,21,1.484,84,1.455,164,3.121,207,1.537,217,2.282,251,2.459,281,2.135,306,2.457,308,2.215,313,3.679,364,3.837,382,3.484,401,3.057,430,3.173,629,2.007,679,2.982,700,2.091,796,3.173,1283,3.96,1304,3.837,1522,2.87,1598,5.662,1599,4.026,1626,3.726,1627,4.248]],["title/examples/example_bboxes/#define-a-complex-augmentation-piepline",[7,0.622,89,1.526,264,3.524,1628,4.606]],["text/examples/example_bboxes/#define-a-complex-augmentation-piepline",[6,0.308,12,1.965,21,1.547,84,1.409,164,2.887,207,2.166,217,2.18,251,2.181,281,1.894,306,2.5,307,2.522,308,2.221,312,3.466,313,3.7,364,3.404,382,3.09,401,2.885,430,2.815,629,1.78,679,3.514,700,1.855,796,2.815,982,4.743,1026,5.076,1214,4.1,1215,4.1,1216,4.1,1254,2.846,1266,3.014,1282,3.633,1283,3.512,1304,3.404,1522,2.545,1598,5.408,1599,3.571,1627,3.768]],["title/examples/example_bboxes/#min_area-and-min_visibility-parameters",[98,0.886,477,3.118,479,3.277]],["text/examples/example_bboxes/#min_area-and-min_visibility-parameters",[1,1.664,6,0.33,7,1.416,12,1.522,54,2.223,55,2.496,78,2.718,79,2.756,83,2.695,96,1.634,98,0.999,168,4.28,211,3.517,297,2.297,305,4.002,356,4.318,406,4.901,407,2.219,415,2.562,419,2.135,420,1.484,477,5.199,479,5.464,482,3.59,484,4.428,813,5.644,989,4.274,1011,5.96,1052,3.833,1191,3.03,1629,4.968,1630,5.383,1631,5.062,1632,3.315,1633,4.274,1634,5.233]],["title/examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty",[7,0.458,88,0.891,89,1.124,297,1.0,477,2.022,486,1.077,1635,3.391]],["text/examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty",[1,1.166,6,0.316,10,1.099,12,1.954,21,1.365,55,2.586,78,1.586,79,1.576,84,1.43,98,1.035,164,3.057,207,1.437,217,2.099,251,2.299,267,3.764,281,1.996,292,2.374,294,3.343,297,1.803,306,2.467,308,2.121,309,2.039,311,2.039,313,3.564,364,3.588,382,3.257,401,2.961,419,2.212,420,1.537,429,2.634,430,2.967,477,3.644,479,3.829,486,1.942,629,1.876,1243,3.644,1304,3.588,1554,3.103,1598,5.521,1599,3.764,1626,3.484,1627,3.972,1636,7.073]],["title/examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area",[7,0.622,88,1.21,89,1.526,477,2.746]],["text/examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area",[6,0.312,12,1.978,21,1.348,55,2.522,78,2.035,79,2.022,84,1.42,86,2.078,164,3.032,207,1.402,217,2.074,251,2.243,281,1.947,297,1.758,304,2.569,306,2.473,308,2.104,309,1.989,311,1.989,313,3.521,364,3.499,382,3.177,401,2.925,406,3.35,407,2.951,420,1.499,429,2.569,430,2.894,477,4.676,629,1.83,846,4.215,1243,3.554,1304,3.499,1328,5.059,1598,5.468,1599,3.671,1626,3.398,1627,3.874,1636,6.959,1637,3.611,1638,8.766,1639,5.289]],["title/examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility",[7,0.622,88,1.21,89,1.526,479,2.886]],["text/examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility",[1,1.087,6,0.305,12,1.957,21,1.319,50,2.928,55,2.412,78,2.225,79,2.211,80,3.94,84,1.402,86,1.987,98,0.965,126,2.709,164,2.988,207,1.34,217,2.028,222,3.571,251,2.144,272,2.738,281,1.862,298,3.346,304,2.456,306,2.456,308,2.073,309,1.902,311,1.902,313,3.443,364,4.47,382,3.038,401,2.861,406,4.279,415,1.875,420,1.434,429,3.281,430,2.767,477,3.398,479,5.372,483,4.13,575,3.249,629,1.75,982,3.511,1026,3.346,1243,3.398,1304,3.346,1598,5.372,1599,3.511,1607,3.296,1626,3.249,1627,3.704,1631,3.704,1636,6.755,1640,5.7]],["title/examples/example_bboxes2/",[1,0.595,10,0.56,46,1.466,52,1.601,74,1.231,78,0.809,79,0.804,95,1.92]],["text/examples/example_bboxes2/",[1,0.572,2,1.012,3,3.422,6,0.348,7,0.798,8,0.563,10,1.208,12,2.06,21,1.403,28,1.1,33,1.062,36,0.969,42,0.969,43,1.889,44,0.837,45,0.865,46,0.811,52,0.886,54,1.135,55,1.268,56,1.1,61,1.093,69,0.856,70,0.362,72,1.892,74,0.681,78,2.264,79,2.25,84,1.291,88,1.045,89,1.317,95,2.449,96,0.362,97,1.127,98,0.508,105,0.875,109,0.886,161,1.367,164,2.559,166,1.204,179,0.875,180,1.577,183,1.933,200,0.483,206,0.582,217,2.195,223,1.12,224,1.57,227,0.819,251,1.496,252,2.501,257,1.142,262,1.684,272,2.836,273,0.819,278,0.771,281,0.563,297,0.508,300,0.828,306,2.393,308,2.184,309,1.327,311,1.327,312,2.386,313,2.942,331,1.012,344,0.649,347,1.76,348,1.319,356,2.204,364,1.012,382,0.919,399,1.424,401,2.871,406,2.234,410,3.213,411,3.213,412,1.41,413,1.41,414,1.915,415,0.567,419,1.085,420,0.754,427,0.875,429,0.743,430,1.93,437,2.229,452,1.667,482,2.48,503,3.138,506,1.191,525,4.199,578,0.811,584,1.194,585,0.779,619,1.1,629,2.249,657,2.293,658,2.293,659,2.879,690,1.012,697,1.708,700,2.149,796,0.837,827,0.811,873,1.12,874,2.918,900,1.282,936,0.846,943,1.249,953,2.266,964,0.983,982,1.062,1011,1.319,1024,0.969,1052,1.12,1063,1.319,1129,1.639,1175,1.012,1191,0.886,1243,1.028,1268,0.856,1278,3.443,1304,1.012,1355,1.282,1428,1.012,1478,3.159,1479,2.027,1480,3.149,1481,2.027,1482,1.166,1483,1.166,1484,1.166,1485,1.166,1486,2.689,1487,1.166,1488,1.166,1489,1.166,1490,1.166,1491,2.689,1492,1.12,1493,1.166,1494,1.166,1495,2.027,1496,1.166,1497,1.166,1498,1.166,1499,1.166,1500,1.166,1501,1.166,1502,2.879,1503,1.166,1504,1.166,1505,1.166,1506,1.166,1507,1.166,1508,1.166,1509,1.044,1510,1.062,1511,2.307,1512,1.973,1513,1.028,1514,0.969,1515,0.886,1516,0.969,1517,0.837,1518,0.819,1520,0.865,1521,0.865,1522,2.592,1523,1.816,1524,1.1,1538,2.565,1554,1.522,1575,1.529,1576,3.247,1577,2.447,1578,1.408,1579,2.447,1580,4.775,1581,3.138,1582,2.293,1583,1.142,1584,2.447,1585,3.247,1586,1.408,1587,2.447,1588,2.447,1589,1.408,1590,2.027,1591,1.408,1592,1.529,1593,1.529,1594,1.529,1595,1.529,1596,1.408,1597,1.408,1598,5.051,1599,3.907,1600,1.028,1601,1.408,1602,0.802,1603,1.142,1604,1.529,1605,1.529,1606,1.529,1607,0.997,1608,1.219,1609,1.463,1610,1.529,1611,1.529,1612,1.529,1613,1.529,1614,1.529,1615,1.529,1616,1.529,1617,1.529,1618,1.529,1619,1.529,1620,2.071,1621,2.119,1622,1.166,1623,1.249,1624,1.529,1625,1.142,1626,0.983,1627,1.12,1631,1.12,1641,1.529,1642,1.724,1643,1.463,1644,1.408,1645,1.724,1646,1.724,1647,1.724]],["title/examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes",[1,0.595,10,0.56,46,1.466,52,1.601,74,1.231,78,0.809,79,0.804,95,1.92]],["text/examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes",[6,0.353,7,1.059,10,1.409,42,4.405,54,2.237,55,3.317,78,2.416,79,2.401,84,1.331,95,4.827,206,1.522,272,4.471,356,4.345,482,3.612,1243,4.673,1268,3.89,1278,5.679,1631,5.093]],["title/examples/example_bboxes2/#import-the-required-libraries",[8,1.709,183,1.878,344,1.968]],["text/examples/example_bboxes2/#import-the-required-libraries",[1,1.599,183,3.77,700,2.681,874,3.23,1509,5.077,1510,5.162,1511,4.069]],["title/examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image",[6,0.111,72,1.241,78,0.809,79,0.804,89,1.033,224,1.231,347,1.154,629,0.957]],["text/examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image",[6,0.24,12,2.13,21,1.48,78,0.957,79,0.951,164,1.156,166,1.481,217,2.276,252,3.951,257,2.444,306,2.397,308,2.299,312,3.314,347,1.366,348,2.822,399,2.652,401,2.83,410,4.139,411,4.139,412,2.625,413,2.625,414,2.752,415,1.213,419,2.02,420,1.404,437,4.151,525,5.537,578,1.735,584,1.469,619,2.352,629,2.067,657,4.27,658,4.27,659,4.548,697,3.181,827,1.735,874,3.395,943,2.672,953,3.837,982,2.272,1511,3.268,1512,3.341,1513,2.199,1514,2.073,1515,1.895,1516,2.073,1538,3.013,1575,3.272,1576,5.498,1577,4.557,1578,3.012,1579,4.557,1580,7.154,1581,5.313,1582,4.27,1583,2.444,1584,4.557,1585,5.498,1586,3.012,1587,4.557,1588,4.557,1589,3.012,1590,3.775,1591,3.012,1592,3.272,1593,3.272,1594,3.272,1595,3.272,1596,3.012,1597,3.012,1598,4.407,1599,3.437,1600,2.199,1601,3.012]],["title/examples/example_bboxes2/#get-an-image-and-annotations-for-it",[6,0.215,223,3.932]],["text/examples/example_bboxes2/#get-an-image-and-annotations-for-it",[6,0.343,10,1.492,28,5.294,54,2.369,79,2.14,430,4.029,1554,4.214,1602,3.863,1603,5.499,1604,7.363,1605,7.363]],["title/examples/example_bboxes2/#load-the-image-from-the-disk",[6,0.186,105,2.656,1517,2.539]],["text/examples/example_bboxes2/#load-the-image-from-the-disk",[6,0.356,12,1.56,21,1.54,217,2.227,306,2.187,308,2.047,874,3.857,1518,3.795,1520,4.008,1521,4.008,1606,7.085]],["title/examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels",[72,1.351,78,0.88,79,0.874,89,1.124,224,1.339,452,1.422,1554,1.722]],["text/examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels",[2,3.575,6,0.217,10,1.592,12,2.017,21,1.223,33,3.751,36,3.422,43,2.894,61,2.221,69,3.022,70,1.278,72,3.168,78,2.528,79,2.512,161,3.629,164,2.492,166,2.446,206,1.183,224,2.405,227,2.894,251,2.992,297,1.796,306,2.058,309,2.032,311,2.032,313,2.446,331,3.575,401,2.032,410,2.779,411,2.779,430,2.956,452,3.336,629,1.87,900,4.53,1428,3.575,1478,3.575,1502,3.689,1538,4.294,1598,4.669,1599,3.751,1607,3.522,1608,4.306,1609,5.168,1610,5.403,1611,5.403,1612,5.403,1613,5.403,1614,5.403,1615,5.403,1616,5.403,1617,5.403,1618,5.403,1619,5.403,1620,5.497,1621,5.624,1622,4.119,1623,4.413]],["title/examples/example_bboxes2/#visuaize-the-image-with-bounding-boxes",[6,0.164,78,1.195,79,1.188,1624,4.086]],["text/examples/example_bboxes2/#visuaize-the-image-with-bounding-boxes",[6,0.298,12,1.995,217,1.983,308,1.823,401,2.797,629,2.573,1598,4.92,1599,5.162]],["title/examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image",[6,0.121,10,0.61,78,0.88,79,0.874,95,2.089,272,1.629,1278,2.457]],["text/examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image",[6,0.312,7,0.961,55,3.01,78,2.58,79,2.455,84,1.017,98,1.487,272,4.573,306,1.653,309,2.374,311,2.374,356,4.866,406,5.351,427,3.612,482,4.582,503,6.928,506,4.916,700,2.275,964,4.054,1011,5.443,1024,3.998,1052,4.623,1063,5.443,1129,3.89,1278,5.154,1355,5.291,1641,6.311,1642,7.113,1643,6.037,1644,5.809]],["title/examples/example_bboxes2/#define-an-augmentation-pipeline",[7,0.707,88,1.374,89,1.733]],["text/examples/example_bboxes2/#define-an-augmentation-pipeline",[12,1.896,21,1.493,84,1.061,164,2.824,217,1.757,251,2.793,281,2.425,306,2.471,308,2.11,309,2.478,311,2.478,364,4.359,382,3.957,430,3.605,503,5.86,1129,4.061,1278,5.38,1304,4.359,1598,4.359,1626,4.232,1627,4.825,1645,7.425,1646,7.425]],["title/examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes",[6,0.146,7,0.556,78,1.068,79,1.061,200,1.152]],["text/examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes",[6,0.359,7,1.103,10,1.14,12,1.764,21,0.975,43,3.013,44,3.078,45,3.183,61,2.312,84,1.469,88,2.145,96,1.33,97,3.072,109,3.257,164,2.83,180,4.298,217,2.137,262,4.589,300,3.045,306,2.216,308,1.964,313,3.627,401,3.013,429,2.732,629,2.507,690,3.722,700,2.889,796,3.078,936,3.112,1175,3.722,1191,3.257,1522,3.965,1523,4.946,1524,4.044,1598,5.302,1599,3.905]],["title/examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds",[43,1.767,54,1.061,273,1.767,700,1.189,1522,1.632,1625,2.464]],["text/examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds",[6,0.358,12,1.968,21,1.247,84,1.513,164,3.156,217,2.383,306,2.413,308,2.19,313,4.045,401,3.361,585,2.833,629,2.489,700,2.593,1522,3.559,1598,5.913,1599,4.993,1647,6.27]],["title/examples/example_kaggle_salt/",[1,0.785,10,0.74,46,1.935,48,2.345,49,2.065]],["text/examples/example_kaggle_salt/",[1,0.312,3,3.107,6,0.353,7,1.234,8,0.288,10,0.606,12,2.053,21,1.517,40,0.47,43,0.778,44,0.428,45,0.442,46,0.414,48,0.502,49,0.442,56,0.562,61,0.321,74,0.348,77,2.687,84,0.936,88,0.43,89,0.292,92,2.406,93,1.61,96,0.343,97,0.862,109,0.453,161,0.747,164,2.729,166,3.52,179,0.831,180,0.861,181,1.217,183,1.21,200,0.458,201,0.631,207,1.992,216,0.442,217,2.329,242,0.639,249,0.432,262,0.92,272,1.618,278,0.732,281,0.748,284,0.584,286,0.47,293,0.525,300,0.423,301,0.488,303,1.681,304,0.987,306,2.518,307,1.836,308,2.216,309,0.956,311,0.956,312,2.695,313,1.15,316,0.623,322,0.674,324,1.292,344,0.616,347,0.849,358,1.937,368,0.851,375,2.436,399,0.419,408,0.333,410,1.307,411,1.307,412,1.078,413,1.078,419,2.233,420,1.972,427,0.447,429,0.38,442,0.387,443,0.391,475,0.584,482,1.056,484,0.447,486,0.28,497,3.025,509,0.782,529,1.61,535,1.55,575,0.502,578,0.414,581,0.596,584,1.956,585,1.294,590,1.518,609,1.704,610,1.808,612,1.489,629,2.111,677,1.753,679,3.065,690,0.517,697,2.177,700,1.666,740,4.01,796,1.636,812,0.51,834,1.704,835,1.704,863,0.782,873,0.573,874,1.104,877,1.462,894,2.797,930,0.782,936,0.432,951,2.192,953,0.933,959,2.578,981,1.808,985,0.655,1112,1.62,1153,3.473,1175,0.517,1191,0.453,1193,1.753,1243,1.366,1246,1.186,1249,2.64,1254,1.125,1264,2.531,1265,0.674,1266,0.458,1267,0.72,1268,0.437,1271,1.292,1275,2.209,1276,0.748,1279,2.393,1288,2.436,1332,1.681,1428,0.517,1434,1.945,1437,0.824,1442,0.655,1478,1.681,1479,1.107,1480,1.898,1481,1.107,1482,0.596,1483,0.596,1484,0.596,1485,0.596,1486,1.55,1487,0.596,1488,0.596,1489,0.596,1490,0.596,1491,1.55,1492,1.489,1493,0.596,1494,0.596,1495,1.107,1496,0.596,1497,0.596,1498,0.596,1499,0.596,1500,0.596,1501,0.596,1502,1.388,1503,0.596,1504,0.596,1505,0.596,1506,0.596,1507,0.596,1508,0.596,1509,0.534,1510,0.543,1511,1.112,1512,0.437,1514,0.92,1515,0.841,1516,2.146,1517,0.428,1518,0.778,1522,2.156,1523,0.991,1524,0.562,1532,0.72,1533,1.452,1537,1.252,1538,0.476,1550,0.655,1563,0.596,1600,1.708,1621,0.623,1629,1.044,1648,0.881,1649,0.881,1650,0.881,1651,0.881,1652,4.452,1653,4.452,1654,4.911,1655,1.336,1656,4.679,1657,1.452,1658,2.339,1659,0.881,1660,0.881,1661,0.748,1662,2.13,1663,5.199,1664,4.01,1665,4.01,1666,0.782,1667,1.637,1668,0.881,1669,1.292,1670,1.637,1671,1.637,1672,0.881,1673,0.748,1674,0.881,1675,1.637,1676,1.637,1677,0.881,1678,1.637,1679,5.213,1680,3.949,1681,3.949,1682,2.864,1683,2.864,1684,2.431,1685,2.541,1686,2.864,1687,2.864,1688,1.531,1689,0.881,1690,0.782,1691,0.881,1692,0.881,1693,0.881,1694,0.674,1695,1.389,1696,0.881,1697,0.782,1698,0.881,1699,1.637,1700,0.881,1701,0.881,1702,2.339,1703,0.72,1704,1.531,1705,1.637,1706,1.637,1707,1.637,1708,1.637,1709,0.881,1710,1.637,1711,1.637,1712,0.881,1713,1.637,1714,1.637,1715,2.033,1716,1.186,1717,0.881,1718,1.637,1719,1.637,1720,1.637,1721,1.637,1722,1.637,1723,1.637,1724,0.655,1725,1.637,1726,1.637,1727,0.748,1728,1.637,1729,1.637,1730,0.748,1731,1.336,1732,1.389,1733,1.637,1734,1.637,1735,0.881,1736,0.623,1737,1.637,1738,1.637]],["title/examples/example_kaggle_salt/#using-albumentations-for-a-semantic-segmentation-task",[1,0.785,10,0.74,46,1.935,48,2.345,49,2.065]],["text/examples/example_kaggle_salt/#using-albumentations-for-a-semantic-segmentation-task",[6,0.301,10,1.522,21,1.302,201,3.262,1648,8.465,1649,8.465,1650,8.465,1651,8.465]],["title/examples/example_kaggle_salt/#import-the-required-libraries",[8,1.709,183,1.878,344,1.968]],["text/examples/example_kaggle_salt/#import-the-required-libraries",[1,1.599,183,3.77,700,2.681,874,3.23,1509,5.077,1510,5.162,1511,4.069]],["title/examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks",[6,0.146,77,1.137,89,1.363,347,1.524,629,1.263]],["text/examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks",[6,0.31,12,2.096,21,1.559,77,2.41,84,0.917,93,4.624,161,2.928,164,3.104,166,3.978,217,2.343,272,3.082,306,2.33,308,2.256,399,2.117,419,3.531,420,2.491,584,2.995,612,4.278,629,1.368,1511,3.115,1512,2.211,1514,3.606,1515,3.296,1516,5.104,1621,3.15,1652,4.983,1653,4.983,1654,9.758,1655,5.24,1656,8.276,1657,5.693,1658,6.719]],["title/examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk",[6,0.164,77,1.273,249,2.261,1517,2.236]],["text/examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk",[6,0.284,12,1.56,21,1.54,77,2.207,217,2.227,306,2.187,308,2.047,874,3.857,1518,4.474,1659,7.986,1660,7.986,1661,6.777]],["title/examples/example_kaggle_salt/#original-image",[6,0.215,272,2.906]],["text/examples/example_kaggle_salt/#original-image",[6,0.358,7,1.059,10,0.862,12,2.007,21,1.431,40,2.556,74,1.894,77,2.643,84,0.685,164,2.119,166,3.146,200,1.893,207,1.128,217,2.202,242,3.475,306,2.423,308,2.024,324,5.337,344,1.804,358,4.574,368,3.516,408,1.377,420,1.206,427,2.435,475,3.178,484,2.435,486,1.523,497,5.524,575,2.733,584,1.91,585,3.055,629,2.076,740,7.81,834,3.567,835,3.567,894,6.167,985,3.567,1428,2.815,1437,4.486,1537,5.174,1538,2.589,1652,3.178,1653,3.178,1662,5.03,1663,6.947,1664,3.916,1665,3.916,1666,4.255,1667,6.762,1668,4.796,1669,5.337,1670,6.762,1671,6.762,1672,4.796,1673,4.07,1674,4.796,1675,6.762,1676,6.762,1677,4.796,1678,6.762,1679,4.395,1680,7.327,1681,7.327]],["title/examples/example_kaggle_salt/#centercrop-and-crop",[482,2.789,1243,3.608]],["text/examples/example_kaggle_salt/#centercrop-and-crop",[6,0.324,7,1.19,10,0.733,12,2.012,21,1.493,77,2.517,84,0.583,164,2.473,166,3.169,207,1.415,217,2.402,272,1.959,278,1.825,306,2.501,308,2.207,309,1.361,311,1.361,410,3.601,411,3.601,412,3.362,413,3.362,419,2.856,420,1.514,482,2.773,497,4.86,584,2.396,585,2.719,629,1.847,740,4.914,894,2.703,951,6.038,953,3.43,1243,3.587,1492,3.91,1600,4.705,1652,3.987,1653,3.987,1662,4.476,1663,7.634,1664,5.838,1665,5.838,1679,5.128,1680,7.382,1681,7.382,1682,7.892,1683,7.892,1684,6.698,1685,7.002,1686,7.892,1687,7.892]],["title/examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4",[84,0.531,92,2.119,1688,3.478,1689,3.718,1690,3.299,1691,3.718]],["text/examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4",[6,0.355,7,1.195,12,1.987,21,0.933,77,2.592,84,1.134,97,2.283,164,2.486,166,3.187,207,1.427,217,2.092,272,2.914,284,4.021,293,3.618,301,3.363,304,2.615,306,2.424,308,1.923,420,1.526,509,5.383,529,4.459,590,4.021,629,1.863,863,5.383,1254,4.34,1275,3.509,1288,3.87,1532,4.955,1533,7.04,1563,4.104,1652,4.021,1653,4.021,1679,5.157,1692,6.068,1693,6.068,1694,4.643,1695,5.15,1696,6.068,1697,5.383,1698,6.068,1699,7.935,1700,6.068,1701,6.068,1702,4.955,1703,4.955,1704,5.676,1705,7.935,1706,7.935]],["title/examples/example_kaggle_salt/#verticalflip",[1288,4.578]],["text/examples/example_kaggle_salt/#verticalflip",[6,0.353,7,1.284,12,1.94,21,1.09,77,2.744,164,2.744,166,3.517,207,1.666,217,2.249,306,2.492,308,2.067,420,1.782,629,2.175,1288,4.518,1652,4.694,1653,4.694,1679,5.69,1707,8.756,1708,8.756]],["title/examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees",[216,1.565,316,2.204,419,1.128,581,2.108,812,1.803,930,2.766,1275,1.803,1709,3.117]],["text/examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees",[6,0.363,7,1.332,12,1.996,21,1.184,77,2.823,164,2.887,166,3.7,207,1.811,217,2.332,306,2.526,308,2.144,420,1.937,442,2.545,443,2.569,578,2.727,590,5.103,629,2.364,1275,3.353,1652,5.103,1653,5.103,1679,5.987,1704,5.423,1710,7.701,1711,7.701,1712,5.798,1713,7.701,1714,7.701]],["title/examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion",[84,0.531,92,2.119,375,2.372,1249,2.57,1264,2.464,1715,3.299]],["text/examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion",[6,0.348,7,1.261,10,1.222,12,1.667,21,1.046,43,3.231,44,3.301,45,3.413,61,2.479,84,1.333,88,2.243,92,3.875,96,1.426,97,3.211,109,3.493,180,4.493,181,6.349,201,2.62,262,4.797,286,3.624,300,3.265,303,3.991,375,4.337,429,2.93,629,2.087,690,3.991,700,2.73,936,3.337,1175,3.991,1191,3.493,1249,4.699,1264,4.505,1522,3.747,1523,5.171,1524,4.337,1550,5.057,1695,5.77,1715,6.032,1716,6.185,1717,6.799]],["title/examples/example_kaggle_salt/#elastictransform",[1249,4.96]],["text/examples/example_kaggle_salt/#elastictransform",[6,0.342,7,1.234,12,2.018,21,1.274,77,2.658,164,2.596,166,3.327,207,1.525,217,2.276,306,2.503,308,2.092,420,1.632,535,4.387,609,4.825,610,5.119,629,1.991,677,4.963,697,4.722,700,2.075,796,3.149,1153,6.455,1249,4.483,1434,5.505,1522,2.848,1652,4.298,1653,4.298,1679,5.384,1718,8.285,1719,8.285]],["title/examples/example_kaggle_salt/#griddistortion",[375,4.578]],["text/examples/example_kaggle_salt/#griddistortion",[6,0.35,7,1.27,12,1.923,21,1.326,77,2.72,164,2.702,166,3.463,207,1.625,217,2.329,306,2.482,308,2.14,375,4.408,420,1.738,629,2.121,700,2.21,796,3.355,1522,3.034,1652,4.579,1653,4.579,1679,5.603,1720,8.623,1721,8.623]],["title/examples/example_kaggle_salt/#opticaldistortion",[1264,4.756]],["text/examples/example_kaggle_salt/#opticaldistortion",[6,0.346,7,1.252,12,2.002,21,1.3,77,2.689,164,2.648,166,3.394,207,1.574,217,2.302,306,2.501,308,2.116,420,1.683,584,2.665,629,2.054,679,3.053,700,2.14,796,3.249,981,5.281,1112,4.732,1264,4.434,1522,2.938,1652,4.434,1653,4.434,1679,5.491,1722,8.45,1723,8.45]],["title/examples/example_kaggle_salt/#randomsizedcrop",[1279,4.497]],["text/examples/example_kaggle_salt/#randomsizedcrop",[6,0.338,7,1.214,12,2.002,21,1.247,77,2.625,84,1.159,164,2.54,166,3.256,207,1.474,217,2.247,304,3.493,306,2.491,308,2.138,309,2.092,311,2.092,312,2.359,420,1.577,629,1.925,700,2.006,796,3.044,877,3.999,1193,4.798,1268,3.112,1276,5.321,1279,5.079,1522,2.753,1652,4.155,1653,4.155,1663,5.12,1664,5.12,1665,5.12,1679,5.268,1702,6.62,1724,4.664,1725,8.106,1726,8.106]],["title/examples/example_kaggle_salt/#lets-try-to-combine-different-transformations",[43,1.955,84,0.588,179,2.089,303,2.416,1702,3.36]],["text/examples/example_kaggle_salt/#lets-try-to-combine-different-transformations",[6,0.343,7,1.302,12,1.882,21,1.481,77,2.662,92,3.711,164,2.602,166,3.335,207,1.953,217,2.279,281,2.127,306,2.475,307,2.832,308,2.164,312,2.45,629,1.999,679,3.789,700,2.083,796,3.161,1275,3.766,1288,4.153,1442,4.843,1522,2.858,1652,4.315,1653,4.315,1679,5.397,1688,6.091,1727,5.526,1728,8.305,1729,8.305]],["title/examples/example_kaggle_salt/#lets-add-non-rigid-transformations-and-randomsizedcrop",[84,0.531,92,2.119,303,2.183,529,2.089,1279,2.33,1715,3.299]],["text/examples/example_kaggle_salt/#lets-add-non-rigid-transformations-and-randomsizedcrop",[]],["title/examples/example_kaggle_salt/#medium-augmentations",[7,0.818,1730,5.136]],["text/examples/example_kaggle_salt/#medium-augmentations",[6,0.303,7,1.059,12,2.037,21,1.565,77,2.351,164,2.119,166,2.716,207,2.335,217,2.013,281,1.567,306,2.533,307,3.407,308,2.213,309,1.6,311,1.6,312,3.674,313,2.716,358,3.244,375,3.059,420,1.97,535,3.244,609,3.567,610,3.785,629,1.472,677,3.669,679,4.364,697,3.854,700,1.534,834,3.567,835,3.567,877,3.059,959,3.669,981,3.785,1112,3.391,1153,5.539,1193,3.669,1249,3.314,1264,3.178,1275,2.773,1279,3.005,1288,3.059,1332,3.97,1434,4.07,1522,2.105,1652,3.178,1653,3.178,1663,3.916,1664,5.522,1665,5.522,1679,4.395,1731,3.916,1732,4.07,1733,6.762,1734,6.762]],["title/examples/example_kaggle_salt/#lets-add-non-spatial-stransformations",[92,2.345,303,2.416,529,2.312,1629,2.625,1735,4.115]],["text/examples/example_kaggle_salt/#lets-add-non-spatial-stransformations",[6,0.307,7,1.003,12,2.043,21,1.579,77,2.388,84,0.622,92,2.48,96,0.913,164,1.977,166,2.534,207,2.373,217,2.044,281,1.422,306,2.526,307,3.228,308,2.232,309,1.452,311,1.452,312,3.707,313,2.534,322,3.33,358,2.943,375,2.776,420,1.587,535,2.943,584,1.733,609,3.237,610,3.434,629,1.336,677,3.33,679,4.24,697,3.596,700,1.392,834,3.237,835,3.237,877,2.776,959,6.227,981,3.434,1112,3.077,1153,5.248,1193,3.33,1246,4.571,1249,3.008,1264,2.884,1265,3.33,1266,2.263,1267,3.554,1271,4.979,1275,2.517,1279,2.727,1288,2.776,1332,3.704,1434,3.693,1522,1.91,1629,2.776,1652,2.884,1653,2.884,1663,3.554,1664,5.152,1665,5.152,1679,4.1,1731,3.554,1732,3.693,1736,3.077,1737,6.309,1738,6.309]],["title/examples/example_keypoints/",[1,0.879,7,0.622,10,0.828,53,1.289]],["text/examples/example_keypoints/",[1,0.748,3,3.155,6,0.353,7,0.982,8,0.553,10,0.844,12,1.974,21,1.531,33,1.043,42,0.951,43,0.804,44,0.822,45,0.85,53,2.766,54,0.842,56,1.08,57,1.295,61,1.076,69,1.464,70,0.355,82,0.48,83,0.586,84,1.422,85,1.417,88,1.398,89,1.555,90,1.043,93,1.658,96,0.619,97,1.11,109,0.87,161,0.772,164,2.817,166,0.68,179,0.86,180,1.553,181,1.259,183,1.911,207,1.82,216,0.85,217,2.319,223,1.1,251,2.627,252,0.891,256,1.227,262,1.658,264,1.295,267,1.043,272,0.813,273,0.804,278,0.757,281,2.052,294,0.926,300,0.813,302,2.456,306,2.473,307,1.283,308,2.312,309,1.308,310,1.061,311,1.308,312,3.476,313,2.805,318,1.732,331,1.732,344,0.637,347,1.452,348,1.295,363,4.163,384,0.979,399,0.804,407,1.11,414,0.957,419,1.698,420,1.47,429,0.729,442,2.06,443,2.08,452,1.644,566,1.336,578,1.844,584,0.674,629,1.204,659,1.787,679,2.666,690,0.994,700,2.01,796,2.278,873,1.1,874,2.05,936,0.831,969,1.336,1026,0.994,1175,0.994,1191,0.87,1193,1.295,1211,1.584,1243,1.009,1254,1.448,1266,0.88,1268,0.84,1279,1.061,1282,1.061,1283,1.025,1288,1.08,1305,4.249,1315,4.413,1332,0.994,1478,2.755,1479,1.995,1480,3.109,1481,1.995,1482,1.145,1483,1.145,1484,1.145,1485,1.145,1486,2.652,1487,1.145,1488,1.145,1489,1.145,1490,1.145,1491,2.652,1492,1.1,1493,1.145,1494,1.145,1495,1.995,1496,1.145,1497,1.145,1498,1.145,1499,1.145,1500,1.145,1501,1.145,1502,2.375,1503,1.145,1504,1.145,1505,1.145,1506,1.145,1507,1.145,1508,1.145,1509,1.025,1510,1.043,1511,2.278,1512,0.84,1513,1.009,1514,0.951,1515,0.87,1516,0.951,1518,0.804,1520,0.85,1521,0.85,1522,2.565,1523,1.787,1524,1.08,1530,2.784,1538,0.914,1554,0.86,1590,1.145,1600,1.009,1608,1.197,1625,1.122,1626,3.33,1629,1.08,1739,1.437,1740,2.95,1741,5.704,1742,2.95,1743,1.197,1744,1.693,1745,2.617,1746,1.693,1747,1.693,1748,1.693,1749,1.693,1750,1.693,1751,1.693,1752,1.693,1753,1.693,1754,1.693,1755,1.693,1756,1.502,1757,1.693,1758,1.693,1759,3.921,1760,3.478,1761,1.693,1762,1.693,1763,5.321,1764,1.693,1765,1.693,1766,1.693,1767,2.617,1768,3.4,1769,1.693]],["title/examples/example_keypoints/#using-albumentations-to-augment-keypoints",[1,0.879,7,0.622,10,0.828,53,1.289]],["text/examples/example_keypoints/#using-albumentations-to-augment-keypoints",[1,1.448,6,0.27,7,1.374,10,1.365,42,4.266,53,2.846,57,5.809,69,3.768,82,2.153,83,2.627,84,1.085,85,4.387,96,1.593,181,5.647,267,4.676,294,4.152,302,6.139,331,4.457,407,3.436,1629,4.842,1739,6.443]],["title/examples/example_keypoints/#import-the-required-libraries",[8,1.709,183,1.878,344,1.968]],["text/examples/example_keypoints/#import-the-required-libraries",[1,1.599,183,3.77,700,2.681,874,3.23,1509,5.077,1510,5.162,1511,4.069]],["title/examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image",[6,0.146,53,1.152,89,1.363,347,1.524,629,1.263]],["text/examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image",[6,0.346,12,2.072,21,1.497,53,2.222,93,4.459,161,2.769,217,2.303,252,3.194,256,4.397,306,2.261,308,2.321,312,2.985,348,4.643,399,2.884,414,2.574,419,3.394,420,1.526,442,3.484,443,3.517,566,4.789,578,2.854,659,4.807,874,2.338,1511,4.293,1512,3.011,1513,3.618,1514,3.41,1515,3.117,1516,3.41,1538,3.275,1590,4.104,1600,3.618,1740,7.935,1741,4.955,1742,7.935,1743,4.291]],["title/examples/example_keypoints/#get-an-image-and-annotations-for-it",[6,0.215,223,3.932]],["text/examples/example_keypoints/#get-an-image-and-annotations-for-it",[6,0.356,12,1.56,21,1.54,217,2.227,306,2.187,308,2.047,874,3.857,1518,3.795,1520,4.008,1521,4.008,1744,7.986]],["title/examples/example_keypoints/#define-keypoints",[53,1.694,89,2.005]],["text/examples/example_keypoints/#define-keypoints",[10,1.004,12,2.101,33,3.441,53,2.541,61,2.037,69,2.773,70,1.172,89,1.851,164,1.751,166,2.244,251,2.826,306,1.298,308,2.339,312,4.046,318,4.41,331,3.28,442,3.298,443,3.329,452,3.56,578,3.533,1026,3.28,1211,5.226,1315,3.702,1554,2.837,1608,3.951,1745,6.665,1746,5.587,1747,5.587,1748,5.587,1749,5.587,1750,5.587,1751,5.587,1752,5.587,1753,5.587,1754,5.587,1755,5.587,1756,4.957,1757,5.587,1758,5.587,1759,8.488,1760,7.53,1761,5.587,1762,5.587,1763,9.471,1764,5.587,1765,5.587,1766,5.587]],["title/examples/example_keypoints/#visualize-the-original-image-with-keypoints",[6,0.164,53,1.289,272,2.212,629,1.414]],["text/examples/example_keypoints/#visualize-the-original-image-with-keypoints",[6,0.304,12,1.67,53,2.394,217,2.023,308,1.859,1741,6.983]],["title/examples/example_keypoints/#define-a-simple-augmentation-pipeline",[7,0.622,88,1.21,89,1.526,90,2.837]],["text/examples/example_keypoints/#define-a-simple-augmentation-pipeline",[6,0.339,12,1.395,21,1.467,53,2.671,84,1.462,164,2.989,207,1.68,217,2.257,251,2.687,281,2.333,306,2.451,308,2.224,313,2.869,363,4.733,420,1.797,1254,3.506,1305,4.831,1315,4.733,1530,3.166,1626,4.072,1741,5.833]],["title/examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines",[7,0.556,54,1.175,88,1.081,273,1.955,1625,2.727]],["text/examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines",[6,0.362,7,0.721,10,0.625,12,1.784,21,1.564,43,1.652,44,1.688,45,1.745,53,2.783,61,1.268,84,1.51,88,1.402,96,0.729,97,2.007,109,1.786,164,3.115,180,2.808,207,1.847,216,1.745,217,2.405,251,2.955,262,2.998,281,2.566,300,1.67,306,2.515,308,2.304,309,1.78,311,1.78,313,3.154,363,5.204,420,1.633,429,1.498,629,1.067,679,2.434,690,2.041,700,2.512,796,3.151,936,1.706,1175,2.041,1191,1.786,1243,2.072,1268,1.725,1283,2.106,1288,2.217,1305,5.312,1315,5.204,1522,3.448,1523,3.232,1524,2.217,1530,3.481,1626,4.477,1741,6.414,1767,4.733,1768,3.865]],["title/examples/example_keypoints/#an-example-of-complex-augmentation-pipeline",[7,0.622,54,1.315,88,1.21,264,3.524]],["text/examples/example_keypoints/#an-example-of-complex-augmentation-pipeline",[6,0.307,12,1.795,21,1.588,53,2.412,84,1.367,164,2.402,207,2.314,217,2.264,251,2.166,281,1.881,306,2.498,307,3.334,308,2.268,309,1.921,310,3.608,311,1.921,312,3.701,313,3.461,363,3.816,384,3.33,420,1.448,679,4.192,700,1.842,796,2.795,969,4.544,1193,4.406,1254,2.826,1266,2.994,1279,3.608,1282,3.608,1305,3.895,1315,3.816,1332,3.38,1522,2.528,1530,2.552,1741,4.702,1768,5.555,1769,5.758]],["title/examples/example_multi_target/",[6,0.089,7,0.339,53,0.702,77,0.693,78,0.651,79,0.647,81,1.259,96,0.526,97,1.549,98,0.425]],["text/examples/example_multi_target/",[1,0.981,3,3.393,6,0.36,7,0.96,8,0.799,10,1.072,12,1.798,21,1.52,23,2.235,32,1.773,42,1.375,51,1.139,53,1.847,54,1.468,56,1.56,77,1.963,78,0.635,79,0.631,81,2.994,82,1.459,84,1.315,85,1.175,86,1.793,88,1.734,89,1.336,96,1.252,97,3.23,98,0.683,105,1.242,161,2.722,164,2.459,179,1.242,183,2.55,187,1.228,200,1.44,203,3.02,206,1.281,207,1.552,217,2.229,227,1.916,229,1.436,264,1.872,272,1.175,273,1.163,278,1.095,281,1.949,288,3.281,290,3.805,291,2.524,292,0.95,293,2.404,297,0.722,306,2.38,308,2.22,312,2.244,313,0.982,344,0.92,347,1.905,371,2.404,399,1.163,401,1.991,408,1.215,420,0.615,434,3.085,578,1.151,584,0.974,629,2.636,679,1.84,700,1.29,873,1.59,874,3.228,940,2.787,1129,2.205,1254,1.201,1266,1.272,1282,1.533,1283,1.482,1288,1.56,1311,1.82,1341,1.998,1478,4.169,1479,2.727,1480,3.953,1481,2.727,1482,1.655,1483,1.655,1484,1.655,1485,1.655,1486,3.479,1487,1.655,1488,1.655,1489,1.655,1490,1.655,1491,3.479,1492,1.59,1493,1.655,1494,1.655,1495,2.727,1496,1.655,1497,1.655,1498,1.655,1499,1.655,1500,1.655,1501,1.655,1502,3.997,1503,1.655,1504,1.655,1505,1.655,1506,1.655,1507,1.655,1508,1.655,1509,1.482,1510,1.507,1511,2.896,1512,1.214,1513,1.458,1514,1.375,1515,1.257,1516,1.375,1517,1.188,1518,2.444,1520,2.582,1521,2.582,1522,1.074,1530,3.147,1531,1.73,1558,1.59,1607,1.415,1626,1.394,1770,1.998,1771,2.17,1772,2.446,1773,2.446,1774,2.446,1775,2.446,1776,1.82,1777,2.446,1778,2.446,1779,2.446,1780,7.41,1781,5.966,1782,2.446,1783,4.032,1784,2.446,1785,2.446,1786,2.446,1787,2.446,1788,2.446,1789,2.446,1790,2.446,1791,2.17,1792,2.446,1793,7.58,1794,2.446,1795,2.446,1796,2.787]],["title/examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints",[6,0.089,7,0.339,53,0.702,77,0.693,78,0.651,79,0.647,81,1.259,96,0.526,97,1.549,98,0.425]],["text/examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints",[1,1.396,6,0.333,7,1.124,10,1.606,12,1.626,21,1.126,23,4.056,32,3.894,51,2.502,53,2.501,54,2.089,77,2.583,81,4.176,82,2.36,84,1.046,85,2.581,86,2.551,88,1.412,96,1.535,97,3.627,183,1.93,187,2.698,200,2.049,203,4.885,206,1.735,217,1.272,227,2.554,229,3.155,281,2.39,288,5.307,290,4.668,291,4.084,292,2.088,293,3.204,297,1.585,306,1.249,401,2.981,408,1.819,434,5.599,940,5.058,1311,3.997,1341,4.389,1607,3.108,1770,4.389,1771,4.768,1772,5.374,1773,5.374,1774,5.374,1775,5.374,1776,3.997,1777,5.374,1778,5.374,1779,5.374,1780,4.389,1781,8.933,1782,5.374,1783,7.318,1784,5.374,1785,5.374,1786,5.374,1787,5.374,1788,5.374,1789,5.374,1790,5.374,1791,4.768]],["title/examples/example_multi_target/#import-the-required-libraries",[8,1.709,183,1.878,344,1.968]],["text/examples/example_multi_target/#import-the-required-libraries",[1,1.599,183,3.77,700,2.681,874,3.23,1509,5.077,1510,5.162,1511,4.069]],["title/examples/example_multi_target/#define-a-function-to-visualize-an-image",[6,0.164,89,1.526,347,1.706,629,1.414]],["text/examples/example_multi_target/#define-a-function-to-visualize-an-image",[6,0.329,12,1.51,21,1.519,217,2.185,306,1.796,308,2.273,371,5.505,399,3.674,578,3.636,629,2.373,1511,4.794,1512,3.837,1513,4.609,1514,4.344,1515,3.972,1516,4.344]],["title/examples/example_multi_target/#load-images-from-the-disk",[6,0.186,105,2.656,1517,2.539]],["text/examples/example_multi_target/#load-images-from-the-disk",[6,0.33,12,1.813,21,1.635,217,2.426,306,2.383,308,2.23,874,4.096,1518,4.41,1520,4.657,1521,4.657,1780,7.577,1792,6.718,1793,7.875,1794,6.718,1795,6.718]],["title/examples/example_multi_target/#show-original-images",[6,0.186,42,2.939,272,2.512]],["text/examples/example_multi_target/#show-original-images",[6,0.295,217,2.406,308,2.212,629,3.122,1780,6.777,1793,7.043]],["title/examples/example_multi_target/#define-an-augmentation-pipeline",[7,0.707,88,1.374,89,1.733]],["text/examples/example_multi_target/#define-an-augmentation-pipeline",[6,0.368,7,0.829,12,1.908,21,1.367,84,1.457,86,2.138,88,2.1,96,1.287,97,3.344,98,1.039,161,3.646,164,2.951,200,1.717,206,1.191,207,1.442,217,1.891,227,2.915,281,2.004,290,3.912,293,3.657,306,2.369,308,2.177,420,1.543,629,2.729,1288,3.912,1478,3.601,1502,3.716,1530,3.939,1558,3.986,1626,3.496,1780,7.975,1793,8.288,1796,5.523]],["title/examples/example_multi_target/#an-example-of-more-complex-pipeline",[54,1.315,88,1.21,264,3.524,273,2.189]],["text/examples/example_multi_target/#an-example-of-more-complex-pipeline",[6,0.346,12,1.727,21,1.536,84,1.427,161,3.621,164,2.939,207,2.205,217,2.092,281,1.982,290,3.87,306,2.446,308,2.289,312,3.528,313,2.437,629,2.715,679,3.621,700,1.941,1129,4.34,1254,2.978,1266,3.155,1282,3.802,1283,3.676,1478,3.562,1502,3.676,1522,2.664,1530,3.919,1531,4.291,1780,7.659,1793,7.959]],["title/examples/example_weather_transforms/",[1,0.998,7,0.707,99,3.615]],["text/examples/example_weather_transforms/",[1,0.939,3,3.888,6,0.364,7,0.776,8,0.751,10,0.413,12,1.977,21,1.536,43,1.093,44,1.117,45,1.154,56,1.467,57,1.76,58,1.667,61,0.839,84,1.446,85,1.105,88,1.007,89,0.762,96,0.483,97,1.441,99,2.648,105,1.168,109,1.182,164,2.796,179,1.168,180,2.017,183,2.291,207,1.718,217,2.352,262,2.153,272,1.105,278,1.029,281,2.386,300,1.105,306,2.495,308,2.294,312,1.852,314,1.76,344,0.865,347,1.824,371,1.371,399,1.093,419,2.078,420,2.336,429,0.991,527,3.024,539,1.878,541,1.878,542,1.878,554,1.878,578,1.082,584,0.916,629,2.642,651,2.539,679,2.911,690,1.35,700,2.622,796,3.547,854,3.033,873,1.495,874,2.213,936,1.129,959,2.932,969,3.024,982,1.417,1024,1.293,1146,3.252,1147,3.252,1175,1.35,1180,3.252,1181,3.252,1182,3.252,1183,3.252,1191,1.182,1196,2.041,1197,2.041,1198,2.152,1206,2.041,1207,2.041,1270,4.394,1273,3.129,1277,4.394,1280,3.129,1281,3.129,1478,3.371,1479,2.591,1480,3.806,1481,2.591,1482,1.556,1483,1.556,1484,1.556,1485,1.556,1486,3.33,1487,1.556,1488,1.556,1489,1.556,1490,1.556,1491,3.33,1492,1.495,1493,1.556,1494,1.556,1495,2.591,1496,1.556,1497,1.556,1498,1.556,1499,1.556,1500,1.556,1501,1.556,1502,2.983,1503,1.556,1504,1.556,1505,1.556,1506,1.556,1507,1.556,1508,1.556,1509,1.393,1510,1.417,1511,2.788,1512,1.141,1513,1.371,1514,1.293,1515,1.182,1516,1.293,1517,1.117,1518,1.093,1520,1.154,1521,1.154,1522,3.488,1523,2.321,1524,1.467,1530,3.238,1626,4.164,1797,2.3]],["title/examples/example_weather_transforms/#weather-augmentations-in-albumentations",[1,0.998,7,0.707,99,3.615]],["text/examples/example_weather_transforms/#weather-augmentations-in-albumentations",[1,1.631,7,1.155,57,6.542,58,6.196,85,4.107,99,5.91]],["title/examples/example_weather_transforms/#import-the-required-libraries",[8,1.709,183,1.878,344,1.968]],["text/examples/example_weather_transforms/#import-the-required-libraries",[1,1.599,183,3.77,700,2.681,874,3.23,1509,5.077,1510,5.162,1511,4.069]],["title/examples/example_weather_transforms/#define-a-function-to-visualize-an-image",[6,0.164,89,1.526,347,1.706,629,1.414]],["text/examples/example_weather_transforms/#define-a-function-to-visualize-an-image",[6,0.329,12,1.51,21,1.519,217,2.185,306,1.796,308,2.273,371,4.609,399,3.674,578,3.636,629,2.373,1024,4.344,1511,4.794,1512,3.837,1513,4.609,1514,4.344,1515,3.972,1516,4.344]],["title/examples/example_weather_transforms/#load-the-image-from-the-disk",[6,0.186,105,2.656,1517,2.539]],["text/examples/example_weather_transforms/#load-the-image-from-the-disk",[6,0.356,12,1.56,21,1.54,217,2.227,306,2.187,308,2.047,874,3.857,1518,3.795,1520,4.008,1521,4.008,1797,7.986]],["title/examples/example_weather_transforms/#visualize-the-original-image",[6,0.186,272,2.512,629,1.606]],["text/examples/example_weather_transforms/#visualize-the-original-image",[6,0.307,217,2.044,308,1.878,629,2.652]],["title/examples/example_weather_transforms/#randomrain",[1273,5.861]],["text/examples/example_weather_transforms/#randomrain",[6,0.357,7,1.085,10,1.111,12,1.743,21,1.372,43,2.936,44,3.0,45,3.101,61,2.253,84,1.434,88,2.11,96,1.296,97,3.021,109,3.174,164,2.516,180,4.226,207,1.453,217,2.11,262,4.512,281,2.018,300,2.967,306,2.373,308,2.129,314,4.728,420,2.02,429,2.662,539,5.046,541,5.046,542,5.046,629,2.465,690,3.627,700,2.853,796,3.0,854,3.805,936,3.032,1175,3.627,1191,3.174,1273,5.046,1522,3.916,1523,4.864,1524,3.941,1530,2.738,1626,3.522]],["title/examples/example_weather_transforms/#randomsnow",[1280,5.861]],["text/examples/example_weather_transforms/#randomsnow",[6,0.339,12,1.86,21,1.465,84,1.421,164,2.751,207,1.673,217,2.253,281,2.324,306,2.449,308,2.221,420,1.789,554,5.809,629,2.184,679,3.246,700,2.275,796,3.453,982,4.381,1196,6.311,1197,6.311,1198,6.654,1280,5.809,1522,3.123,1530,3.152,1626,4.054]],["title/examples/example_weather_transforms/#randomsunflare",[1281,5.861]],["text/examples/example_weather_transforms/#randomsunflare",[6,0.337,12,1.934,21,1.456,84,1.415,164,2.73,207,1.652,217,2.24,281,2.295,306,2.409,308,2.255,312,2.643,419,3.152,420,2.191,629,2.157,679,3.975,700,2.247,796,3.41,1206,6.232,1207,6.232,1281,5.737,1522,3.084,1530,3.113,1626,4.004]],["title/examples/example_weather_transforms/#randomshadow",[1277,5.492]],["text/examples/example_weather_transforms/#randomshadow",[6,0.332,12,2.01,21,1.435,84,1.398,164,2.674,207,1.599,217,2.207,281,2.221,306,2.453,308,2.237,312,2.558,419,2.46,420,2.536,629,2.087,679,3.102,700,2.175,796,3.301,854,4.187,1180,5.77,1181,5.77,1182,5.77,1183,5.77,1277,5.202,1522,2.985,1530,3.013,1626,3.875]],["title/examples/example_weather_transforms/#randomfog",[1270,5.492]],["text/examples/example_weather_transforms/#randomfog",[6,0.339,12,1.86,21,1.465,84,1.421,164,2.751,207,1.673,217,2.253,281,2.324,306,2.449,308,2.221,420,1.789,527,5.614,629,2.184,651,4.714,700,2.275,796,3.453,959,5.443,969,5.614,1146,6.037,1147,6.037,1270,5.443,1522,3.123,1530,3.152,1626,4.054]],["title/examples/example_weather_transforms/#randomshadow_1",[1277,5.492]],["text/examples/example_weather_transforms/#randomshadow_1",[6,0.332,12,2.01,21,1.435,84,1.398,164,2.674,207,1.599,217,2.207,281,2.221,306,2.453,308,2.237,312,2.558,419,2.46,420,2.536,629,2.087,679,3.102,700,2.175,796,3.301,854,4.187,1180,5.77,1181,5.77,1182,5.77,1183,5.77,1277,5.202,1522,2.985,1530,3.013,1626,3.875]],["title/examples/example_weather_transforms/#randomfog_1",[1270,5.492]],["text/examples/example_weather_transforms/#randomfog_1",[6,0.339,12,1.86,21,1.465,84,1.421,164,2.751,207,1.673,217,2.253,281,2.324,306,2.449,308,2.221,420,1.789,527,5.614,629,2.184,651,4.714,700,2.275,796,3.453,959,5.443,969,5.614,1146,6.037,1147,6.037,1270,5.443,1522,3.123,1530,3.152,1626,4.054]],["title/examples/migrating_from_torchvision_to_albumentations/",[1,0.998,100,4.128,101,3.615]],["text/examples/migrating_from_torchvision_to_albumentations/",[1,1.352,3,2.688,6,0.347,7,0.804,8,0.571,10,0.976,12,1.988,18,1.867,21,1.573,40,0.931,42,0.982,54,0.865,56,1.114,57,1.337,72,1.6,74,1.586,84,1.382,88,0.797,91,0.726,96,0.636,97,1.511,100,1.379,101,4.111,126,0.83,135,1.182,161,1.833,164,2.744,166,2.565,179,0.887,183,2.428,193,2.606,194,3.254,195,3.391,196,1.379,197,1.379,198,2.32,201,0.673,216,0.877,217,1.979,224,3.579,248,1.971,249,1.488,250,1.299,252,2.114,260,0.996,270,2.144,278,0.782,281,1.773,300,0.839,305,2.788,306,2.419,307,1.747,308,2.142,310,4.615,312,2.238,313,2.958,344,0.657,347,1.776,358,1.182,384,1.01,399,3.367,415,1.957,420,1.01,429,0.753,451,2.524,486,0.555,505,2.476,584,1.91,585,1.815,612,2.088,645,4.604,670,2.773,872,1.337,873,1.135,874,1.848,894,1.158,925,7.297,964,1.728,1101,2.69,1102,2.69,1103,2.69,1104,2.393,1105,2.69,1106,2.69,1107,2.69,1191,0.898,1243,1.808,1250,4.036,1254,1.971,1268,2.693,1283,1.058,1286,1.483,1288,1.114,1478,2.815,1479,2.051,1480,3.178,1481,2.051,1482,1.182,1483,1.182,1484,1.182,1485,1.182,1486,2.717,1487,1.182,1488,1.182,1489,1.182,1490,1.182,1491,2.717,1492,1.135,1493,1.182,1494,1.182,1495,2.051,1496,1.182,1497,1.182,1498,1.182,1499,1.182,1500,1.182,1501,1.182,1502,2.433,1503,1.182,1504,1.182,1505,1.182,1506,1.182,1507,1.182,1508,1.182,1512,3.887,1518,0.83,1520,0.877,1521,0.877,1530,2.125,1538,3.65,1583,1.158,1590,1.182,1600,1.042,1602,2.526,1798,1.97,1799,1.747,1800,1.747,1801,4.255,1802,8.257,1803,4.815,1804,3.17,1805,3.564,1806,6.286,1807,3.032,1808,4.695,1809,2.836,1810,1.747,1811,3.564,1812,3.564,1813,3.564,1814,3.032,1815,3.032,1816,1.747,1817,3.032,1818,3.032,1819,1.747,1820,3.032,1821,1.747,1822,1.747,1823,1.747,1824,1.747,1825,1.747,1826,1.747,1827,1.747,1828,1.747,1829,1.747,1830,4.017,1831,1.747,1832,1.747,1833,1.747,1834,1.747,1835,1.747,1836,1.747,1837,1.747,1838,1.747,1839,1.747,1840,1.747,1841,1.747,1842,1.747,1843,1.747,1844,1.747,1845,1.747,1846,1.747,1847,1.747,1848,1.747,1849,1.747,1850,1.747,1851,1.747]],["title/examples/migrating_from_torchvision_to_albumentations/#migrating-from-torchvision-to-albumentations",[1,0.998,100,4.128,101,3.615]],["text/examples/migrating_from_torchvision_to_albumentations/#migrating-from-torchvision-to-albumentations",[1,1.607,7,1.138,10,1.514,40,4.489,42,4.733,57,6.445,101,5.821,201,3.246,270,5.956]],["title/examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries",[8,1.709,183,1.878,344,1.968]],["text/examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries",[1,1.531,6,0.285,84,1.147,101,5.545,183,3.879,194,4.388,198,6.139,645,5.214,874,3.092,1602,3.735,1798,5.214,1799,8.024,1800,8.024]],["title/examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision",[10,0.828,54,1.315,88,1.21,101,3.183]],["text/examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision",[6,0.327,12,2.038,18,2.841,21,1.604,72,1.837,84,1.458,161,2.105,164,2.879,166,2.642,197,3.64,217,2.091,224,3.735,249,2.264,281,1.507,305,2.37,306,2.423,307,2.006,308,2.17,310,4.122,312,1.735,313,3.357,399,3.644,415,2.164,420,1.16,451,2.428,584,1.837,585,2.084,612,2.398,645,2.998,670,3.804,925,7.512,964,2.629,1101,4.092,1102,4.092,1103,4.092,1104,3.64,1105,4.092,1106,4.092,1107,4.092,1250,3.431,1268,2.289,1512,4.149,1530,2.044,1538,2.49,1583,3.057,1590,3.12,1602,2.147,1801,5.836,1802,8.578,1803,4.092,1804,3.64,1805,4.092,1806,6.803,1807,6.579,1808,3.64,1809,4.315,1810,4.613,1811,4.092,1812,4.092,1813,4.092]],["title/examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations",[1,0.998,88,1.374,97,1.968]],["text/examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations",[6,0.352,7,0.831,10,0.755,12,2.033,21,1.591,72,1.673,74,1.659,84,1.272,97,1.58,161,1.917,164,2.88,166,2.921,193,2.018,198,3.214,217,2.015,224,3.631,248,3.018,249,2.062,250,3.124,252,3.828,260,2.394,281,1.372,305,2.158,306,2.43,307,1.827,308,2.179,310,3.852,312,2.736,313,3.214,347,1.556,399,3.456,415,2.023,420,1.057,451,2.211,486,1.334,505,5.021,584,1.673,585,1.898,612,2.184,670,2.429,874,2.802,925,7.368,964,2.394,1101,3.727,1102,3.727,1103,3.727,1104,3.315,1105,3.727,1106,3.727,1107,3.727,1250,4.573,1254,2.062,1268,2.085,1512,3.972,1518,1.996,1520,2.108,1521,2.108,1530,1.862,1538,3.926,1600,2.504,1602,1.955,1801,3.727,1802,8.363,1803,5.455,1804,3.315,1805,3.727,1806,6.452,1808,4.852,1811,3.727,1812,3.727,1813,3.727,1814,6.148,1815,6.148,1816,4.201]],["title/examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil",[1,0.998,10,0.94,645,3.399]],["text/examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil",[1,0.79,6,0.362,7,0.974,10,0.744,12,1.952,18,2.549,21,1.577,72,1.648,74,2.402,84,1.342,91,1.721,96,1.276,97,1.557,126,1.967,135,2.8,161,1.889,164,2.653,166,2.443,193,3.817,194,4.631,195,5.046,196,3.266,217,2.003,224,3.614,248,2.031,270,2.927,281,1.352,300,1.988,305,2.126,306,2.398,307,1.8,308,2.172,310,3.811,312,2.288,313,2.443,347,1.533,399,3.427,415,2.001,420,1.041,429,1.784,584,1.648,585,1.87,612,2.152,645,5.753,670,2.394,872,3.167,925,7.345,1191,2.126,1250,4.524,1254,2.031,1268,2.054,1512,3.944,1530,2.695,1538,4.29,1602,2.831,1798,2.69,1801,3.672,1802,8.328,1803,5.396,1804,3.266,1805,3.672,1806,6.397,1808,4.8,1811,3.672,1812,3.672,1813,3.672,1817,6.082,1818,6.082,1819,4.139,1820,6.082,1821,4.139]],["title/examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms",[1,0.879,84,0.658,101,3.183,1822,4.606]],["text/examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms",[1,1.612,54,1.91,84,1.208,101,4.625,216,3.359,281,2.76,305,4.341,310,6.096,358,4.526,384,3.87,451,4.448,894,4.434,1243,5.038,1254,3.284,1268,4.194,1283,4.054,1286,5.679,1288,4.268,1808,5.281,1809,6.26,1823,6.692,1824,6.692,1825,6.692,1826,6.692,1827,6.692,1828,6.692,1829,6.692,1830,9.262,1831,6.692,1832,6.692,1833,6.692,1834,6.692,1835,6.692,1836,6.692,1837,6.692,1838,6.692,1839,6.692,1840,6.692,1841,6.692,1842,6.692,1843,6.692,1844,6.692,1845,6.692,1846,6.692,1847,6.692,1848,6.692,1849,6.692,1850,6.692,1851,6.692]],["title/examples/replay/",[7,0.622,88,1.21,102,3.524,103,2.886]],["text/examples/replay/",[1,0.457,3,3.515,6,0.354,7,1.237,8,0.782,10,1.263,12,1.576,21,1.514,31,2.325,43,1.138,44,1.162,45,1.202,55,1.676,56,1.527,61,0.873,82,0.679,84,1.063,86,0.835,87,0.777,88,1.714,89,0.793,96,1.92,97,2.215,98,1.105,102,3.031,103,4.403,105,2.011,109,1.23,164,2.202,166,0.962,168,1.175,179,1.216,180,2.085,183,2.342,187,1.202,201,2.513,207,1.385,208,4.969,209,4.376,210,3.069,216,1.202,217,2.165,227,2.798,262,2.226,278,1.071,279,1.955,284,2.625,286,1.276,294,1.31,300,1.15,302,1.5,305,1.23,306,2.272,307,1.723,308,2.205,309,1.322,311,1.322,312,1.49,313,1.591,344,0.901,347,2.181,371,2.362,384,1.385,399,1.138,420,0.996,429,1.032,439,4.266,560,1.587,578,1.126,584,0.954,588,1.346,611,1.346,612,2.634,629,2.477,670,1.385,690,1.406,694,2.032,695,2.032,700,2.248,702,5.87,796,1.162,873,1.556,874,3.204,914,1.655,915,1.735,936,1.175,1023,1.556,1024,4.672,1025,1.556,1026,2.325,1027,1.556,1175,1.406,1191,1.23,1214,1.693,1215,1.693,1216,1.693,1268,1.188,1282,1.5,1311,4.851,1329,3.126,1332,1.406,1478,3.457,1479,2.679,1480,3.902,1481,2.679,1482,1.619,1483,1.619,1484,1.619,1485,1.619,1486,3.427,1487,1.619,1488,1.619,1489,1.619,1490,1.619,1491,3.427,1492,1.556,1493,1.619,1494,1.619,1495,2.679,1496,1.619,1497,1.619,1498,1.619,1499,1.619,1500,1.619,1501,1.619,1502,3.069,1503,1.619,1504,1.619,1505,1.619,1506,1.619,1507,1.619,1508,1.619,1511,2.858,1512,1.188,1513,1.428,1514,1.346,1515,1.23,1516,1.346,1517,1.162,1518,2.408,1519,2.124,1520,2.543,1521,2.543,1522,2.224,1523,3.069,1524,1.527,1530,2.609,1600,1.428,1607,1.385,1627,1.556,1768,4.266,1852,1.832,1853,1.693,1854,1.587,1855,2.124,1856,2.394,1857,1.955,1858,1.955,1859,3.706,1860,2.394,1861,6.101,1862,6.235,1863,2.394,1864,2.394,1865,2.394,1866,2.394,1867,2.124,1868,2.394,1869,2.394,1870,2.394,1871,2.394,1872,3.515,1873,2.394,1874,2.394,1875,2.394,1876,2.394,1877,2.394,1878,2.394,1879,2.394,1880,3.706,1881,2.394,1882,6.101,1883,3.961,1884,3.961]],["title/examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose",[7,0.622,88,1.21,102,3.524,103,2.886]],["text/examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose",[6,0.316,7,1.412,10,1.301,87,2.347,88,1.901,96,1.861,98,1.694,102,5.536,103,4.533,168,3.551,187,3.631,216,3.631,227,4.559,279,5.908,286,3.856,294,3.957,302,4.533,560,4.794,588,4.066,700,2.838,914,5.0,915,5.242,1329,5.71,1523,4.383,1852,5.536,1853,5.116,1854,4.794,1855,6.419,1856,7.235]],["title/examples/replay/#import-the-required-libraries",[8,1.709,183,1.878,344,1.968]],["text/examples/replay/#import-the-required-libraries",[1,1.607,183,3.776,700,2.694,874,3.246,1511,4.089,1857,6.878]],["title/examples/replay/#define-the-visualization-function",[89,1.733,347,1.937,629,1.606]],["text/examples/replay/#define-the-visualization-function",[6,0.329,12,1.51,21,1.519,217,2.185,306,1.796,308,2.273,371,5.505,399,3.674,578,3.636,629,2.373,1511,4.794,1512,3.837,1513,4.609,1514,4.344,1515,3.972,1516,4.344]],["title/examples/replay/#load-an-image-from-the-disk",[6,0.186,105,2.656,1517,2.539]],["text/examples/replay/#load-an-image-from-the-disk",[6,0.366,12,1.531,21,1.528,217,2.35,306,2.163,308,2.16,629,2.406,874,3.827,1518,3.725,1520,3.934,1521,3.934,1858,6.401]],["title/examples/replay/#declare-an-augmentation-pipeline-using-replaycompose",[7,0.556,10,0.74,88,1.081,103,2.578,1607,2.38]],["text/examples/replay/#declare-an-augmentation-pipeline-using-replaycompose",[6,0.341,7,1.078,10,1.099,12,1.659,21,1.411,43,1.982,44,2.024,45,2.093,55,2.588,61,1.52,84,1.311,88,1.607,96,2.047,97,2.3,98,0.706,103,2.613,109,2.142,164,1.916,166,1.675,180,3.219,201,2.79,207,1.876,208,6.276,209,5.135,210,4.387,217,1.447,262,3.437,284,4.052,300,2.003,305,2.142,306,1.973,307,2.66,308,2.151,309,2.04,311,2.04,312,2.3,384,2.411,420,1.538,429,1.797,439,5.779,611,2.343,612,3.765,629,1.877,670,2.411,690,2.448,694,3.539,695,3.539,700,2.316,702,7.238,796,2.024,936,2.046,1023,2.71,1024,5.483,1025,2.71,1026,3.59,1027,2.71,1175,2.448,1191,2.142,1214,2.949,1215,2.949,1216,2.949,1268,2.069,1282,2.613,1332,2.448,1522,3.179,1523,3.704,1524,2.66,1530,2.71,1600,2.486,1627,2.71,1768,5.779,1859,3.9,1860,4.17,1861,3.9,1862,7.875,1863,4.17,1864,4.17,1865,4.17,1866,4.17,1867,3.699,1868,4.17,1869,4.17,1870,4.17,1871,4.17,1872,5.425,1873,4.17,1874,4.17,1875,4.17,1876,4.17,1877,4.17,1878,4.17,1879,4.17]],["title/examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image",[6,0.121,7,0.458,10,0.61,96,0.711,97,1.276,1329,2.676,1880,3.172]],["text/examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image",[7,1.138,10,1.514,31,4.945,82,2.389,86,2.936,96,1.767,97,3.169,347,3.119,1880,7.879]],["title/examples/replay/#load-new-images",[6,0.186,31,3.071,105,2.656]],["text/examples/replay/#load-new-images",[12,1.706,21,1.597,217,2.456,306,2.303,308,2.258,629,2.681,874,4.0,1311,7.374,1518,4.151,1519,6.258,1520,4.384,1521,4.384,1881,7.054,1882,9.274]],["title/examples/replay/#apply-augmentations-from-datareplay-to-those-images",[6,0.146,7,0.556,96,0.863,227,1.955,1859,3.849]],["text/examples/replay/#apply-augmentations-from-datareplay-to-those-images",[6,0.356,21,1.538,103,5.558,164,3.134,201,3.418,217,2.099,306,2.324,308,2.175,313,3.563,629,2.723,1311,5.381,1530,3.931,1861,9.356,1882,6.768,1883,8.871,1884,8.871]],["title/examples/serialization/",[7,0.556,88,1.081,98,0.697,104,2.578,105,2.089]],["text/examples/serialization/",[1,0.957,3,3.022,6,0.336,7,1.085,8,0.505,10,1.379,12,1.535,13,1.649,14,2.581,16,1.261,21,1.468,23,1.509,36,0.868,50,1.875,54,0.441,55,1.152,56,0.985,74,2.187,83,0.534,84,1.371,88,2.251,89,1.209,91,0.642,96,0.766,97,1.888,98,0.85,104,4.679,105,3.397,126,0.734,143,2.372,146,0.813,161,1.242,164,1.873,167,1.53,179,0.784,180,0.813,183,2.147,187,1.366,189,0.856,194,0.845,200,0.762,201,1.407,203,1.598,206,0.854,207,0.64,217,2.234,227,1.294,270,1.092,273,0.734,278,1.218,281,2.077,289,1.067,290,3.813,291,2.159,292,1.418,293,0.921,294,0.845,303,0.907,306,2.24,307,1.587,308,2.162,312,0.581,313,2.999,330,1.023,344,0.581,347,2.842,350,1.261,361,0.893,370,2.31,378,4.139,384,0.893,399,1.294,408,0.554,415,0.896,420,0.389,429,0.666,485,0.462,529,0.868,572,0.784,578,0.726,584,0.615,600,1.881,612,1.415,629,1.835,649,2.469,670,0.893,679,0.705,680,1.119,681,1.092,690,1.598,700,1.912,796,1.322,873,1.004,874,1.934,936,0.758,940,1.881,1023,2.859,1024,5.551,1025,2.859,1026,3.733,1027,2.859,1052,1.004,1057,1.119,1191,1.399,1214,3.111,1215,3.111,1216,3.111,1258,5.118,1268,0.767,1282,0.968,1304,0.907,1305,1.045,1332,2.946,1342,4.522,1351,4.452,1352,3.734,1353,3.827,1358,2.31,1359,3.325,1360,3.394,1361,1.37,1368,3.96,1372,1.149,1376,4.452,1398,4.699,1478,3.25,1479,1.841,1480,2.915,1481,1.841,1482,1.045,1483,1.045,1484,1.045,1485,1.045,1486,2.469,1487,1.045,1488,1.045,1489,1.045,1490,1.045,1491,2.469,1492,1.004,1493,1.045,1494,1.045,1495,1.841,1496,1.045,1497,1.045,1498,1.045,1499,1.045,1500,1.045,1501,1.045,1502,2.211,1503,1.045,1504,1.045,1505,1.045,1506,1.045,1507,1.045,1508,1.045,1511,2.136,1512,1.351,1513,0.921,1514,0.868,1515,0.794,1516,0.868,1517,0.75,1518,0.734,1520,0.775,1521,0.775,1522,2.431,1523,0.936,1530,2.65,1531,1.925,1600,0.921,1602,0.719,1627,1.004,1637,2.211,1662,4.976,1684,2.31,1745,1.37,1767,2.415,1791,2.415,1798,2.372,1854,1.023,1857,1.261,1858,1.261,1862,1.37,1867,1.37,1885,2.547,1886,1.545,1887,1.545,1888,1.219,1889,2.722,1890,1.37,1891,3.734,1892,5.7,1893,3.734,1894,3.734,1895,3.734,1896,5.397,1897,3.734,1898,4.522,1899,4.522,1900,4.522,1901,2.722,1902,6.143,1903,4.694,1904,2.547,1905,1.545,1906,1.545,1907,2.722,1908,1.545,1909,1.545,1910,1.545,1911,1.545,1912,1.545,1913,1.545,1914,1.261,1915,1.37,1916,6.69,1917,4.4,1918,2.722,1919,2.722,1920,2.722,1921,2.722,1922,5.537,1923,2.722,1924,2.722,1925,2.722,1926,2.722,1927,1.545,1928,1.37,1929,1.545,1930,1.545,1931,1.545,1932,1.545,1933,1.545]],["title/examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline",[7,0.556,88,1.081,98,0.697,104,2.578,105,2.089]],["text/examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline",[1,1.38,7,1.297,10,1.595,13,5.374,14,6.784,16,5.908,74,2.857,88,2.521,97,2.722,98,1.694,104,5.558,183,2.598,187,3.631,200,2.025,201,3.418,227,3.438,293,4.313,330,4.794,347,2.679,378,4.01,1602,3.368,1854,4.794,1885,6.768,1886,7.235,1887,7.235,1888,5.71,1889,8.871,1890,6.419]],["title/examples/serialization/#import-the-required-libraries",[8,1.709,183,1.878,344,1.968]],["text/examples/serialization/#import-the-required-libraries",[1,1.583,183,3.825,194,4.539,700,2.655,874,3.198,1511,4.029,1798,5.393,1857,6.777]],["title/examples/serialization/#define-the-visualization-function",[89,1.733,347,1.937,629,1.606]],["text/examples/serialization/#define-the-visualization-function",[6,0.329,12,1.51,21,1.519,217,2.185,306,1.796,308,2.273,370,7.837,399,3.674,578,3.636,629,2.373,1511,4.794,1512,3.837,1513,4.609,1514,4.344,1515,3.972,1516,4.344]],["title/examples/serialization/#load-an-image-from-the-disk",[6,0.186,105,2.656,1517,2.539]],["text/examples/serialization/#load-an-image-from-the-disk",[6,0.366,12,1.531,21,1.528,217,2.35,306,2.163,308,2.16,629,2.406,874,3.827,1518,3.725,1520,3.934,1521,3.934,1858,6.401]],["title/examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize",[7,0.556,88,1.081,89,1.363,203,2.416,378,2.281]],["text/examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize",[6,0.327,7,1.165,12,1.125,21,1.513,50,2.958,54,1.644,84,1.367,164,1.804,167,3.236,180,3.031,217,2.039,281,2.504,290,3.673,292,2.237,306,2.002,307,3.334,308,2.08,312,2.166,313,3.079,347,2.133,384,3.33,629,2.353,649,3.895,670,3.33,700,2.452,940,3.98,1023,3.742,1024,5.861,1025,3.742,1026,4.5,1027,3.742,1214,4.072,1215,4.072,1216,4.072,1268,2.858,1282,3.608,1332,4.5,1522,3.365,1523,3.488,1530,3.397,1531,4.072,1600,3.433,1627,3.742,1637,3.488,1662,6.41,1767,6.801,1885,5.386,1891,4.887,1892,6.26,1893,4.887,1894,4.887,1895,4.887,1896,6.506,1897,4.887,1898,4.702,1899,4.702,1900,4.702]],["title/examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file",[7,0.502,88,0.977,143,2.416,378,2.061,1359,2.464,1360,2.515]],["text/examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file",[1,1.399,6,0.343,7,0.991,10,1.498,12,1.053,21,1.376,84,1.048,88,1.927,96,1.131,97,3.135,104,5.222,105,4.542,143,4.766,164,2.611,217,2.214,281,1.761,290,3.439,294,2.949,306,1.936,308,2.147,313,3.347,347,2.716,378,4.065,629,1.655,649,4.96,690,3.165,700,2.346,936,2.646,1023,3.504,1024,5.79,1025,3.504,1026,4.305,1027,3.504,1191,2.77,1214,3.812,1215,3.812,1216,3.812,1332,3.165,1359,4.86,1522,3.219,1530,3.25,1531,3.812,1637,3.266,1662,4.01,1684,4.576,1798,3.504,1891,4.576,1892,5.989,1893,4.576,1894,4.576,1895,4.576,1896,6.224,1897,4.576,1898,4.403,1899,4.403,1900,4.403,1901,7.334,1902,7.073,1903,7.796,1904,5.043]],["title/examples/serialization/#using-yaml-insted-of-json",[10,0.828,1359,3.052,1360,3.115,1905,4.606]],["text/examples/serialization/#using-yaml-insted-of-json",[7,0.857,10,1.14,12,1.764,21,1.256,84,0.906,88,1.666,104,5.116,105,4.146,217,2.137,270,4.484,281,2.071,290,4.044,291,3.112,306,2.098,308,1.964,313,3.279,347,2.348,378,3.515,529,3.563,1023,4.12,1024,5.96,1025,4.12,1026,4.793,1027,4.12,1214,4.484,1215,4.484,1216,4.484,1332,3.722,1342,5.178,1358,6.93,1359,4.202,1360,6.108,1662,4.716,1891,5.381,1892,6.668,1893,5.381,1894,5.381,1895,5.381,1896,6.93,1897,5.381,1898,5.178,1899,5.178,1900,5.178,1902,6.93,1906,6.341,1907,8.165]],["title/examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary",[7,0.556,23,2.281,88,1.081,378,2.281,1353,2.844]],["text/examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary",[10,1.06,21,1.341,23,3.27,36,3.315,55,2.496,74,3.076,83,2.041,84,0.843,88,2.291,104,3.696,187,2.961,189,3.27,201,2.273,203,3.463,217,2.063,273,2.803,278,2.639,281,1.927,290,3.762,306,1.81,308,1.896,313,3.128,347,2.185,378,4.318,408,1.201,415,1.94,485,1.763,940,4.077,1023,3.833,1024,5.887,1025,3.833,1026,4.573,1027,3.833,1052,3.833,1214,4.171,1215,4.171,1216,4.171,1332,3.463,1351,6.911,1353,6.411,1361,5.233,1368,6.882,1372,4.387,1376,7.737,1662,4.387,1891,5.006,1892,6.361,1893,5.006,1894,5.006,1895,5.006,1896,6.611,1897,5.006,1898,4.817,1899,4.817,1900,4.817,1902,6.611,1908,5.899,1909,5.899,1910,5.899,1911,5.899,1912,5.899,1913,5.899]],["title/examples/serialization/#serializing-and-deserializing-lambda-transforms",[84,0.658,378,2.553,1258,3.257,1342,3.761]],["text/examples/serialization/#serializing-and-deserializing-lambda-transforms",[1,0.658,6,0.346,7,0.716,10,1.407,12,1.681,21,1.456,50,2.723,55,1.459,74,2.551,84,1.488,88,2.171,89,1.142,91,1.433,96,1.112,97,1.297,104,4.047,105,1.751,126,1.639,146,1.815,161,2.419,164,2.024,167,1.938,200,0.965,206,1.408,207,1.247,217,2.239,227,1.639,281,2.11,289,2.383,290,4.119,291,3.17,292,2.059,303,2.024,306,2.284,307,1.5,308,2.176,313,2.594,347,2.685,350,2.816,361,1.994,378,2.938,399,1.639,408,0.702,415,1.134,420,0.867,429,1.486,572,1.751,600,3.664,612,2.756,629,1.058,679,1.573,680,2.498,681,2.438,690,2.024,700,1.696,796,2.574,874,1.329,1057,2.498,1191,1.771,1258,6.577,1304,2.024,1305,2.332,1342,5.92,1351,5.73,1352,6.153,1353,2.383,1368,4.183,1376,4.703,1398,7.012,1478,3.112,1512,1.711,1522,2.327,1530,2.862,1637,2.089,1662,4.804,1684,2.926,1745,3.059,1791,4.703,1798,2.241,1862,3.059,1867,3.059,1892,4.329,1898,4.329,1899,4.329,1900,4.329,1902,6.153,1903,4.959,1904,3.225,1914,2.816,1915,3.059,1916,9.11,1917,7.25,1918,5.301,1919,5.301,1920,5.301,1921,5.301,1922,8.262,1923,5.301,1924,5.301,1925,5.301,1926,5.301,1927,3.448,1928,3.059,1929,3.448,1930,3.448,1931,3.448,1932,3.448,1933,3.448]],["title/examples/showcase/",[6,0.089,7,0.339,46,1.18,54,0.716,59,1.6,86,0.874,106,1.63,107,1.63,108,1.52,109,1.289,110,1.63]],["text/examples/showcase/",[1,0.157,3,1.98,6,0.298,7,0.832,8,0.502,12,2.119,18,0.507,21,1.573,46,0.387,50,2.568,54,0.235,56,0.525,59,0.525,77,2.142,79,0.212,86,0.287,89,0.509,93,0.462,106,0.535,107,0.535,108,0.499,109,0.423,110,0.535,133,0.545,161,3.044,164,2.662,166,2.947,176,0.612,177,0.698,179,0.418,183,1.795,194,0.45,195,0.469,201,0.317,204,1.527,207,1.777,209,0.433,210,0.499,217,2.304,224,1.858,225,0.672,244,1.832,251,0.578,252,1.683,257,0.545,272,1.037,278,0.368,281,1.431,306,2.438,307,1.906,308,2.239,310,2.003,312,3.259,313,2.615,318,3.093,344,0.31,347,1.003,364,0.483,371,0.491,380,1.431,382,0.818,384,0.476,399,1.287,401,2.617,406,0.462,410,2.518,411,2.518,412,1.015,413,1.015,414,1.622,415,0.891,419,2.356,420,2.205,430,0.746,438,0.649,442,0.674,477,0.916,479,0.962,497,0.507,525,2.4,532,0.507,558,0.672,572,0.418,584,2.289,585,0.372,611,0.863,612,1.408,629,0.253,645,0.535,657,2.072,658,2.072,659,1.641,670,3.047,679,0.701,680,2.917,681,2.847,685,0.672,688,0.543,697,1.822,700,1.288,726,2.403,795,1.086,797,1.377,807,0.672,815,0.698,845,2.299,851,2.072,872,0.63,873,0.535,874,3.087,877,1.377,932,0.698,943,0.596,951,0.63,953,3.003,961,0.73,982,0.507,1023,0.535,1024,0.462,1025,0.535,1027,0.535,1043,0.73,1068,1.254,1120,3.353,1245,0.698,1246,1.564,1248,0.77,1249,0.569,1254,1.06,1255,0.698,1260,0.698,1262,0.612,1265,0.63,1266,0.428,1271,0.649,1275,0.476,1279,2.003,1282,1.353,1283,0.499,1300,0.649,1304,2.572,1405,0.596,1442,3.718,1454,0.73,1478,1.877,1479,1.039,1480,1.795,1481,1.039,1482,0.557,1483,0.557,1484,0.557,1485,0.557,1486,1.46,1487,0.557,1488,0.557,1489,0.557,1490,0.557,1491,1.46,1492,2.077,1493,0.557,1494,0.557,1495,1.039,1496,0.557,1497,0.557,1498,0.557,1499,0.557,1500,0.557,1501,0.557,1502,1.308,1503,0.557,1504,0.557,1505,0.557,1506,0.557,1507,0.557,1508,0.557,1509,0.499,1510,0.507,1511,1.048,1512,1.803,1514,0.863,1515,1.109,1516,2.042,1518,1.913,1520,1.359,1521,1.359,1522,1.595,1530,0.681,1531,1.527,1538,1.462,1576,2.212,1577,1.254,1578,0.672,1579,1.763,1581,3.177,1582,1.175,1583,2.903,1584,1.254,1585,1.763,1586,0.672,1587,1.254,1588,1.763,1589,0.672,1590,1.039,1591,0.672,1596,0.672,1597,0.672,1598,1.59,1599,1.33,1600,0.491,1601,1.254,1602,0.383,1620,0.569,1633,0.596,1655,2.212,1656,4.867,1657,1.362,1658,2.967,1661,1.303,1666,1.362,1679,0.998,1694,0.63,1727,1.303,1730,2.299,1732,0.698,1743,0.582,1756,3.224,1760,3.224,1768,3.175,1771,0.73,1798,2.847,1804,1.212,1855,0.73,1858,0.672,1934,0.823,1935,2.019,1936,2.159,1937,3.417,1938,2.159,1939,3.197,1940,3.842,1941,1.832,1942,2.159,1943,2.159,1944,2.99,1945,2.99,1946,2.019,1947,3.197,1948,0.823,1949,2.708,1950,0.823,1951,3.399,1952,1.536,1953,2.159,1954,1.536,1955,0.823,1956,0.823,1957,1.436,1958,2.159,1959,0.823,1960,1.536,1961,0.823,1962,0.823,1963,0.823,1964,2.534,1965,0.672,1966,0.823,1967,0.823,1968,0.823,1969,0.73,1970,0.73,1971,0.823,1972,0.823,1973,0.823,1974,1.436,1975,1.436,1976,2.159,1977,0.823,1978,0.823,1979,1.436,1980,0.823,1981,1.536,1982,1.536,1983,0.823,1984,0.823,1985,0.823,1986,0.823,1987,0.823,1988,0.823,1989,0.823,1990,0.73,1991,0.823,1992,0.823,1993,0.823,1994,3.633,1995,3.633,1996,0.823,1997,1.536,1998,3.197,1999,2.159,2000,0.823,2001,0.823,2002,0.823,2003,0.823,2004,0.823,2005,0.823,2006,0.672,2007,1.536,2008,0.823,2009,0.823,2010,2.159,2011,0.823,2012,0.823,2013,1.536,2014,1.536,2015,0.823,2016,0.823,2017,0.823,2018,0.823,2019,0.823,2020,0.823,2021,0.73,2022,0.823,2023,0.823,2024,0.823,2025,1.061,2026,0.823,2027,0.823,2028,0.823,2029,0.823,2030,0.823,2031,0.823,2032,0.823,2033,0.823,2034,0.823,2035,0.823,2036,0.73,2037,0.823,2038,0.823,2039,0.823,2040,0.823,2041,0.823,2042,0.823,2043,0.823,2044,0.823,2045,0.823,2046,0.823,2047,0.823,2048,1.536,2049,2.708,2050,2.159,2051,0.73,2052,0.823,2053,0.823,2054,0.823,2055,0.823,2056,0.823,2057,1.362,2058,0.823,2059,0.823,2060,1.536,2061,0.823,2062,0.823,2063,0.823,2064,0.823,2065,0.823,2066,3.633,2067,2.159]],["title/examples/showcase/#showcase-cool-augmentation-examples-on-diverse-set-of-images-from-various-real-world-tasks",[6,0.089,7,0.339,46,1.18,54,0.716,59,1.6,86,0.874,106,1.63,107,1.63,108,1.52,109,1.289,110,1.63]],["text/examples/showcase/#showcase-cool-augmentation-examples-on-diverse-set-of-images-from-various-real-world-tasks",[]],["title/examples/showcase/#import-libraries-and-define-helper-functions",[8,1.344,89,1.363,133,2.727,183,1.478,347,1.524]],["text/examples/showcase/#import-libraries-and-define-helper-functions",[]],["title/examples/showcase/#import-the-required-libraries",[8,1.709,183,1.878,344,1.968]],["text/examples/showcase/#import-the-required-libraries",[1,1.538,183,3.883,194,4.409,244,6.842,700,2.579,874,3.107,1509,4.884,1510,4.965,1511,3.914,1798,5.239,1934,8.062,1935,7.541]],["title/examples/showcase/#define-visualization-functions",[89,1.733,347,1.937,629,1.606]],["text/examples/showcase/#define-visualization-functions",[6,0.304,7,1.111,12,2.12,21,1.538,77,2.362,93,1.052,161,3.02,164,2.96,166,3.303,204,2.994,209,0.986,217,2.366,244,2.732,252,2.646,257,1.241,272,2.034,306,2.391,308,2.294,312,2.852,313,2.807,399,2.389,401,3.045,410,3.666,411,3.666,412,1.991,413,1.991,414,2.459,415,1.654,419,3.037,420,2.021,497,1.153,525,3.947,584,2.463,585,0.846,611,1.809,612,2.614,657,3.846,658,3.846,659,3.045,680,4.797,681,4.681,697,1.835,874,3.293,943,1.357,953,3.228,982,1.153,1300,1.478,1511,1.563,1512,2.81,1514,1.809,1515,1.654,1516,3.475,1520,2.523,1521,2.523,1538,1.738,1576,4.105,1577,2.629,1578,1.529,1579,3.458,1581,3.967,1582,2.463,1583,1.241,1584,2.629,1585,3.458,1586,1.529,1587,2.629,1588,3.458,1589,1.529,1590,2.177,1591,1.529,1596,1.529,1597,1.529,1598,1.89,1599,2.608,1600,1.116,1601,2.629,1655,4.105,1656,6.854,1657,2.856,1658,5.05,1679,2.092,1804,1.478,1935,3.011,1936,4.234,1937,3.594,1938,4.234,1939,5.663,1940,1.529,1941,3.594,1942,4.234,1943,4.234,1944,3.011,1945,3.011,1946,3.011,1947,5.663,1948,1.873,1949,5.027,1950,1.873,1951,1.752,1952,3.219,1953,4.234,1954,3.219,1955,1.873,1956,1.873,1957,1.752,1958,4.234,1959,1.873,1960,3.219,1961,1.873,1962,1.873,1963,1.873]],["title/examples/showcase/#color-augmentations",[7,0.818,252,3.185]],["text/examples/showcase/#color-augmentations",[6,0.318,12,1.885,21,1.599,207,2.396,217,2.377,281,2.722,306,2.514,307,3.625,308,2.261,312,3.631,313,3.347,384,3.118,420,2.563,700,1.725,874,2.078,877,4.678,1023,3.504,1024,3.03,1025,3.504,1027,3.504,1120,6.377,1245,4.576,1246,5.314,1266,2.803,1271,4.255,1442,5.455,1518,2.562,1522,2.367,1531,3.812,1730,6.224,1858,4.403,1940,6.806,1964,6.86]],["title/examples/showcase/#inria-aerial-image-labeling-dataset",[6,0.146,224,1.625,1602,1.915,1694,3.148,1965,3.36]],["text/examples/showcase/#inria-aerial-image-labeling-dataset",[6,0.323,12,2.006,21,1.632,77,2.512,161,2.558,166,2.251,207,1.999,217,2.243,281,1.831,306,2.317,307,2.438,308,2.062,312,3.567,313,3.024,318,4.42,371,3.342,380,3.715,420,2.139,670,5.483,700,1.793,797,3.576,845,7.714,874,3.276,953,3.195,1120,4.289,1248,5.244,1249,3.874,1260,4.758,1279,3.512,1282,3.512,1283,3.396,1442,5.6,1518,3.578,1522,2.461,1531,3.964,1583,4.989,1661,4.758,1666,6.68,1743,3.964,1768,6.586,1940,4.578,1966,5.606,1967,5.606,1968,5.606]],["title/examples/showcase/#2018-data-science-bowl",[201,1.775,1969,4.086,1970,4.086,1971,4.606]],["text/examples/showcase/#2018-data-science-bowl",[6,0.234,12,2.009,21,1.621,77,2.67,161,3.809,164,2.877,166,3.075,207,1.082,210,2.787,217,2.286,251,1.731,281,1.503,306,2.345,307,2.001,308,2.217,312,2.47,313,1.848,318,3.854,380,3.048,382,2.452,401,2.555,419,2.77,420,1.651,430,2.233,442,2.882,477,2.743,479,2.882,572,2.336,670,5.309,679,2.099,688,1.627,697,3.742,700,1.472,797,2.934,807,3.757,874,3.402,953,2.622,1043,4.081,1120,3.52,1255,3.904,1275,2.66,1279,2.882,1282,2.882,1304,2.701,1442,4.884,1478,2.701,1512,2.283,1515,2.363,1518,3.12,1522,2.02,1530,2.039,1531,3.253,1583,3.048,1598,2.701,1661,3.904,1727,3.904,1768,6.05,1798,4.267,1804,3.63,1940,3.757,1946,4.303,1957,4.303,1972,4.6,1973,4.6,1974,4.303,1975,4.303,1976,7.656,1977,4.6,1978,4.6,1979,4.303,1980,4.6,1981,6.566,1982,6.566,1983,4.6]],["title/examples/showcase/#mapilary-vistas",[1984,6.051,1985,6.051]],["text/examples/showcase/#mapilary-vistas",[6,0.26,12,2.149,18,1.276,21,1.538,50,4.052,79,0.534,161,2.979,164,2.18,166,2.623,176,1.541,177,1.758,183,0.744,195,1.181,207,1.957,217,2.141,224,2.89,225,1.692,251,0.779,281,1.491,306,2.45,307,1.986,308,2.134,310,3.767,312,3.405,313,1.834,318,4.085,364,1.216,380,1.373,382,1.104,401,2.006,406,1.164,420,2.247,430,1.006,438,1.635,477,1.235,479,1.298,532,1.276,558,1.692,584,2.601,645,1.346,679,0.945,685,1.692,688,0.733,697,1.181,700,1.46,726,4.768,795,2.482,797,1.322,815,1.758,851,4.112,872,1.585,874,2.317,877,1.322,932,1.758,951,1.585,953,3.063,961,1.838,1068,2.866,1120,3.493,1246,1.501,1254,2.241,1262,1.541,1265,1.585,1279,2.861,1282,1.298,1304,4.085,1405,1.501,1442,3.997,1454,1.838,1492,3.492,1518,1.668,1522,2.004,1530,0.918,1538,1.895,1581,3.603,1583,3.561,1598,1.216,1620,1.432,1633,1.501,1727,1.758,1730,2.979,1732,1.758,1756,5.794,1760,5.794,1771,1.838,1798,3.907,1855,1.838,1937,4.561,1940,3.728,1944,4.271,1945,4.271,1951,5.625,1964,3.283,1974,1.938,1975,1.938,1979,1.938,1986,2.072,1987,2.072,1988,2.072,1989,2.072,1990,1.838,1991,2.072,1992,2.072,1993,2.072,1994,6.53,1995,6.53,1996,2.072,1997,3.51,1998,6.013,1999,4.566,2000,2.072,2001,2.072,2002,2.072,2003,2.072,2004,2.072,2005,2.072,2006,1.692,2007,3.51,2008,2.072,2009,2.072,2010,4.566,2011,2.072,2012,2.072,2013,3.51,2014,3.51,2015,2.072,2016,2.072,2017,2.072,2018,2.072,2019,2.072,2020,2.072,2021,1.838,2022,2.072,2023,2.072,2024,2.072,2025,2.426,2026,2.072,2027,2.072,2028,2.072,2029,2.072,2030,2.072,2031,2.072,2032,2.072,2033,2.072,2034,2.072,2035,2.072,2036,1.838,2037,2.072,2038,2.072,2039,2.072,2040,2.072,2041,2.072,2042,2.072,2043,2.072,2044,2.072,2045,2.072,2046,2.072,2047,2.072,2048,3.51,2049,5.374,2050,4.566,2051,1.838,2052,2.072,2053,2.072,2054,2.072,2055,2.072,2056,2.072,2057,3.114,2058,2.072,2059,2.072,2060,3.51,2061,2.072,2062,2.072,2063,2.072,2064,2.072,2065,2.072,2066,6.53,2067,4.566]],["title/examples/tensorflow-example/",[1,0.998,10,0.94,111,3.538]],["text/examples/tensorflow-example/",[1,0.33,3,1.547,6,0.2,7,0.272,10,0.579,12,1.977,14,1.613,21,1.584,25,0.26,27,0.468,54,0.407,55,0.321,56,3.437,60,0.82,66,1.333,68,1.681,69,0.707,70,0.159,71,0.453,72,0.567,76,0.193,84,0.109,86,0.265,88,0.599,89,0.252,90,0.242,91,0.459,96,0.299,105,0.386,111,1.168,124,0.272,126,0.187,143,0.255,144,0.321,146,0.75,151,0.349,159,0.26,160,2.19,161,2.653,162,0.266,163,2.249,164,0.869,166,0.808,179,0.199,183,0.997,188,0.333,189,1.784,193,0.365,194,0.603,196,0.599,200,1.162,201,1.394,203,0.446,204,0.278,206,0.214,207,0.259,209,0.909,210,1.681,216,0.381,217,2.229,224,1.271,228,0.266,233,0.349,249,0.193,254,0.82,270,0.537,278,0.34,281,0.248,289,0.272,291,0.193,292,0.428,293,0.234,295,0.565,297,0.325,298,0.446,301,0.611,304,0.169,305,0.39,306,2.403,307,0.751,308,2.183,309,0.368,311,0.368,312,2.581,313,0.158,318,0.446,329,0.731,330,4.671,343,0.599,344,0.286,347,1.409,355,0.679,367,1.086,369,0.224,374,0.365,383,0.674,384,0.439,399,1.973,404,0.494,408,0.225,415,1.519,418,0.162,419,0.516,420,0.861,429,0.614,442,3.477,443,0.337,448,1.391,451,0.207,453,0.731,454,0.658,455,0.679,473,0.333,483,0.55,484,0.56,495,0.255,497,1.064,529,0.427,556,0.762,559,0.485,574,0.224,584,2.146,585,2.905,612,1.561,619,1.102,651,0.26,655,1.322,670,0.999,679,0.503,680,3.008,681,3.89,697,2.27,700,0.126,716,0.266,746,0.525,801,0.408,804,0.645,807,4.306,824,0.893,831,0.979,832,0.979,834,0.82,835,0.82,854,2.109,856,0.485,873,0.255,894,0.731,900,0.565,902,0.62,905,0.31,910,0.599,923,0.349,925,6.326,935,0.645,936,0.373,943,1.458,951,0.581,953,0.629,971,0.87,973,0.301,1023,0.255,1024,0.62,1025,0.255,1026,0.647,1027,0.255,1031,0.333,1033,0.333,1057,0.55,1068,0.62,1069,0.349,1078,0.321,1097,0.674,1109,0.367,1116,0.979,1129,0.603,1136,0.301,1153,3.554,1156,0.674,1158,0.62,1188,0.581,1189,4.573,1200,0.321,1250,1.497,1254,0.373,1257,0.674,1265,0.581,1267,0.62,1320,0.349,1326,1.533,1365,1.124,1391,0.292,1405,0.285,1439,0.349,1449,0.979,1450,0.901,1478,1.181,1479,0.514,1480,1.145,1481,0.514,1482,0.266,1483,0.266,1484,0.266,1485,0.266,1486,0.746,1487,0.266,1488,0.266,1489,0.266,1490,0.266,1491,0.746,1492,0.255,1493,0.266,1494,0.266,1495,0.514,1496,0.266,1497,0.266,1498,0.266,1499,0.266,1500,0.266,1501,0.266,1502,1.046,1503,0.266,1504,0.266,1505,0.266,1506,0.266,1507,0.266,1508,0.266,1511,0.369,1512,2.06,1513,0.234,1514,0.221,1515,1.302,1516,0.221,1530,0.892,1537,2.123,1538,3.703,1540,0.979,1554,0.199,1570,0.349,1583,1.99,1590,0.964,1600,1.919,1602,1.398,1620,0.762,1621,0.537,1631,0.255,1632,0.427,1637,0.238,1644,0.62,1655,0.321,1656,0.901,1658,0.321,1673,6.818,1703,2.07,1724,0.565,1731,0.62,1736,0.278,1743,0.278,1798,0.255,1853,0.537,1854,0.26,1857,0.321,1888,2.54,1928,0.349,1937,0.333,1941,1.209,1990,0.674,2036,0.674,2068,0.599,2069,0.393,2070,0.393,2071,1.264,2072,0.393,2073,0.393,2074,3.071,2075,1.103,2076,0.393,2077,1.785,2078,0.393,2079,1.425,2080,0.393,2081,0.393,2082,0.393,2083,0.393,2084,0.76,2085,0.349,2086,1.425,2087,0.393,2088,0.333,2089,0.393,2090,0.393,2091,0.393,2092,0.393,2093,0.393,2094,0.393,2095,0.393,2096,0.393,2097,0.393,2098,0.62,2099,0.393,2100,0.393,2101,1.103,2102,0.393,2103,0.393,2104,0.393,2105,0.393,2106,0.393,2107,0.393,2108,0.393,2109,0.393,2110,0.393,2111,0.393,2112,0.711,2113,0.393,2114,0.393,2115,0.393,2116,0.393,2117,0.393,2118,0.979,2119,0.393,2120,0.393,2121,0.979,2122,0.393,2123,0.393,2124,0.393,2125,0.393,2126,0.76,2127,0.393,2128,0.393,2129,0.393,2130,0.393,2131,0.393,2132,0.393,2133,0.393,2134,0.393,2135,0.393,2136,0.393,2137,0.393,2138,0.393,2139,0.393,2140,0.393,2141,0.393,2142,0.393,2143,0.393,2144,0.393,2145,0.349,2146,0.393,2147,0.393,2148,0.393,2149,0.393,2150,1.032,2151,0.76,2152,2.809,2153,0.393,2154,0.393,2155,0.393,2156,1.032,2157,0.711,2158,1.466,2159,0.711,2160,0.711,2161,1.032,2162,0.76,2163,0.349,2164,0.76,2165,0.76,2166,0.393,2167,0.393,2168,0.393,2169,0.393,2170,0.711,2171,0.393,2172,0.393,2173,0.349,2174,0.393,2175,0.393,2176,0.349,2177,0.393,2178,0.393,2179,0.393,2180,0.393,2181,0.393,2182,0.393,2183,0.242,2184,0.349,2185,0.349,2186,0.76,2187,0.76,2188,2.535,2189,0.76,2190,0.393,2191,0.393,2192,0.393,2193,3.229,2194,1.032,2195,3.376,2196,0.393,2197,0.393,2198,0.393,2199,0.393,2200,0.393,2201,6.03,2202,1.032,2203,2.371,2204,1.333,2205,3.011,2206,3.725,2207,5.784,2208,4.932,2209,2.371,2210,4.318,2211,2.596,2212,4.18,2213,2.596,2214,3.011,2215,3.011,2216,3.011,2217,3.011,2218,4.573,2219,0.393,2220,5.247,2221,2.281,2222,3.805,2223,3.805,2224,0.393,2225,0.393,2226,0.393,2227,2.281,2228,0.393,2229,0.393,2230,0.393,2231,2.281,2232,0.393,2233,2.775,2234,0.76,2235,0.76,2236,0.393,2237,0.393,2238,0.393,2239,0.393,2240,0.393,2241,0.393,2242,0.393,2243,2.134,2244,1.103,2245,4.895,2246,1.727,2247,1.727,2248,1.727,2249,1.727,2250,0.76,2251,2.012,2252,0.393,2253,0.393,2254,0.393,2255,1.425,2256,0.393,2257,0.393,2258,0.393,2259,0.76,2260,1.285,2261,0.76,2262,0.393,2263,0.393,2264,0.76,2265,0.393,2266,0.393,2267,0.393,2268,1.103,2269,0.393,2270,0.393,2271,0.393,2272,0.393,2273,0.393,2274,0.393,2275,1.032,2276,2.596,2277,1.032,2278,1.425,2279,1.425,2280,1.425,2281,1.882,2282,0.393,2283,0.393,2284,0.393,2285,0.393,2286,0.393,2287,0.393,2288,0.393,2289,0.393,2290,0.393,2291,0.393,2292,1.425,2293,0.76,2294,0.76,2295,0.76,2296,1.103,2297,0.393,2298,0.76,2299,6.096,2300,1.425,2301,1.425,2302,6.355,2303,0.76,2304,1.425,2305,1.425,2306,1.425,2307,0.76,2308,0.76,2309,0.76,2310,0.76,2311,0.76,2312,0.76,2313,1.425,2314,0.76,2315,0.76,2316,0.76,2317,0.76,2318,0.76,2319,0.76,2320,0.76,2321,0.76,2322,0.76,2323,0.76,2324,0.76,2325,0.76,2326,0.76,2327,0.76,2328,0.76,2329,0.76,2330,0.76,2331,0.76,2332,1.425,2333,0.76,2334,0.76,2335,0.76,2336,0.645,2337,0.76,2338,0.76,2339,2.535,2340,2.012,2341,4.152,2342,0.76,2343,0.76,2344,0.76,2345,0.76,2346,0.76,2347,1.425,2348,0.76,2349,0.76,2350,0.76,2351,0.76,2352,0.76,2353,0.76,2354,0.76,2355,1.425,2356,1.425,2357,0.76,2358,0.76,2359,0.599,2360,0.76,2361,0.76,2362,0.76,2363,0.76,2364,0.76,2365,0.76,2366,0.76,2367,0.76,2368,0.76,2369,2.012,2370,0.76,2371,0.76,2372,0.76,2373,0.76,2374,0.76,2375,3.002,2376,1.425,2377,0.76,2378,0.76,2379,0.76,2380,0.76,2381,1.425,2382,0.76,2383,0.76,2384,0.76,2385,1.425,2386,0.76,2387,0.76,2388,0.76,2389,0.76,2390,2.535,2391,0.76,2392,2.012,2393,0.76,2394,0.76,2395,0.76,2396,0.76,2397,0.76,2398,0.76,2399,0.674,2400,0.76,2401,0.76,2402,0.76,2403,0.674,2404,1.425,2405,0.76,2406,2.012,2407,0.76,2408,1.425,2409,0.76,2410,0.76,2411,0.76,2412,0.674,2413,0.76,2414,0.76,2415,0.76,2416,0.76,2417,0.76,2418,0.76,2419,0.76,2420,1.425,2421,0.76,2422,0.76,2423,0.76,2424,0.76,2425,0.674,2426,0.76,2427,1.425,2428,0.76,2429,1.425,2430,0.76,2431,0.76,2432,0.76,2433,0.76,2434,0.76,2435,0.76,2436,1.425,2437,0.76,2438,0.76,2439,0.76,2440,0.76,2441,0.76,2442,0.76,2443,0.76,2444,0.76,2445,0.76,2446,1.425,2447,0.76,2448,0.76,2449,0.76,2450,0.76,2451,0.76,2452,0.76,2453,0.393,2454,0.393,2455,0.393,2456,0.393,2457,0.393,2458,0.393,2459,0.393,2460,0.393,2461,0.393,2462,0.393,2463,0.393,2464,0.393,2465,0.393,2466,0.393,2467,0.393,2468,0.76,2469,0.76,2470,0.76,2471,0.76,2472,0.76,2473,1.425,2474,1.264,2475,0.393,2476,1.425,2477,0.76,2478,0.76,2479,0.76,2480,0.76,2481,0.76,2482,0.76,2483,0.76,2484,0.76,2485,0.76,2486,0.393,2487,0.393,2488,0.393,2489,0.393,2490,0.393,2491,0.393,2492,0.393,2493,2.535,2494,3.218,2495,2.535,2496,2.012,2497,2.535,2498,2.535,2499,2.535,2500,2.535,2501,2.535,2502,9.354,2503,2.535,2504,2.535,2505,2.535,2506,1.103,2507,1.103,2508,1.103,2509,1.103,2510,1.103,2511,1.103,2512,1.103,2513,1.103,2514,1.103,2515,1.103,2516,1.103,2517,1.103,2518,1.103,2519,1.103,2520,1.103,2521,1.103,2522,1.103,2523,1.103,2524,1.103,2525,1.103,2526,1.103,2527,1.103,2528,1.103,2529,1.103,2530,0.393,2531,3.619,2532,0.76,2533,2.535,2534,0.76,2535,0.76,2536,0.393,2537,0.76,2538,1.103,2539,0.393,2540,0.393,2541,0.76,2542,0.393,2543,0.393,2544,0.393,2545,1.103,2546,0.393,2547,0.393,2548,0.76,2549,0.393,2550,0.393,2551,0.76,2552,0.393,2553,0.76,2554,0.393,2555,0.349,2556,0.393,2557,0.76,2558,0.393,2559,0.393,2560,0.393,2561,0.393,2562,0.393,2563,0.76,2564,0.393,2565,0.393,2566,0.349,2567,0.393,2568,0.393,2569,0.393,2570,0.393,2571,0.393]],["title/examples/tensorflow-example/#using-albumentations-with-tensorflow",[1,0.998,10,0.94,111,3.538]],["text/examples/tensorflow-example/#using-albumentations-with-tensorflow",[161,3.941,2068,6.817,2069,8.638,2070,8.638]],["title/examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it",[10,0.668,203,2.183,228,2.515,278,1.664,804,3.155,2071,3.299]],["text/examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it",[10,1.507,21,1.289,54,2.392,76,4.114,159,5.554,233,7.436,2071,8.591,2072,8.381,2073,8.381]],["title/examples/tensorflow-example/#run-the-example",[54,1.727,66,4.01]],["text/examples/tensorflow-example/#run-the-example",[1,0.824,6,0.223,12,1.921,21,1.325,66,2.862,86,2.187,105,3.185,111,4.243,124,2.985,151,3.831,183,3.33,188,3.665,189,2.394,194,2.362,201,3.319,206,0.839,209,3.302,216,2.168,217,1.748,224,2.478,249,2.12,270,4.436,281,1.411,292,1.678,295,4.666,306,2.341,308,1.364,329,4.157,384,2.498,408,0.879,419,1.563,497,2.66,584,1.72,585,2.834,612,3.842,804,3.665,905,3.408,1158,5.123,1254,2.12,1257,3.831,1265,3.304,1267,3.527,1391,3.212,1405,3.129,1450,3.527,1480,2.862,1511,2.097,1538,3.387,1570,3.831,1602,3.44,1798,2.806,1857,3.527,1928,3.831,1937,3.665,2068,3.408,2071,3.831,2074,5.324,2075,7.389,2076,4.319,2077,5.566,2078,4.319,2079,8.109,2080,4.319,2081,4.319,2082,4.319,2083,4.319,2084,6.274,2085,3.831,2086,8.109,2087,4.319,2088,3.665,2089,4.319,2090,4.319,2091,4.319,2092,4.319,2093,4.319,2094,4.319,2095,4.319,2096,4.319,2097,4.319,2098,5.123,2099,4.319,2100,4.319,2101,7.389,2102,4.319,2103,4.319,2104,4.319,2105,4.319,2106,4.319,2107,4.319,2108,4.319,2109,4.319,2110,4.319,2111,4.319,2112,4.04,2113,4.319,2114,4.319,2115,4.319,2116,4.319,2117,4.319,2118,3.831,2119,4.319,2120,4.319,2121,3.831,2122,4.319,2123,4.319,2124,4.319,2125,4.319,2126,6.274,2127,4.319,2128,4.319,2129,4.319,2130,4.319,2131,4.319,2132,4.319,2133,4.319,2134,4.319,2135,4.319,2136,4.319,2137,4.319,2138,4.319,2139,4.319,2140,4.319,2141,4.319,2142,4.319,2143,4.319,2144,4.319,2145,3.831,2146,4.319,2147,4.319,2148,4.319,2149,4.319]],["title/examples/tensorflow-example/#an-example-pipeline-using-tfimage",[10,0.828,54,1.315,88,1.21,2150,4.309]],["text/examples/tensorflow-example/#an-example-pipeline-using-tfimage",[]],["title/examples/tensorflow-example/#process-data",[201,2.332,1632,3.401]],["text/examples/tensorflow-example/#process-data",[6,0.378,7,0.789,12,1.929,21,1.608,90,3.595,96,1.225,201,2.25,217,2.274,224,3.055,305,2.999,306,2.295,308,2.225,312,2.196,399,2.774,408,1.189,415,1.92,451,3.073,497,3.595,585,2.637,612,4.022,801,2.162,900,4.342,935,4.954,1026,3.427,1153,6.135,1450,4.767,1512,2.897,1530,2.587,1538,4.176,2074,7.84,2077,6.863,2118,5.179,2121,5.179,2151,7.736,2152,8.641,2153,5.838,2154,5.838,2155,5.838,2156,7.236,2157,5.461,2158,4.954,2159,5.461,2160,5.461]],["title/examples/tensorflow-example/#view-images-from-the-dataset",[6,0.186,404,3.399,1602,2.435]],["text/examples/tensorflow-example/#view-images-from-the-dataset",[1,1.045,6,0.32,7,0.74,10,1.333,12,1.838,21,1.525,72,2.182,88,1.439,96,1.149,144,4.474,146,2.884,164,2.323,166,2.2,194,4.055,200,1.534,201,2.111,217,1.754,224,3.716,293,3.266,304,2.361,306,2.343,308,2.247,369,3.123,399,2.604,418,2.258,420,1.865,824,3.433,854,3.374,953,3.123,971,4.324,1024,3.079,1200,4.474,1478,3.216,1502,3.319,1511,2.66,1512,3.679,1513,3.266,1514,3.079,1515,3.809,1516,3.079,1530,2.428,1538,2.957,1600,4.42,1602,2.55,1637,3.319,1655,4.474,1656,6.863,1658,4.474,1854,3.63,1941,4.65,2150,6.935,2156,5.125,2158,4.65,2161,6.935,2162,7.414,2163,4.861,2164,7.414,2165,7.414,2166,5.479,2167,5.479,2168,5.479,2169,5.479,2170,5.125,2171,5.479,2172,5.479,2173,4.861,2174,5.479,2175,5.479,2176,4.861]],["title/examples/tensorflow-example/#an-example-pipeline-using-albumentations",[1,0.879,10,0.828,54,1.315,88,1.21]],["text/examples/tensorflow-example/#an-example-pipeline-using-albumentations",[1,1.482,7,1.049,21,1.424,25,5.146,88,2.599,96,1.629,111,5.253,146,4.088,161,3.543,189,4.305,201,2.993,289,5.367,292,3.017,347,3.794,495,5.047,1554,3.943,2177,7.766,2178,7.766,2179,7.766,2180,7.766]],["title/examples/tensorflow-example/#create-pipeline-to-process-data",[88,1.21,146,2.424,201,1.775,1632,2.588]],["text/examples/tensorflow-example/#create-pipeline-to-process-data",[6,0.327,7,0.98,12,2.019,21,1.477,84,0.876,96,0.877,146,2.2,161,1.907,164,2.272,166,1.679,201,2.794,203,2.454,207,1.705,216,2.098,217,2.102,224,2.419,281,1.365,291,2.052,297,1.233,305,2.147,306,2.49,307,1.818,308,2.233,312,3.342,313,1.679,318,2.454,384,2.417,399,2.911,408,0.851,415,2.015,473,3.548,484,2.122,497,2.574,612,2.173,651,2.77,670,2.417,679,3.309,680,3.029,700,1.337,716,2.827,801,2.269,824,4.543,900,3.109,935,3.548,1023,2.716,1024,3.443,1025,2.716,1026,2.454,1027,2.716,1031,3.548,1033,3.548,1069,3.708,1109,3.91,1129,2.286,1136,3.198,1153,2.956,1254,2.052,1257,3.708,1265,3.198,1267,3.413,1450,3.413,1478,2.454,1502,2.532,1512,3.04,1530,2.715,1537,3.198,1538,4.31,1602,1.946,1736,2.956,2074,7.215,2077,5.435,2118,3.708,2121,3.708,2152,8.31,2157,3.91,2158,3.548,2159,3.91,2160,3.91,2181,4.18,2182,4.18,2183,2.574,2184,3.708,2185,3.708,2186,6.126,2187,6.126,2188,9.413,2189,6.126,2190,4.18,2191,4.18,2192,4.18,2193,5.199,2194,3.91]],["title/examples/tensorflow-example/#view-images-from-the-dataset_1",[6,0.186,404,3.399,1602,2.435]],["text/examples/tensorflow-example/#view-images-from-the-dataset_1",[189,4.623,217,1.973,292,3.24,308,1.814,330,6.398,556,5.764,1602,3.882,2161,7.801,2193,7.078,2195,7.399]],["title/examples/tensorflow-example/#note",[126,3.411]],["text/examples/tensorflow-example/#note",[91,3.537,161,3.882,1439,7.548,2196,8.508,2197,8.508,2198,8.508,2199,8.508]],["title/examples/tensorflow-example/#what-works",[91,2.516,161,2.761]],["text/examples/tensorflow-example/#what-works",[10,0.37,12,2.037,14,2.866,21,1.642,60,2.106,66,0.749,68,3.011,72,0.819,111,0.764,162,0.764,183,0.739,189,1.14,200,1.676,209,1.49,210,3.445,217,2.3,306,2.483,307,1.232,308,2.248,312,3.158,329,0.749,330,5.866,347,1.292,399,1.926,415,0.932,420,1.142,429,0.887,442,4.166,497,1.267,584,2.836,585,3.554,619,2.585,655,3.101,670,1.638,854,3.061,925,6.023,1129,1.125,1153,5.158,1189,6.778,1250,2.595,1326,3.595,1512,2.467,1515,1.455,1530,0.912,1537,3.101,1538,2.683,1583,2.685,1590,1.391,1600,2.08,1620,1.422,1621,1.455,1673,7.989,1731,0.923,1888,3.922,2074,1.746,2193,4.218,2195,4.41,2200,1.13,2201,7.687,2202,1.057,2203,4.248,2204,1.924,2205,5.004,2206,5.319,2207,7.673,2208,6.823,2209,3.263,2210,5.856,2211,4.649,2212,6.486,2213,4.649,2214,4.649,2215,4.649,2216,4.649,2217,4.649,2218,6.778,2219,1.13,2220,7.47,2221,4.97,2222,6.934,2223,6.934,2224,1.13,2225,1.13,2226,1.13,2227,4.97,2228,1.13,2229,1.13,2230,1.13,2231,4.97,2232,1.13,2233,5.686,2234,2.057,2235,2.057,2236,1.13,2237,1.13,2238,1.13,2239,1.13,2240,1.13,2241,1.13,2242,1.13,2243,3.791,2244,2.832,2245,7.986,2246,4.052,2247,4.052,2248,4.052,2249,4.052,2250,2.057,2251,4.542,2252,1.13,2253,1.13,2254,1.13,2255,3.489,2256,1.13,2257,1.13,2258,1.13,2259,2.057,2260,2.595,2261,2.057,2262,1.13,2263,1.13,2264,2.057,2265,1.13,2266,1.13,2267,1.13,2268,2.832,2269,1.13,2270,1.13,2271,1.13,2272,1.13,2273,1.13,2274,1.13,2275,1.924,2276,4.248,2277,1.924,2278,3.489,2279,3.489,2280,3.489,2281,3.263,2282,1.13,2283,1.13,2284,1.13,2285,1.13,2286,1.13,2287,1.13,2288,1.13,2289,1.13,2290,1.13,2291,1.13]],["title/examples/tensorflow-example/#what-wont-work",[91,2.174,161,2.387,1631,3.399]],["text/examples/tensorflow-example/#what-wont-work",[10,0.258,12,1.917,14,1.016,21,1.529,27,0.885,55,0.608,56,4.624,66,1.344,68,0.871,69,1.268,70,0.302,71,0.857,72,0.305,89,0.476,143,0.498,160,3.547,161,3.201,163,3.706,164,0.8,166,1.026,189,1.911,193,0.69,196,1.134,200,0.847,204,0.542,206,0.279,217,2.214,254,1.509,297,0.424,298,0.844,301,1.124,306,2.255,307,0.333,308,2.119,309,0.677,311,0.677,312,1.8,318,0.45,330,3.512,343,1.134,344,0.541,347,0.946,355,1.249,367,1.861,374,0.69,383,1.275,399,1.82,415,1.819,419,0.734,420,0.642,429,0.619,442,2.902,443,0.637,448,2.382,453,1.344,454,1.209,455,1.249,483,1.041,484,0.73,529,0.808,556,0.993,559,0.917,574,0.437,584,1.664,585,2.498,612,1.328,670,0.443,680,4.303,681,5.275,697,3.385,746,0.993,807,5.92,831,1.8,832,1.8,834,1.509,835,1.509,854,1.573,856,0.917,894,1.344,902,1.174,910,1.134,923,0.68,925,6.896,936,0.705,943,2.498,951,1.1,953,0.819,971,1.134,973,0.587,1026,0.45,1057,1.041,1068,1.174,1078,0.626,1097,1.275,1116,1.8,1153,1.016,1156,1.275,1188,1.1,1189,2.168,1250,1.069,1320,0.68,1365,2.016,1449,1.8,1512,1.268,1515,1.042,1537,1.552,1538,4.027,1540,1.8,1583,2.004,1590,0.972,1600,1.803,1602,0.669,1620,0.53,1644,1.174,1673,6.152,1703,3.411,1724,1.069,1731,0.626,1743,0.542,1853,1.016,1888,2.016,1941,1.722,1990,1.275,2036,1.275,2112,0.717,2158,1.22,2170,0.717,2193,2.168,2194,1.344,2195,3.058,2201,3.671,2202,1.344,2203,1.344,2204,1.344,2205,1.898,2206,3.225,2207,4.477,2208,3.908,2209,2.389,2210,3.908,2211,1.344,2212,2.389,2213,1.344,2214,2.389,2215,2.389,2216,2.389,2217,2.389,2218,2.168,2220,3.225,2243,1.344,2260,0.57,2275,0.717,2276,1.898,2277,0.717,2281,1.344,2292,2.554,2293,1.437,2294,1.437,2295,1.437,2296,2.029,2297,0.767,2298,1.437,2299,7.983,2300,2.554,2301,2.554,2302,8.001,2303,1.437,2304,2.554,2305,2.554,2306,2.554,2307,1.437,2308,1.437,2309,1.437,2310,1.437,2311,1.437,2312,1.437,2313,2.554,2314,1.437,2315,1.437,2316,1.437,2317,1.437,2318,1.437,2319,1.437,2320,1.437,2321,1.437,2322,1.437,2323,1.437,2324,1.437,2325,1.437,2326,1.437,2327,1.437,2328,1.437,2329,1.437,2330,1.437,2331,1.437,2332,2.554,2333,1.437,2334,1.437,2335,1.437,2336,1.22,2337,1.437,2338,1.437,2339,4.178,2340,3.447,2341,6.124,2342,1.437,2343,1.437,2344,1.437,2345,1.437,2346,1.437,2347,2.554,2348,1.437,2349,1.437,2350,1.437,2351,1.437,2352,1.437,2353,1.437,2354,1.437,2355,2.554,2356,2.554,2357,1.437,2358,1.437,2359,1.134,2360,1.437,2361,1.437,2362,1.437,2363,1.437,2364,1.437,2365,1.437,2366,1.437,2367,1.437,2368,1.437,2369,3.447,2370,1.437,2371,1.437,2372,1.437,2373,1.437,2374,1.437,2375,4.786,2376,2.554,2377,1.437,2378,1.437,2379,1.437,2380,1.437,2381,2.554,2382,1.437,2383,1.437,2384,1.437,2385,2.554,2386,1.437,2387,1.437,2388,1.437,2389,1.437,2390,4.178,2391,1.437,2392,3.447,2393,1.437,2394,1.437,2395,1.437,2396,1.437,2397,1.437,2398,1.437,2399,1.275,2400,1.437,2401,1.437,2402,1.437,2403,1.275,2404,2.554,2405,1.437,2406,3.447,2407,1.437,2408,2.554,2409,1.437,2410,1.437,2411,1.437,2412,1.275,2413,1.437,2414,1.437,2415,1.437,2416,1.437,2417,1.437,2418,1.437,2419,1.437,2420,2.554,2421,1.437,2422,1.437,2423,1.437,2424,1.437,2425,1.275,2426,1.437,2427,2.554,2428,1.437,2429,2.554,2430,1.437,2431,1.437,2432,1.437,2433,1.437,2434,1.437,2435,1.437,2436,2.554,2437,1.437,2438,1.437,2439,1.437,2440,1.437,2441,1.437,2442,1.437,2443,1.437,2444,1.437,2445,1.437,2446,2.554,2447,1.437,2448,1.437,2449,1.437,2450,1.437,2451,1.437,2452,1.437,2453,0.767,2454,0.767,2455,0.767,2456,0.767,2457,0.767,2458,0.767,2459,0.767,2460,0.767,2461,0.767,2462,0.767,2463,0.767,2464,0.767,2465,0.767,2466,0.767,2467,0.767,2468,1.437,2469,1.437,2470,1.437,2471,1.437,2472,1.437,2473,2.554,2474,2.266,2475,0.767,2476,2.554,2477,1.437,2478,1.437,2479,1.437,2480,1.437,2481,1.437,2482,1.437,2483,1.437,2484,1.437,2485,1.437,2486,0.767,2487,0.767,2488,0.767,2489,0.767,2490,0.767,2491,0.767,2492,0.767,2493,4.178,2494,5.054,2495,4.178,2496,3.447,2497,4.178,2498,4.178,2499,4.178,2500,4.178,2501,4.178,2502,10.312,2503,4.178,2504,4.178,2505,4.178,2506,2.029,2507,2.029,2508,2.029,2509,2.029,2510,2.029,2511,2.029,2512,2.029,2513,2.029,2514,2.029,2515,2.029,2516,2.029,2517,2.029,2518,2.029,2519,2.029,2520,2.029,2521,2.029,2522,2.029,2523,2.029,2524,2.029,2525,2.029,2526,2.029,2527,2.029,2528,2.029,2529,2.029,2530,0.767,2531,5.529,2532,1.437,2533,4.178,2534,1.437,2535,1.437,2536,0.767,2537,1.437,2538,2.029,2539,0.767,2540,0.767,2541,1.437,2542,0.767,2543,0.767,2544,0.767,2545,2.029,2546,0.767,2547,0.767,2548,1.437,2549,0.767,2550,0.767,2551,1.437,2552,0.767,2553,1.437,2554,0.767,2555,0.68,2556,0.767,2557,1.437,2558,0.767,2559,0.767,2560,0.767,2561,0.767,2562,0.767,2563,1.437,2564,0.767,2565,0.767,2566,0.68,2567,0.767,2568,0.767,2569,0.767,2570,0.767,2571,0.767]],["title/experimental/installation/",[76,3.523]],["text/experimental/installation/",[1,1.455,3,4.435,23,4.227,76,5.112,124,5.271,139,4.547,159,6.069,278,4.098,344,2.869,1562,5.835,2572,6.766,2573,7.228,2574,6.018,2575,6.766,2576,7.479,2577,7.626,2578,6.766,2579,6.766,2580,6.766,2581,6.766]],["title/experimental/installation/#installation",[76,3.523]],["text/experimental/installation/#installation",[1,1.631,23,4.74,124,5.91,344,3.217,1562,6.542,2572,7.586]],["title/experimental/installation/#install-the-latest-stable-version-from-pypi",[76,2.019,278,1.841,2573,3.247,2574,3.247,2575,3.651]],["text/experimental/installation/#install-the-latest-stable-version-from-pypi",[76,4.239,159,5.724,2576,7.054,2577,8.638]],["title/experimental/installation/#install-the-latest-version-from-the-master-branch-on-github",[76,1.825,139,2.217,278,1.664,2573,2.934,2578,3.299,2579,3.299]],["text/experimental/installation/#install-the-latest-version-from-the-master-branch-on-github",[76,4.218,159,5.695,2576,7.018,2580,7.625,2581,7.625]],["title/experimental/overview/",[2582,6.714]],["text/experimental/overview/",[1,1.879,2,4.51,3,3.9,7,1.038,8,3.129,10,1.039,19,3.203,21,0.889,27,3.559,28,3.685,29,4.718,31,4.51,40,3.079,55,2.445,60,6.42,61,2.107,68,3.5,69,2.868,74,2.282,84,0.826,88,1.518,124,6.806,146,3.041,165,6.104,168,3.771,187,2.9,203,4.51,267,3.559,268,5.126,271,7.049,276,4.086,278,2.585,294,3.16,301,3.203,390,5.72,547,3.755,575,3.293,593,5.126,600,5.31,647,3.829,897,4.086,971,4.56,1005,4.56,1057,4.187,1367,4.904,1534,4.718,1633,4.187,1716,4.187,2176,5.126,2474,5.126,2574,6.063,2581,5.126,2582,5.405,2583,3.62,2584,5.778,2585,5.778,2586,5.778,2587,5.778,2588,7.683,2589,5.778,2590,6.274,2591,5.778,2592,5.778,2593,5.126,2594,5.778,2595,5.778,2596,4.904,2597,5.778]],["title/experimental/overview/#overview",[2582,6.714]],["text/experimental/overview/#overview",[1,1.811,7,1.095,8,2.646,19,4.49,21,1.246,27,4.989,28,5.167,29,6.615,124,6.561,301,4.49,600,5.598,1005,6.393,1534,6.615,1633,5.87,2581,7.187]],["title/experimental/overview/#why-a-separate-library",[8,1.977,647,4.01]],["text/experimental/overview/#why-a-separate-library",[1,1.825,2,3.75,7,0.863,8,2.961,10,1.148,31,4.816,40,3.405,55,2.703,60,6.741,61,2.33,74,2.523,88,1.678,124,6.61,146,3.362,165,6.409,168,4.027,187,3.207,203,4.816,267,3.935,268,5.668,271,7.401,276,4.518,278,2.858,294,3.494,390,6.006,547,4.152,575,3.641,593,5.668,600,4.415,897,4.518,971,5.042,1057,4.629,1367,5.422,1716,4.629,2176,5.668,2474,5.668,2574,6.475,2583,4.003,2584,6.389,2585,6.389,2586,6.389,2587,6.389,2588,8.205,2589,6.389,2590,6.7,2591,6.389,2592,6.389,2593,5.668,2594,6.389,2595,6.389,2596,5.422]],["title/experimental/overview/#documentation",[2,4.213]],["text/experimental/overview/#documentation",[68,5.233,69,4.287,84,1.234,2597,8.638]],["title/experimental/api_reference/augmentations/transforms/",[1,0.879,84,0.658,124,3.183,793,3.761]],["text/experimental/api_reference/augmentations/transforms/",[1,0.54,3,3.434,6,0.295,12,1.485,19,3.605,48,4.332,53,2.894,54,2.169,55,3.216,70,1.365,72,2.59,77,1.798,82,1.845,83,2.63,84,1.018,86,2.649,87,2.11,96,1.365,98,1.102,124,1.956,128,5.253,139,3.878,200,1.821,206,1.263,207,1.53,217,1.539,301,3.605,306,1.511,308,1.414,401,2.17,404,4.227,408,1.69,409,4.344,435,5.507,442,1.243,443,2.519,453,4.31,454,3.878,455,4.006,456,5.2,485,1.944,486,2.066,572,4.46,573,4.627,574,4.551,577,3.878,578,3.059,670,3.762,680,4.713,681,4.6,688,2.301,697,3.707,746,5.253,793,2.312,800,2.855,801,2.409,854,4.681,983,5.998,1060,5.998,1308,5.036,1550,5.653,1669,5.998,1743,5.374,2302,6.085,2598,3.108,2599,4.54,2600,4.54,2601,4.54,2602,8.319,2603,8.632,2604,6.085,2605,6.45,2606,5.998,2607,3.108,2608,6.743,2609,3.108,2610,3.108]],["title/experimental/api_reference/augmentations/transforms/#albumentations-experimental-transforms-augmentationstransforms",[1,0.879,84,0.658,124,3.183,793,3.761]],["text/experimental/api_reference/augmentations/transforms/#albumentations-experimental-transforms-augmentationstransforms",[]],["title/experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms",[2611,7.881]],["text/experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms",[]],["title/experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints",[2612,7.881]],["text/experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints",[6,0.251,48,4.614,53,2.928,54,2.311,55,3.426,70,1.07,77,1.409,82,1.446,83,2.801,84,0.729,86,2.822,87,1.654,96,1.07,98,0.864,128,5.595,200,1.428,206,0.99,207,1.199,301,3.913,401,1.701,408,1.437,409,4.51,435,5.866,443,2.26,453,4.677,454,4.208,455,4.347,456,5.474,485,1.524,486,1.62,572,4.436,573,4.587,574,4.614,577,3.04,578,2.398,688,1.804,746,5.595,800,2.239,801,1.888,854,4.986,983,6.389,1060,6.389,1308,5.364,1550,6.021,1669,6.389,1743,5.724,2599,5.099,2600,5.099,2601,5.099,2602,8.544,2603,8.812,2604,6.603,2605,6.87,2606,6.389]],["title/experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints",[2613,7.881]],["text/experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints",[6,0.299,48,3.784,53,2.802,54,1.895,55,2.809,70,1.393,77,1.835,82,1.883,83,2.297,84,0.949,86,2.314,87,2.153,96,1.393,98,1.124,128,4.588,200,1.859,206,1.289,207,1.561,401,2.215,408,1.712,409,3.996,435,4.811,443,2.942,454,3.958,455,4.089,485,1.984,486,2.109,572,4.269,574,4.793,577,3.958,578,3.122,688,2.349,746,4.588,800,2.915,801,2.459,854,4.089,983,5.239,1060,5.239,1308,4.399,1550,4.938,1669,5.239,1743,4.695,2602,7.832,2603,8.233,2604,7.865,2605,5.634,2606,5.239,2608,5.89]],["title/experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints",[2614,7.881]],["text/experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints",[6,0.297,48,3.74,53,2.792,54,1.873,55,2.777,70,1.377,77,1.814,82,1.861,83,2.27,84,0.938,86,2.287,87,2.128,96,1.377,98,1.111,128,4.535,200,1.837,206,1.274,207,1.543,301,3.637,401,2.19,408,1.7,409,3.966,435,4.755,443,2.908,453,4.348,454,3.912,455,4.041,456,5.229,485,1.961,486,2.085,572,4.238,573,4.264,574,4.757,577,3.912,578,3.086,688,2.321,746,4.535,800,2.881,801,2.43,854,4.041,983,5.178,1060,5.178,1308,4.348,1550,4.881,1669,5.178,1743,4.64,2602,7.789,2603,8.198,2605,5.569,2606,5.178,2608,5.822]],["title/experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints",[2615,7.881]],["text/experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints",[6,0.299,48,3.784,53,2.802,54,1.895,55,2.809,70,1.393,77,1.835,82,1.883,83,2.297,84,0.949,86,2.314,87,2.153,96,1.393,98,1.124,128,4.588,200,1.859,206,1.289,207,1.561,301,3.68,401,2.215,408,1.712,409,3.996,435,4.811,442,2.915,453,4.399,456,5.268,485,1.984,486,2.109,572,4.269,573,5.464,577,3.958,578,3.122,688,2.349,746,4.588,800,2.915,801,2.459,854,4.089,983,5.239,1060,5.239,1308,4.399,1550,4.938,1669,5.239,1743,4.695,2602,7.832,2603,8.233,2605,5.634,2606,5.239,2608,5.89]],["title/external_resources/blog_posts_podcasts_talks/",[1,0.785,114,3.36,115,3.36,116,3.36,117,3.36]],["text/external_resources/blog_posts_podcasts_talks/",[1,1.992,3,3.907,4,6.289,5,4.735,6,0.363,7,1.38,8,2.824,10,1.656,17,4.436,21,1.184,23,4.268,49,2.91,52,2.979,64,4.735,65,5.144,111,5.208,114,6.289,115,6.289,116,6.289,117,6.289,133,3.842,135,6.231,201,2.967,297,1.71,330,3.842,371,3.457,532,3.571,584,3.067,643,4.007,719,4.436,854,3.571,1914,4.735,2173,5.144,2201,7.523,2616,5.798,2617,5.798,2618,5.798,2619,5.798,2620,5.144,2621,5.798,2622,5.798,2623,5.798,2624,5.798,2625,5.798,2626,5.144,2627,5.798,2628,5.798,2629,5.798,2630,5.798,2631,5.798,2632,5.798,2633,5.798,2634,5.798,2635,5.798]],["title/external_resources/blog_posts_podcasts_talks/#blog-posts-podcasts-and-talks-about-albumentations",[1,0.785,114,3.36,115,3.36,116,3.36,117,3.36]],["text/external_resources/blog_posts_podcasts_talks/#blog-posts-podcasts-and-talks-about-albumentations",[]],["title/external_resources/blog_posts_podcasts_talks/#blog-posts",[114,4.942,115,4.942]],["text/external_resources/blog_posts_podcasts_talks/#blog-posts",[1,1.937,6,0.351,7,1.334,8,2.831,10,1.696,21,1.333,23,3.862,49,3.497,52,3.579,64,5.689,65,6.181,111,4.712,133,4.617,135,6.381,201,2.685,297,2.055,330,4.617,371,4.154,532,4.291,584,2.775,643,4.815,1914,5.689,2173,6.181,2201,7.704,2616,6.967,2617,6.967,2618,6.967,2619,6.967,2620,6.181,2621,6.967,2622,6.967,2623,6.967,2624,6.967]],["title/external_resources/blog_posts_podcasts_talks/#podcasts-and-talks",[116,4.942,117,4.942]],["text/external_resources/blog_posts_podcasts_talks/#podcasts-and-talks",[1,1.922,4,7.34,5,6.037,6,0.358,7,1.362,8,2.415,10,1.329,17,5.657,23,4.098,111,5.0,135,5.0,201,2.849,584,2.944,719,5.657,854,4.553,2201,6.037,2625,7.393,2626,6.559,2627,7.393,2628,7.393,2629,7.393,2630,7.393,2631,7.393,2632,7.393,2633,7.393,2634,7.393,2635,7.393]],["title/external_resources/books/",[1,0.998,118,4.439,119,4.439]],["text/external_resources/books/",[1,1.417,3,3.355,13,4.498,14,5.251,21,1.493,44,3.605,45,3.727,118,6.302,119,6.302,135,5.022,201,2.861,304,3.2,733,7.996,1970,6.588,2145,6.588,2626,7.996,2636,9.013,2637,9.013,2638,9.013,2639,9.013,2640,9.013,2641,7.425,2642,7.425,2643,7.425,2644,7.425,2645,7.425,2646,7.425]],["title/external_resources/books/#books-that-mention-albumentations",[1,0.998,118,4.439,119,4.439]],["text/external_resources/books/#books-that-mention-albumentations",[13,4.578,14,5.344,21,1.504,44,3.669,45,3.794,135,5.112,201,2.912,304,3.257,733,8.082,1970,6.705,2145,6.705,2626,8.082,2636,9.11,2637,9.11,2638,9.11,2639,9.11,2640,9.11,2641,7.558,2642,7.558,2643,7.558,2644,7.558,2645,7.558,2646,7.558]],["title/getting_started/bounding_boxes_augmentation/",[7,0.556,51,1.915,52,2.114,78,1.068,79,1.061]],["text/getting_started/bounding_boxes_augmentation/",[1,1.411,3,3.097,6,0.321,7,1.215,8,0.744,10,1.232,12,1.993,19,0.485,21,1.361,23,0.901,27,0.539,28,0.558,33,0.539,42,0.492,43,1.082,46,1.071,50,0.835,51,2.276,52,1.17,54,2.144,55,2.415,59,0.558,61,1.663,69,0.434,70,0.184,72,2.896,74,1.5,77,0.449,78,2.65,79,2.65,81,1.682,83,2.195,84,1.104,85,1.094,86,1.704,88,0.88,89,0.754,91,0.947,95,0.539,96,0.957,97,0.329,98,0.568,106,0.569,107,0.569,108,0.53,109,0.449,110,0.569,126,1.353,146,1.198,161,0.399,164,2.559,166,2.621,167,0.492,168,0.798,172,1.17,179,0.444,183,1.023,187,0.439,200,0.455,201,1.619,206,0.651,207,0.893,211,0.522,217,0.793,222,0.548,223,1.056,224,3.089,227,2.323,228,0.592,229,1.337,249,1.645,251,2.906,258,1.15,267,0.539,273,1.082,274,2.118,281,1.372,284,1.077,285,1.001,286,1.518,288,1.816,291,2.239,292,2.388,293,1.698,294,0.478,295,0.651,297,2.106,300,0.42,301,1.858,303,1.337,304,1.227,305,0.449,306,2.183,307,0.99,308,1.456,309,1.904,311,1.904,312,1.839,313,2.548,322,0.669,323,2.02,331,0.514,335,1.099,344,0.857,347,0.602,355,1.001,356,0.485,359,0.669,361,0.506,364,1.337,367,0.472,369,1.298,372,0.53,374,2.191,378,0.485,382,1.786,401,1.981,405,0.651,406,1.6,407,1.839,408,0.58,410,1.733,411,1.733,412,1.576,413,1.576,415,0.749,419,0.824,420,0.716,427,0.444,429,0.7,430,3.08,431,2.841,432,2.316,442,1.668,443,1.684,451,1.764,452,3.518,453,1.509,454,1.998,455,1.402,456,2.38,464,1.244,475,0.58,477,2.915,479,2.858,481,0.634,482,0.403,483,0.634,484,0.825,493,1.797,495,0.569,496,0.634,501,1.056,529,0.492,575,0.499,578,0.765,584,1.513,585,0.734,591,2.38,632,0.669,647,2.518,649,0.592,651,0.58,679,1.039,716,3.508,813,2.428,827,0.411,845,0.742,856,0.558,874,1.097,897,0.619,936,0.429,940,1.123,953,0.927,964,0.499,989,0.634,1011,1.742,1052,0.569,1058,0.651,1129,1.245,1188,0.669,1191,0.449,1243,1.357,1254,1.118,1266,1.184,1268,1.13,1299,0.669,1300,0.69,1304,1.672,1355,0.651,1359,0.58,1360,0.592,1372,1.694,1391,1.209,1428,2.87,1515,0.449,1517,1.844,1518,0.416,1520,0.439,1521,0.439,1554,1.929,1558,1.056,1563,2.841,1568,0.714,1582,0.669,1602,1.56,1603,0.58,1607,2.197,1620,1.123,1621,1.15,1622,3.307,1623,3.305,1625,0.58,1629,0.558,1630,1.574,1631,1.056,1632,1.28,1633,0.634,1634,0.776,1637,1.379,1639,0.776,1643,1.38,1776,1.209,1796,1.968,1853,1.15,2006,3.103,2025,1.574,2088,1.38,2098,0.714,2183,1.402,2260,3.636,2359,1.283,2399,0.776,2583,1.019,2647,0.714,2648,0.875,2649,1.521,2650,2.973,2651,2.973,2652,2.02,2653,2.02,2654,1.626,2655,1.626,2656,1.626,2657,1.626,2658,0.875,2659,0.875,2660,0.776,2661,2.417,2662,2.02,2663,2.02,2664,2.02,2665,0.714,2666,1.521,2667,0.875,2668,0.875,2669,0.875,2670,0.875,2671,1.626,2672,1.626,2673,0.875,2674,0.875,2675,0.875,2676,0.875,2677,0.875,2678,3.554,2679,2.847,2680,1.283,2681,1.742,2682,4.457,2683,0.776,2684,0.875,2685,0.714,2686,0.875,2687,3.224,2688,3.224,2689,3.992,2690,3.992,2691,3.992,2692,3.992,2693,3.992,2694,3.992,2695,3.992,2696,3.992,2697,3.992,2698,5.597,2699,1.521,2700,2.02,2701,0.875,2702,0.875,2703,0.669,2704,1.244,2705,0.776,2706,0.776,2707,1.442,2708,0.634,2709,0.875,2710,1.54,2711,1.626,2712,1.442,2713,3.351,2714,0.875,2715,0.875]],["title/getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation-for-object-detection",[7,0.556,51,1.915,52,2.114,78,1.068,79,1.061]],["text/getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation-for-object-detection",[]],["title/getting_started/bounding_boxes_augmentation/#different-annotations-formats",[43,2.486,223,3.399,251,1.968]],["text/getting_started/bounding_boxes_augmentation/#different-annotations-formats",[1,1.378,6,0.33,10,1.299,12,1.873,21,1.363,51,3.363,54,2.062,55,2.232,61,2.634,78,2.594,79,2.578,81,2.647,85,2.533,206,1.024,223,3.427,227,2.506,229,3.096,251,3.334,258,3.729,285,3.248,286,2.811,294,2.884,301,4.567,303,3.096,304,2.273,309,2.411,311,2.411,405,3.923,407,3.334,410,3.296,411,3.296,412,3.398,413,3.398,419,2.614,430,3.507,431,3.567,432,3.645,442,3.171,443,3.202,452,3.894,453,4.787,454,4.912,455,4.449,456,5.163,649,3.567,1355,3.923,1428,3.096,1563,3.567,1582,4.035,1602,3.363,1622,3.567,1643,4.476,2025,4.993,2647,4.307,2648,5.274,2649,4.933,2650,4.679,2651,4.679,2652,4.679,2653,4.679,2654,7.224,2655,7.224,2656,7.224,2657,7.224]],["title/getting_started/bounding_boxes_augmentation/#pascal_voc",[431,4.854]],["text/getting_started/bounding_boxes_augmentation/#pascal_voc",[10,1.284,21,1.467,54,2.039,78,2.584,79,2.568,251,3.311,297,2.107,301,3.96,407,2.687,410,4.016,411,4.016,412,4.14,413,4.14,431,4.831,452,4.176,453,4.733,454,4.259,455,4.399,456,5.515,1428,4.193,1602,3.325,2658,7.143,2659,7.143,2660,6.338,2661,6.062,2662,6.338,2663,6.338,2664,6.338]],["title/getting_started/bounding_boxes_augmentation/#albumentations",[1,1.369]],["text/getting_started/bounding_boxes_augmentation/#albumentations",[1,1.764,6,0.237,7,0.901,10,1.662,12,1.647,21,1.025,54,1.903,78,2.399,79,2.384,91,2.771,251,3.171,297,2.727,309,2.224,311,2.224,407,2.507,410,3.041,411,3.041,412,3.135,413,3.135,431,5.701,442,2.926,443,2.954,451,4.437,452,3.535,501,4.331,578,3.135,632,5.1,716,6.571,1428,3.913,1563,4.508,2650,7.478,2651,7.478,2661,5.657,2662,5.913,2663,5.913,2664,5.913,2665,5.443,2666,6.235,2667,6.665,2668,6.665,2669,6.665,2670,6.665]],["title/getting_started/bounding_boxes_augmentation/#coco",[430,3.484]],["text/getting_started/bounding_boxes_augmentation/#coco",[10,1.306,12,1.419,21,1.368,51,3.382,54,2.074,78,2.494,79,2.479,89,2.407,251,3.346,258,5.138,297,2.143,301,4.028,309,2.968,311,2.968,407,2.733,410,3.315,411,3.315,430,4.863,452,3.73,454,4.332,456,4.553,591,4.553,1428,4.265,1602,3.382,2649,6.797,2652,6.446,2653,6.446,2661,6.167,2662,6.446]],["title/getting_started/bounding_boxes_augmentation/#yolo",[432,4.96]],["text/getting_started/bounding_boxes_augmentation/#yolo",[6,0.282,12,1.181,21,1.218,43,2.873,54,1.726,78,2.588,79,2.572,167,3.398,251,2.978,285,3.724,297,2.762,309,3.125,311,3.125,407,2.275,432,4.179,442,3.875,443,3.912,451,4.646,452,3.928,464,6.057,501,3.929,578,2.844,584,3.153,716,6.746,953,4.512,1428,3.549,1563,5.97,2025,4.179,2583,3.788,2650,7.024,2651,7.024,2652,5.364,2653,5.364,2661,5.131,2663,5.364,2664,5.364,2671,7.917,2672,7.917,2673,6.046,2674,6.046,2675,6.046,2676,6.046,2677,6.046]],["title/getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation",[7,0.707,78,1.357,79,1.349]],["text/getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation",[1,1.335,6,0.352,7,1.4,8,2.285,10,1.258,33,4.309,69,3.472,77,1.934,78,2.637,79,2.671,84,1.242,85,3.36,88,2.283,89,2.318,126,3.325,172,3.594,179,3.552,183,2.512,249,3.434,267,4.309,292,2.718,331,4.107,344,2.632,361,4.046,367,3.776,369,3.987,374,3.36,897,4.947,1517,3.396,1568,5.713,1632,3.931]],["title/getting_started/bounding_boxes_augmentation/#step-1-import-the-required-libraries",[8,1.344,183,1.478,344,1.548,374,1.976,420,1.035]],["text/getting_started/bounding_boxes_augmentation/#step-1-import-the-required-libraries",[1,1.648,183,3.538,874,3.329]],["title/getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline",[7,0.556,88,1.081,89,1.363,374,1.976,584,1.639]],["text/getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline",[1,1.277,6,0.168,7,1.05,12,1.901,19,2.621,21,1.576,28,3.016,42,2.657,50,2.429,54,1.911,74,2.644,77,1.307,78,2.193,79,2.18,84,0.957,85,2.271,86,2.946,88,1.242,91,2.783,96,0.992,98,0.801,126,2.247,161,2.158,164,1.482,207,1.988,251,3.485,273,2.247,274,3.517,281,2.761,288,3.016,291,2.321,292,1.837,297,1.395,306,2.457,307,2.912,308,2.116,309,2.234,311,2.234,312,3.485,313,2.689,344,1.779,364,3.931,382,2.52,427,2.401,430,3.774,431,3.198,432,3.268,452,2.808,477,2.819,479,2.963,496,3.426,651,3.133,679,3.055,845,4.013,1129,3.662,1254,3.286,1266,3.481,1268,3.323,1304,4.563,1515,2.429,1607,2.735,1625,3.133,2183,4.124,2359,3.732,2666,4.423,2678,7.908,2679,8.454,2680,3.732,2681,3.618,2682,3.862,2683,4.195]],["title/getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility",[477,3.608,479,3.791]],["text/getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility",[1,1.566,6,0.352,7,1.435,10,1.149,12,1.465,21,1.153,54,2.588,55,3.682,78,2.765,79,2.765,83,2.212,86,1.545,96,1.961,97,1.667,98,1.27,168,3.137,211,2.642,222,2.777,251,1.667,274,4.754,297,1.885,304,2.754,305,2.277,355,2.729,356,2.456,406,4.612,407,1.667,415,2.103,419,1.604,420,1.115,430,2.151,452,1.859,475,2.937,477,5.571,479,5.68,481,3.211,482,2.042,483,3.211,484,3.246,813,5.433,856,2.827,936,2.175,989,3.211,1011,5.737,1052,2.88,1188,3.391,1191,2.277,1243,4.47,1554,4.167,1607,3.697,1629,2.827,1630,4.418,1631,4.154,1632,2.49,1633,3.211,1634,3.932,1637,2.685,1639,3.932,1643,3.761,2183,2.729,2684,4.432,2685,3.619]],["title/getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes",[72,1.834,78,1.195,79,1.188,224,1.819]],["text/getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes",[6,0.301,12,1.901,21,1.3,51,4.311,54,2.412,61,2.44,72,2.665,78,2.603,79,2.587,224,3.337,227,3.18,251,2.517,292,2.6,293,3.989,303,3.928,430,4.102,452,3.544,585,3.023,1554,3.398,1602,3.115,1603,4.434,1622,4.526,1623,4.849,1796,4.625,1853,4.732,2260,4.977,2399,5.937,2681,5.12,2686,6.692,2687,5.679,2688,5.679,2689,5.465,2690,5.465,2691,5.465,2692,5.465,2693,5.465,2694,5.465,2695,5.465,2696,5.465,2697,5.465,2698,6.901]],["title/getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates",[78,0.611,79,0.607,83,0.815,224,0.93,288,1.503,292,0.915,297,0.695,322,1.802,420,0.593,452,1.639,591,1.476]],["text/getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates",[6,0.215,10,1.087,12,1.948,21,1.218,23,3.351,54,2.26,61,2.205,72,3.73,78,2.054,79,2.041,81,3.035,201,2.33,224,3.486,229,3.549,286,3.222,297,2.335,408,1.612,495,3.929,940,4.179,1372,5.888,1620,4.179,1621,4.275,1622,5.355,1623,5.736,1630,4.179,2006,6.465,2260,6.566,2687,6.719,2688,6.719,2689,7.208,2690,7.208,2691,7.208,2692,7.208,2693,7.208,2694,7.208,2695,7.208,2696,7.208,2697,7.208,2698,8.145,2699,5.656,2700,5.364]],["title/getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way",[78,0.748,79,0.744,83,0.998,224,1.139,292,1.12,293,1.719,647,1.911,2088,2.448,2701,2.884]],["text/getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way",[1,1.521,7,1.077,10,1.099,12,1.733,54,1.745,55,3.374,70,1.282,72,3.745,74,2.414,78,2.531,79,2.579,83,3.07,84,1.139,86,2.13,98,1.035,146,3.217,206,1.548,224,3.853,227,3.789,273,2.904,291,3.913,292,2.374,297,1.803,347,2.263,355,3.764,369,3.484,374,2.935,382,3.257,647,5.283,813,5.777,1300,4.823,1620,4.224,1621,4.322,1622,4.134,1623,4.428,1637,3.702,1796,4.224,2260,4.546,2359,4.823,2583,3.829,2680,4.823,2687,5.187,2688,5.187,2689,4.991,2690,4.991,2691,4.991,2692,4.991,2693,4.991,2694,4.991,2695,4.991,2696,4.991,2697,4.991,2698,6.511,2699,5.717,2702,6.112]],["title/getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk",[6,0.121,78,0.88,79,0.874,249,1.664,374,1.629,585,1.532,1517,1.646]],["text/getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk",[1,1.678,6,0.313,7,0.964,8,1.691,10,0.931,12,1.718,21,1.255,27,3.189,43,2.46,51,2.41,55,3.018,61,2.601,72,2.062,74,2.045,78,2.679,79,2.684,83,3.042,187,2.599,201,2.749,217,1.688,224,2.045,227,3.878,228,3.502,249,4.005,251,3.07,273,2.46,284,4.727,288,3.302,297,2.594,304,2.231,306,1.657,308,1.551,323,7.24,335,4.824,359,3.961,372,3.136,378,2.87,415,1.703,430,2.513,431,3.502,432,3.578,452,3.422,591,3.244,827,2.435,874,3.145,964,2.951,1359,3.431,1360,3.502,1391,3.851,1428,4.791,1517,4.269,1518,2.46,1520,2.599,1521,2.599,1558,3.364,1563,4.824,1632,2.909,1776,5.305,1853,3.661,2098,4.228,2681,3.961,2703,3.961,2704,5.458,2705,4.593,2706,4.593,2707,6.328,2708,3.751]],["title/getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes",[6,0.139,7,0.528,78,0.611,79,1.008,88,0.619,172,1.21,292,0.915,369,1.343,374,1.131]],["text/getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes",[72,3.305,78,2.153,79,2.14,224,3.278,292,3.224,293,4.948,374,3.986,452,3.481,584,3.305,591,5.2,1554,4.214,2709,8.299]],["title/getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates",[72,1.481,224,1.468,292,1.444,420,0.935,452,1.559,591,2.33]],["text/getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates",[6,0.307,7,0.853,10,0.782,12,2.145,23,2.412,54,1.242,61,2.301,72,2.512,78,2.411,79,2.396,81,2.184,83,2.183,84,1.235,164,3.216,166,3.47,172,2.236,200,1.218,201,2.86,217,1.03,224,2.931,229,2.555,274,3.237,286,3.362,288,2.776,292,1.691,306,2.211,308,0.946,313,3.896,347,1.612,401,3.006,408,1.285,429,1.875,452,3.112,493,3.434,529,2.446,591,2.727,940,3.008,1058,3.237,1372,3.237,1391,3.237,1428,2.555,1607,2.517,1622,4.267,1623,4.571,1637,2.636,1796,3.008,2006,5.152,2260,5.52,2687,5.354,2688,5.354,2689,6.06,2690,6.06,2691,6.06,2692,6.06,2693,6.06,2694,6.06,2695,6.06,2696,6.06,2697,6.06,2698,7.357,2700,3.861,2710,2.943]],["title/getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way",[72,1.149,84,0.412,224,1.139,291,1.416,292,1.12,293,1.719,584,1.149,647,1.911,2088,2.448]],["text/getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way",[6,0.304,7,0.508,10,1.018,12,2.056,21,1.364,50,1.933,54,1.074,55,2.397,72,3.239,74,1.486,78,2.11,79,2.097,81,2.843,83,1.96,84,1.415,86,1.974,126,2.692,146,2.982,164,3.16,166,3.881,200,1.053,201,1.45,206,1.1,207,1.332,217,1.34,224,3.376,227,2.692,251,1.415,281,2.226,291,3.722,292,2.647,295,2.798,300,1.807,303,2.208,306,2.482,307,1.636,308,1.859,309,1.255,311,1.255,312,2.563,313,3.045,364,2.208,374,1.807,382,3.631,401,2.959,429,1.621,430,1.826,452,1.578,493,4.47,575,2.144,584,1.498,647,3.754,679,1.716,1129,2.057,1254,1.846,1266,1.956,1268,1.867,1299,2.878,1304,2.208,1558,2.445,1607,3.276,1622,3.831,1623,4.105,1796,2.6,2006,4.626,2260,2.798,2678,5.299,2682,7.77,2689,3.072,2690,3.072,2691,3.072,2692,3.072,2693,3.072,2694,3.072,2695,3.072,2696,3.072,2697,3.072,2698,4.626,2700,3.338,2710,3.831,2711,5.665,2712,5.026,2713,8.133,2714,3.762,2715,3.762]],["title/getting_started/bounding_boxes_augmentation/#examples",[54,2.049]],["text/getting_started/bounding_boxes_augmentation/#examples",[1,1.762,6,0.275,7,1.248,10,1.66,46,4.644,51,3.599,52,4.744,54,2.207,59,4.931,74,3.053,78,2.396,79,2.381,86,2.694,95,4.761,106,5.024,107,5.024,108,4.683,109,3.972,110,5.024]],["title/getting_started/image_augmentation/",[6,0.186,7,0.707,47,3.025]],["text/getting_started/image_augmentation/",[1,1.423,3,3.064,6,0.382,7,1.37,8,2.335,10,1.048,12,1.325,18,2.067,19,1.09,21,1.457,23,1.09,25,1.303,28,2.141,31,1.154,40,1.048,43,0.934,44,0.954,45,0.987,46,0.925,47,1.137,50,1.724,54,2.04,55,0.832,58,1.425,59,1.254,61,1.224,68,1.191,72,1.749,74,2.823,76,2.862,81,0.987,83,1.519,84,1.306,85,2.109,86,1.17,87,2.06,88,2.147,89,1.72,90,1.211,91,0.817,92,1.121,93,1.105,94,1.154,95,1.211,96,0.921,97,0.74,98,1.211,99,1.359,106,1.278,107,1.278,108,1.191,109,1.01,110,1.278,126,0.934,139,1.172,140,1.33,146,2.733,149,1.744,159,1.303,164,0.616,166,2.342,167,1.105,168,2.549,172,3.672,183,2.861,189,3.232,192,1.552,193,2.109,194,3.71,195,2.96,200,1.778,203,1.97,206,0.382,207,1.595,217,1.379,229,1.97,246,1.606,247,1.425,248,3.794,249,3.661,250,1.462,251,2.193,252,1.767,253,1.812,254,2.497,255,2.568,256,2.432,257,2.224,258,1.39,259,2.97,260,2.503,261,1.606,273,0.934,278,0.88,281,2.074,283,1.39,285,1.211,286,1.048,289,1.359,291,2.156,292,3.003,297,0.99,299,1.359,300,0.944,303,1.154,304,1.446,306,2.217,307,1.46,308,1.817,309,1.12,310,3.253,311,1.12,312,1.953,335,1.33,343,2.649,344,1.263,347,1.626,359,1.504,369,1.121,374,3.05,407,0.74,415,1.104,420,1.105,429,0.847,457,1.744,484,0.998,501,1.278,560,2.224,572,0.998,574,1.121,584,1.337,585,0.888,591,2.103,629,0.604,645,1.278,646,5.045,679,0.897,700,0.629,823,2.374,824,1.232,827,0.925,874,2.247,877,2.141,914,1.359,915,1.425,926,1.606,936,0.965,942,1.744,964,2.503,1024,1.105,1052,3.374,1129,1.075,1133,3.896,1134,3.896,1136,2.568,1152,1.744,1175,1.154,1218,1.744,1254,0.965,1266,1.745,1268,0.976,1309,2.181,1343,1.606,1353,1.359,1428,1.154,1517,3.083,1518,0.934,1520,0.987,1521,0.987,1526,4.407,1530,1.488,1553,1.504,1554,1.704,1558,1.278,1631,1.278,1632,2.918,1637,2.033,1736,2.374,1796,2.32,1798,2.181,1852,2.568,2051,1.744,2163,1.744,2403,1.744,2681,1.504,2703,1.504,2708,1.425,2710,1.33,2716,1.966,2717,4.392,2718,5.193,2719,3.357,2720,1.966,2721,1.966,2722,1.966,2723,1.966,2724,1.966,2725,1.966,2726,1.744,2727,1.966,2728,1.744,2729,1.552,2730,1.966,2731,3.357,2732,1.966,2733,1.966,2734,1.966,2735,1.966,2736,1.966,2737,4.407,2738,1.966,2739,1.966,2740,1.966,2741,1.966,2742,1.966]],["title/getting_started/image_augmentation/#image-augmentation-for-classification",[6,0.186,7,0.707,47,3.025]],["text/getting_started/image_augmentation/#image-augmentation-for-classification",[1,1.475,6,0.372,7,1.382,8,2.525,88,2.426,89,2.561,172,3.972,183,2.776,248,3.794,249,4.532,292,3.003,374,3.713,501,5.024,1428,4.538,1517,4.483,1632,4.344,2716,7.731]],["title/getting_started/image_augmentation/#step-1-import-the-required-libraries",[8,1.344,183,1.478,344,1.548,374,1.976,420,1.035]],["text/getting_started/image_augmentation/#step-1-import-the-required-libraries",[1,1.873,6,0.326,8,2.992,10,1.371,18,4.697,19,4.227,21,1.173,44,3.702,45,3.828,54,2.177,76,3.743,85,3.663,183,3.657,248,4.818,249,3.743,251,2.869,335,5.158,343,6.018,874,2.939,1517,3.702,1736,5.393]],["title/getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline",[7,0.556,88,1.081,89,1.363,374,1.976,584,1.639]],["text/getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline",[6,0.35,7,1.396,12,1.448,21,1.534,28,4.017,40,2.313,50,3.235,54,2.32,58,3.145,68,2.63,72,2.951,74,2.487,83,2.564,84,1.286,85,2.085,87,2.8,88,2.136,89,1.438,95,2.673,96,1.321,98,1.462,139,2.588,140,2.936,146,3.9,149,3.851,168,2.13,172,4.434,189,2.406,200,2.075,203,2.548,206,0.843,207,2.03,278,1.942,281,2.819,285,2.673,286,2.313,289,3.0,291,2.13,292,3.158,300,2.085,303,2.548,304,2.713,306,2.005,307,1.888,308,1.611,309,2.101,310,5.093,311,2.101,312,2.788,344,1.633,347,1.608,359,3.321,407,1.633,415,1.428,484,2.204,560,2.876,572,2.204,574,2.474,629,1.333,679,1.981,700,1.389,823,3.069,877,4.017,926,3.545,936,2.13,942,3.851,964,3.589,1024,2.439,1052,2.821,1129,2.374,1152,3.851,1254,2.13,1266,2.257,1268,2.154,1343,3.545,1530,1.924,1554,2.204,1631,2.821,1637,2.63,1796,3.0,2163,3.851,2403,3.851,2717,7.41,2718,8.129,2719,6.297,2720,4.341,2721,4.341,2722,4.341,2723,4.341,2724,4.341,2725,4.341,2726,3.851,2727,4.341,2728,3.851,2729,3.426]],["title/getting_started/image_augmentation/#step-3-read-images-from-the-disk",[6,0.146,249,2.019,374,1.976,585,1.859,1517,1.998]],["text/getting_started/image_augmentation/#step-3-read-images-from-the-disk",[1,1.603,6,0.38,7,1.002,8,2.745,10,1.619,12,1.448,21,1.385,25,3.63,74,2.928,76,2.689,85,2.631,88,1.948,126,2.604,172,2.815,183,2.663,192,4.324,193,2.631,194,2.996,195,3.123,200,1.534,217,1.754,229,4.352,246,4.474,247,3.97,248,4.76,249,4.419,250,4.075,251,3.387,252,3.902,253,4.002,254,5.515,255,5.673,256,5.372,257,4.913,258,3.874,259,5.015,260,4.79,261,4.474,283,3.874,292,2.128,306,1.722,308,1.612,457,4.861,591,3.433,874,3.47,1517,3.599,1518,2.604,1520,2.75,1521,2.75,1553,4.192,1558,3.56,1632,4.166,1796,3.787,1852,5.673,2051,4.861,2681,4.192,2703,4.192,2730,5.479]],["title/getting_started/image_augmentation/#pillow",[646,5.338]],["text/getting_started/image_augmentation/#pillow",[1,1.313,6,0.367,8,2.248,18,4.239,21,1.323,23,3.815,74,2.718,76,4.604,159,4.56,183,3.369,193,4.131,194,5.643,195,5.347,217,2.035,249,3.378,259,4.655,306,1.998,308,1.87,343,5.431,591,4.312,645,4.472,646,7.675,1632,3.868,1798,5.589,2731,8.601,2732,6.882]],["title/getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images",[6,0.164,7,0.623,88,0.758,172,1.482,292,1.12,369,1.644,374,1.385]],["text/getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images",[6,0.386,7,1.3,12,1.268,21,1.35,31,2.657,43,2.151,54,1.292,55,1.915,61,2.367,74,2.997,81,2.272,84,1.466,86,1.578,87,1.468,88,1.189,96,0.95,97,1.703,98,1.285,146,2.382,164,1.418,166,3.524,167,2.544,168,3.724,189,4.594,200,1.817,203,2.657,207,1.526,217,1.071,273,2.151,281,1.479,291,3.185,292,2.948,297,1.914,299,3.128,306,2.416,307,1.969,308,1.986,312,1.703,347,2.404,374,2.174,415,1.489,420,1.633,429,1.951,560,2.999,584,1.803,823,3.201,824,2.836,827,2.129,914,3.128,915,3.28,964,2.58,1052,4.931,1133,6.732,1134,6.732,1136,4.966,1175,2.657,1218,4.016,1266,2.353,1309,4.218,1353,3.128,1526,7.034,1530,2.006,1554,2.298,1637,2.742,1736,3.201,2708,3.28,2710,3.062,2733,4.527,2734,4.527,2735,4.527,2736,4.527,2737,7.034,2738,4.527,2739,4.527,2740,4.527,2741,4.527,2742,4.527]],["title/getting_started/image_augmentation/#examples",[54,2.049]],["text/getting_started/image_augmentation/#examples",[1,1.488,6,0.353,7,1.386,46,3.669,54,2.227,59,4.976,86,2.719,88,2.05,89,2.585,90,4.805,91,3.243,92,4.447,93,4.384,94,4.58,99,5.392,106,5.07,107,5.07,108,4.726,109,4.008,110,5.07]],["title/getting_started/installation/",[76,3.523]],["text/getting_started/installation/",[1,1.872,3,4.434,10,1.232,23,3.799,30,5.597,76,5.235,132,5.409,139,4.086,159,5.685,278,4.19,344,2.579,1562,5.244,2572,6.081,2573,7.39,2574,6.77,2575,6.081,2576,7.006,2578,6.081,2579,6.081,2580,6.081,2743,9.642,2744,9.18,2745,6.854,2746,6.854,2747,7.611]],["title/getting_started/installation/#installation",[76,3.523]],["text/getting_started/installation/#installation",[1,1.639,23,4.764,344,3.233,1562,6.576,2572,7.625]],["title/getting_started/installation/#install-the-latest-stable-version-from-pypi",[76,2.019,278,1.841,2573,3.247,2574,3.247,2575,3.651]],["text/getting_started/installation/#install-the-latest-stable-version-from-pypi",[1,1.648,76,4.239,159,5.724,2576,7.054]],["title/getting_started/installation/#install-the-latest-version-from-the-master-branch-on-github",[76,1.825,139,2.217,278,1.664,2573,2.934,2578,3.299,2579,3.299]],["text/getting_started/installation/#install-the-latest-version-from-the-master-branch-on-github",[30,7.018,76,4.218,159,5.695,2576,7.018,2580,7.625]],["title/getting_started/installation/#install-the-latest-stable-version-from-conda-forge",[76,1.825,278,1.664,2573,2.934,2574,2.934,2743,3.478,2744,3.478]],["text/getting_started/installation/#install-the-latest-stable-version-from-conda-forge",[1,1.801,10,1.442,76,4.923,132,6.332,2743,9.876,2744,9.382,2745,8.024,2746,8.024,2747,8.375]],["title/getting_started/keypoints_augmentation/",[7,0.818,53,1.694]],["text/getting_started/keypoints_augmentation/",[1,1.385,3,3.074,6,0.334,7,1.19,8,0.786,10,1.223,12,1.906,17,1.028,19,0.745,21,1.427,27,0.827,28,0.857,33,0.827,36,1.352,42,0.755,43,0.638,44,1.585,45,1.639,46,1.131,50,0.69,52,1.677,53,2.927,54,1.942,55,1.682,61,0.877,69,0.667,72,1.821,74,2.181,78,0.624,79,0.842,81,1.639,83,1.758,84,1.27,85,1.91,86,2.279,88,1.335,89,2.333,91,1.0,96,0.505,98,0.407,126,1.89,146,1.266,164,2.442,166,2.915,167,1.352,172,1.677,179,0.682,183,1.642,187,2.551,189,0.745,200,0.914,201,1.532,206,0.634,207,0.935,209,2.407,210,1.978,211,0.801,217,1.082,220,1.743,222,0.842,223,0.873,224,2.944,227,3.347,229,0.789,249,2.245,251,2.988,267,2.011,273,0.638,278,0.601,281,1.804,284,0.89,286,1.74,288,1.534,291,2.71,292,2.294,294,0.735,295,0.999,296,1.84,297,1.741,300,1.568,301,0.745,303,0.789,306,2.347,307,1.729,308,1.835,309,1.327,311,1.327,312,2.649,313,1.837,331,0.789,335,1.627,344,0.905,347,1.209,353,0.929,354,4.011,355,1.481,356,1.333,359,1.028,361,0.777,363,2.635,367,0.725,369,1.861,372,2.409,374,2.197,378,0.745,382,2.943,405,0.999,406,2.57,407,2.077,415,1.308,419,0.87,420,0.338,427,0.682,429,0.579,430,1.168,442,2.987,443,3.015,452,3.389,454,2.727,455,3.13,456,1.507,482,1.108,486,0.764,496,0.973,547,1.563,559,0.857,575,0.766,584,0.535,585,0.607,588,3.674,591,1.507,606,2.744,629,0.412,634,0.973,643,1.662,647,1.594,827,0.632,856,0.857,874,1.532,881,0.842,897,0.95,985,1.789,1005,1.06,1129,2.175,1254,1.18,1266,2.067,1268,1.973,1299,2.498,1305,3.438,1313,4.011,1314,3.247,1315,4.135,1316,2.666,1317,3.374,1318,2.041,1321,1.192,1323,3.528,1355,0.999,1359,0.89,1360,0.909,1391,2.429,1428,1.412,1431,1.192,1515,1.236,1517,2.467,1518,0.638,1520,0.674,1521,0.674,1554,2.019,1558,2.584,1563,0.909,1568,1.097,1602,1.12,1603,2.635,1607,2.299,1625,0.89,1630,2.257,1631,1.563,1632,0.755,1637,0.814,1739,2.041,1776,0.999,1854,0.89,2025,2.257,2098,1.097,2183,2.011,2583,1.507,2665,1.097,2681,1.028,2682,5.751,2683,2.134,2685,1.097,2703,1.028,2704,1.028,2705,1.192,2706,1.192,2707,1.192,2710,2.208,2712,2.134,2748,2.405,2749,2.771,2750,2.771,2751,3.265,2752,1.344,2753,1.344,2754,1.344,2755,2.897,2756,2.25,2757,2.25,2758,1.344,2759,1.344,2760,1.344,2761,2.405,2762,1.344,2763,3.054,2764,3.054,2765,2.771,2766,1.344,2767,1.344,2768,5.011,2769,3.719,2770,2.771,2771,1.344,2772,1.344,2773,1.344,2774,1.344,2775,1.344,2776,1.344,2777,1.344,2778,1.344,2779,1.344,2780,1.344,2781,2.897,2782,1.344,2783,1.344,2784,1.344,2785,1.344,2786,2.405,2787,2.405,2788,2.405,2789,4.573,2790,1.344,2791,1.964,2792,1.192,2793,1.192,2794,1.344]],["title/getting_started/keypoints_augmentation/#keypoints-augmentation",[7,0.818,53,1.694]],["text/getting_started/keypoints_augmentation/#keypoints-augmentation",[1,1.003,6,0.315,10,0.945,12,1.408,17,4.023,19,2.914,21,1.265,36,2.955,44,3.5,45,3.618,46,2.473,52,4.226,53,2.989,54,1.501,74,2.076,85,2.525,89,1.742,91,2.186,183,1.888,187,4.655,211,3.134,223,3.417,224,2.076,227,2.499,288,3.353,297,2.611,300,3.462,301,2.914,372,4.983,405,3.911,406,2.955,419,2.609,430,3.5,442,3.611,443,3.646,452,3.712,454,3.134,456,4.517,547,4.685,588,4.051,591,3.294,606,3.891,629,1.614,634,3.81,881,3.294,1005,4.149,1355,3.911,1428,3.086,1554,2.669,1602,3.356,1603,4.777,2025,4.982,2583,3.294,2748,7.209,2749,6.118,2750,6.118,2751,8.227,2752,5.258,2753,5.258,2754,5.258,2755,4.664,2756,4.918,2757,4.918,2758,5.258,2759,5.258,2760,5.258,2761,7.209,2762,5.258,2763,4.918,2764,4.918,2765,4.462,2766,5.258,2767,5.258]],["title/getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates",[53,1.289,85,2.212,251,1.733,452,1.932]],["text/getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates",[21,1.587,53,2.889,89,3.419,407,3.882,442,4.53,443,4.573,452,4.328,588,5.272,606,5.064,1315,5.699,1316,5.62,1317,7.299,1318,5.841]],["title/getting_started/keypoints_augmentation/#augmenting-keypoints",[7,0.818,53,1.694]],["text/getting_started/keypoints_augmentation/#augmenting-keypoints",[1,1.346,6,0.338,7,1.403,8,2.304,10,1.268,33,4.344,53,2.906,69,3.501,78,1.83,79,1.819,84,1.248,85,3.388,88,2.295,89,2.337,126,3.352,172,3.624,179,3.582,183,2.533,249,3.462,267,4.344,286,3.759,292,2.74,331,4.141,344,2.654,361,4.079,367,3.808,369,4.021,374,3.388,897,4.988,1517,3.425,1568,5.761,1632,3.964,1854,4.674,2665,5.761]],["title/getting_started/keypoints_augmentation/#step-1-import-the-required-libraries",[8,1.344,183,1.478,344,1.548,374,1.976,420,1.035]],["text/getting_started/keypoints_augmentation/#step-1-import-the-required-libraries",[1,1.648,183,3.538,874,3.329]],["title/getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline",[7,0.556,88,1.081,89,1.363,374,1.976,584,1.639]],["text/getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline",[7,0.722,10,0.96,12,1.822,21,1.564,28,3.406,42,3.001,50,2.744,53,2.322,54,2.08,78,1.386,79,1.377,84,1.041,85,2.565,86,2.54,88,1.403,89,1.769,91,2.22,98,0.904,126,2.538,164,1.673,189,2.96,207,1.713,209,3.835,251,3.508,273,2.538,281,2.91,288,3.406,292,2.075,300,2.565,306,2.474,307,3.169,308,2.093,309,2.431,311,2.431,312,3.352,313,3.331,363,4.828,382,2.846,452,3.056,496,3.87,1129,3.985,1266,3.788,1268,3.616,1305,5.609,1313,4.214,1314,4.361,1315,5.496,1515,3.743,1607,3.088,1625,3.539,2183,5.108,2681,4.086,2682,4.361,2768,7.561,2769,7.758]],["title/getting_started/keypoints_augmentation/#label_fields",[382,3.825]],["text/getting_started/keypoints_augmentation/#label_fields",[7,0.961,10,1.578,12,1.39,21,1.094,36,3.998,44,3.453,45,3.57,46,3.345,53,2.666,54,2.03,61,2.594,74,3.467,81,3.57,84,1.255,89,2.357,187,3.57,206,1.381,224,3.761,227,4.172,291,4.309,292,2.763,347,3.251,369,4.054,374,3.416,382,3.791,452,2.983,647,4.714,1299,6.717,1603,4.714,2583,4.457,2749,6.037,2750,6.037,2755,6.311,2756,6.654,2757,6.654]],["title/getting_started/keypoints_augmentation/#remove_invisible",[1313,5.664]],["text/getting_started/keypoints_augmentation/#remove_invisible",[1,1.697,6,0.259,7,1.202,12,1.419,53,2.804,54,2.074,86,3.1,209,4.681,267,4.475,291,3.566,292,2.823,354,7.019,355,4.475,356,4.028,406,4.998,415,2.926,482,4.099,486,2.308,1313,7.019,1323,8.887,1431,6.446,1630,6.147,1631,5.78,2770,6.167]],["title/getting_started/keypoints_augmentation/#angle_in_degrees",[1314,5.861]],["text/getting_started/keypoints_augmentation/#angle_in_degrees",[1,1.71,10,1.323,12,1.889,86,3.369,89,2.439,209,3.874,210,4.459,222,4.612,227,3.498,251,3.637,267,4.533,297,2.851,427,3.737,486,2.338,588,5.654,1314,7.321,1315,4.878,1316,6.011,1317,7.608,1318,6.247,1321,6.531,1558,5.826,1739,6.247]],["title/getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk",[6,0.146,53,1.152,249,2.019,585,1.859,1517,1.998]],["text/getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk",[1,1.489,6,0.33,10,1.064,12,1.156,21,1.344,27,3.646,43,2.813,53,2.907,55,2.505,61,2.159,74,2.338,83,3.022,201,3.008,217,1.847,227,2.813,249,4.288,251,3.632,284,3.922,297,1.746,306,1.814,308,1.698,335,5.28,372,3.586,378,3.281,407,2.227,442,3.427,443,3.46,452,3.274,588,3.327,606,3.195,643,5.396,827,2.784,856,3.776,874,3.366,1316,4.834,1359,3.922,1360,4.004,1391,6.498,1428,3.475,1517,4.509,1518,2.813,1520,2.971,1521,2.971,1554,3.964,1558,3.847,1563,4.004,1776,4.403,2098,4.834,2703,4.529,2704,4.529,2705,5.252,2706,5.252,2707,5.252,2771,5.919,2772,5.919]],["title/getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes",[6,0.146,7,0.556,53,0.702,79,0.647,88,0.659,172,1.289,292,0.975,369,1.43,374,1.205]],["text/getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes",[1,1.05,6,0.348,7,1.138,10,0.99,12,2.021,21,1.331,53,2.84,54,1.984,55,2.33,72,2.768,74,2.175,81,2.194,83,1.905,84,1.41,86,1.919,88,0.709,96,0.917,98,0.457,126,2.077,146,2.3,164,2.953,166,3.684,167,2.456,172,1.387,200,1.541,201,1.684,206,0.849,207,1.028,210,2.648,217,1.303,220,3.167,224,3.418,227,3.722,229,1.585,251,2.071,278,1.208,281,1.799,286,2.329,291,3.106,292,2.139,294,1.477,295,2.008,296,3.344,303,1.585,306,2.459,307,1.901,308,1.995,309,1.458,311,1.458,312,3.068,313,1.755,347,1.0,353,1.866,354,4.994,355,1.663,356,1.497,359,2.066,363,2.896,382,3.373,406,2.456,415,1.438,429,1.163,452,1.833,454,3.773,455,4.582,559,1.722,575,1.539,591,1.692,647,1.789,985,3.251,1129,2.39,1254,2.145,1266,2.272,1268,2.169,1299,2.066,1305,3.724,1313,3.449,1315,3.649,1554,1.371,1558,1.755,1603,1.789,1607,3.184,1630,1.866,1637,1.636,1739,2.291,2025,1.866,2682,7.228,2683,3.877,2685,2.205,2710,3.724,2712,3.877,2755,2.395,2763,4.088,2764,4.088,2765,3.709,2768,5.371,2769,2.526,2770,3.709,2773,2.7,2774,2.7,2775,2.7,2776,2.7,2777,2.7,2778,2.7,2779,2.7,2780,2.7,2781,4.885,2782,2.7,2783,2.7,2784,2.7,2785,2.7,2786,4.371,2787,4.371,2788,4.371,2789,6.951,2790,2.7,2791,3.569,2792,2.395,2793,2.395,2794,2.7]],["title/getting_started/keypoints_augmentation/#examples",[54,2.049]],["text/getting_started/keypoints_augmentation/#examples",[1,1.648,7,1.167,10,1.553,53,2.418]],["title/getting_started/mask_augmentation/",[7,0.707,49,2.625,77,1.446]],["text/getting_started/mask_augmentation/",[1,1.361,3,3.222,6,0.375,7,1.326,8,1.861,10,1.172,12,1.487,21,1.449,36,1.596,46,2.68,47,1.643,48,3.247,49,3.821,50,2.339,54,1.626,55,2.758,59,1.812,61,1.036,66,1.882,72,1.131,74,2.574,77,2.945,80,1.963,81,2.285,83,1.575,84,1.284,86,1.587,88,1.712,89,1.508,97,2.452,98,0.481,106,1.846,107,1.846,108,1.721,109,1.459,110,1.846,146,1.495,164,2.235,166,2.865,172,2.927,176,2.113,183,2.34,189,1.574,193,1.364,194,2.49,195,1.619,200,1.595,207,1.071,217,1.966,224,1.122,249,3.501,251,1.069,270,2.009,273,2.164,281,0.928,283,2.009,286,1.514,291,2.234,292,2.771,297,0.838,300,1.364,304,2.808,306,2.34,307,1.235,308,1.954,309,1.901,310,2.852,311,1.901,312,2.143,344,1.713,369,1.619,374,3.426,407,1.713,415,0.934,419,1.028,420,1.433,429,2.455,452,1.191,547,1.846,575,1.619,584,1.813,585,1.283,600,1.963,679,1.296,805,2.173,806,2.52,874,3.202,926,2.32,1058,3.386,1129,1.553,1186,2.52,1191,2.339,1254,1.394,1266,1.477,1268,1.41,1309,1.846,1353,1.963,1517,2.21,1518,3.39,1520,1.426,1521,1.426,1530,1.259,1554,2.312,1558,1.846,1602,2.652,1603,3.017,1608,2.009,1632,1.596,1641,2.52,1694,3.483,1770,2.32,1854,1.882,1965,2.32,2025,1.963,2068,2.242,2583,1.78,2606,2.242,2620,2.52,2660,2.52,2665,2.32,2703,2.173,2704,2.173,2710,3.079,2795,2.84,2796,2.84,2797,4.553,2798,2.84,2799,4.553,2800,2.84,2801,4.553,2802,2.84,2803,2.84,2804,4.039,2805,2.32,2806,2.52]],["title/getting_started/mask_augmentation/#mask-augmentation-for-segmentation",[7,0.707,49,2.625,77,1.446]],["text/getting_started/mask_augmentation/#mask-augmentation-for-segmentation",[1,1.297,6,0.371,7,1.411,8,2.221,21,1.046,46,3.198,48,3.875,49,3.413,50,3.493,74,2.685,77,2.843,86,2.37,88,2.243,89,2.253,97,3.211,98,1.152,172,4.385,183,2.442,200,2.39,249,3.337,273,4.056,283,4.808,286,3.624,292,2.641,304,3.678,344,2.558,429,3.678,575,3.875,1517,3.301,1632,3.821,1641,6.032,1854,4.505,2665,5.552]],["title/getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline",[7,0.39,8,0.942,88,0.758,89,0.956,183,1.036,344,1.085,374,1.385,420,0.725,584,1.149]],["text/getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline",[1,1.335,6,0.309,7,1.174,12,1.367,21,1.52,36,3.931,47,4.046,77,1.934,80,4.835,84,1.0,97,2.632,183,3.12,207,2.043,281,2.285,306,2.362,307,3.043,308,2.055,309,2.334,310,5.444,311,2.334,312,3.556,374,4.173,420,1.76,584,2.786,679,3.192,874,2.696,1129,3.826,1254,3.434,1266,3.637,1268,3.472,1530,3.1,1608,4.947,2795,6.996]],["title/getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk",[6,0.132,77,1.028,249,1.825,374,1.786,585,1.68,1517,1.805]],["text/getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk",[1,1.39,6,0.35,7,0.722,8,1.744,10,1.31,12,1.62,21,1.515,48,3.044,49,3.657,50,2.744,54,1.524,55,2.26,66,3.539,74,2.878,77,2.81,81,2.681,83,1.848,97,2.009,146,2.811,164,1.673,166,2.145,193,2.565,194,3.985,195,3.044,217,2.277,249,4.071,251,2.009,297,1.575,300,2.565,304,2.301,306,2.288,308,2.093,309,2.431,311,2.431,452,2.24,547,3.47,600,3.691,806,4.738,874,3.796,926,4.361,1058,5.42,1186,4.738,1191,2.744,1518,4.432,1520,2.681,1521,2.681,1558,3.47,1602,3.392,1770,4.361,2068,4.214,2606,4.214,2620,4.738,2660,4.738,2703,4.086,2704,4.086,2796,5.341,2797,7.286,2798,5.341,2799,7.286,2800,5.341,2801,7.286,2802,5.341,2803,5.341]],["title/getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks",[6,0.146,7,0.556,77,1.138,88,0.659,172,1.289,292,0.975,369,1.43,374,1.205]],["text/getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks",[6,0.38,7,1.128,10,0.972,12,1.436,21,1.13,49,2.715,55,3.533,61,1.972,72,2.154,74,2.136,77,3.0,81,2.715,83,1.871,84,1.473,164,2.806,166,3.597,176,4.023,189,2.998,200,1.514,217,1.739,224,2.136,270,3.825,291,3.607,292,3.243,304,2.331,306,2.395,308,1.598,407,2.765,415,1.779,419,1.957,420,1.36,429,2.331,805,4.138,1191,2.779,1309,3.515,1353,3.738,1554,3.732,1602,2.518,1603,4.87,1694,5.624,1965,4.417,2025,3.738,2583,3.389,2710,4.971,2804,6.521,2805,4.417,2806,4.799]],["title/getting_started/mask_augmentation/#examples",[54,2.049]],["text/getting_started/mask_augmentation/#examples",[1,1.553,6,0.29,7,1.1,10,1.463,46,4.477,48,4.639,49,4.085,54,2.323,59,5.192,86,2.837,106,5.289,107,5.289,108,4.931,109,4.182,110,5.289]],["title/getting_started/setting_probabilities/",[7,0.556,84,0.588,86,1.434,87,1.335,88,1.081]],["text/getting_started/setting_probabilities/",[1,1.034,3,3.102,6,0.288,7,1.352,10,1.122,12,1.965,21,1.352,50,2.203,54,2.1,55,1.116,61,2.276,84,0.981,86,2.993,87,3.107,88,1.804,89,0.874,96,2.045,98,0.447,103,1.652,161,2.847,164,0.826,166,1.059,172,2.203,183,1.54,200,2.339,201,2.988,206,0.512,207,1.9,211,2.556,213,2.314,217,1.741,229,2.517,262,1.482,273,1.253,281,2.729,285,2.641,286,2.285,292,1.024,297,1.841,298,1.548,303,2.517,304,2.335,305,1.355,306,2.149,307,1.865,308,1.6,312,2.038,313,1.722,314,3.281,317,4.424,318,1.548,319,5.419,358,1.783,374,1.266,380,3.59,405,1.961,415,0.867,419,1.961,420,1.851,451,3.285,482,1.976,486,1.982,495,4.056,697,3.914,700,1.996,716,2.9,805,2.018,814,3.383,874,2.405,877,1.682,953,2.444,964,3.914,1170,2.467,1243,2.556,1247,3.639,1251,3.383,1258,1.865,1259,2.238,1268,1.309,1269,2.238,1274,2.238,1275,4.674,1278,1.911,1279,1.652,1284,2.238,1285,2.081,1332,5.159,1341,2.153,1405,4.522,1455,2.339,1458,2.339,1461,4.642,1518,1.253,1520,1.324,1521,1.324,1554,2.177,1607,1.525,1630,1.822,1637,1.597,1644,2.153,1685,2.339,1796,1.822,1853,5.908,1872,2.339,2185,2.339,2336,5.827,2555,2.339,2710,1.783,2729,2.081,2807,2.339,2808,7.737,2809,2.637,2810,6.6,2811,2.637,2812,6.6,2813,5.068,2814,2.637,2815,2.637,2816,2.637,2817,4.011,2818,2.637,2819,2.637,2820,2.637,2821,2.637,2822,2.637,2823,2.339,2824,2.637,2825,2.637,2826,2.637,2827,5.418,2828,4.287,2829,2.637,2830,2.637]],["title/getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline",[7,0.556,84,0.588,86,1.434,87,1.335,88,1.081]],["text/getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline",[1,1.213,6,0.309,7,1.172,10,0.79,12,2.099,21,1.519,50,3.265,54,1.255,61,2.318,84,1.169,86,2.85,87,2.062,88,1.67,96,1.566,98,0.745,103,2.755,164,1.378,166,1.766,183,2.283,200,2.09,201,2.876,206,0.854,207,2.245,217,2.052,229,2.581,281,2.076,285,3.915,286,3.388,297,2.202,303,3.731,305,2.259,306,2.389,307,2.764,308,1.966,312,2.808,313,2.553,314,3.364,358,2.974,380,2.914,420,1.106,451,2.314,482,2.929,486,2.598,874,3.151,877,2.805,964,3.623,1170,4.113,1243,3.789,1247,5.394,1251,5.016,1258,3.109,1259,3.732,1268,2.182,1269,3.732,1274,3.732,1275,2.543,1278,3.186,1279,2.755,1284,3.732,1285,3.47,1332,2.581,1461,3.271,1518,2.09,1520,2.207,1521,2.207,1607,2.543,1796,3.039,1872,3.901,2555,3.901,2710,2.974,2807,3.901,2808,6.335,2809,4.397,2810,6.096,2811,4.397,2812,6.096,2813,4.113,2814,4.397,2815,4.397]],["title/getting_started/setting_probabilities/#p1",[2808,6.091]],["text/getting_started/setting_probabilities/#p1",[6,0.286,7,1.416,54,1.77,55,2.624,86,3.114,87,3.068,88,2.115,96,2.056,161,2.829,200,2.253,211,4.798,213,3.347,262,3.485,273,2.947,281,3.201,297,1.829,298,3.64,317,5.064,318,3.64,319,4.894,415,2.04,419,3.234,420,2.379,495,4.03,700,1.984,964,3.535,1275,3.586,1332,3.64,1341,5.064,1405,4.493,1554,4.087,1853,6.93,2336,5.263,2729,4.894,2808,8.523,2810,5.064,2812,5.064,2816,6.201,2817,5.801,2818,6.201,2819,6.201]],["title/getting_started/setting_probabilities/#p2",[2810,5.861]],["text/getting_started/setting_probabilities/#p2",[6,0.279,7,1.059,21,1.206,54,2.237,61,2.858,86,2.732,87,3.02,96,2.084,200,2.194,213,4.231,281,2.56,317,6.401,495,5.093,1275,5.384,1455,6.954,1853,5.542,2185,6.954,2810,7.603,2820,7.838]],["title/getting_started/setting_probabilities/#p3",[2812,5.861]],["text/getting_started/setting_probabilities/#p3",[1,1.095,7,1.328,10,1.547,54,1.638,86,2.0,87,3.254,89,1.901,96,2.105,172,3.929,200,2.408,201,3.536,217,1.358,229,3.369,281,1.875,292,2.229,304,3.707,314,4.391,317,4.686,319,7.241,374,2.756,380,5.068,420,1.443,451,4.528,495,3.729,700,2.752,805,4.391,814,6.036,964,4.359,1275,4.975,1332,6.058,1405,6.233,1458,5.091,1461,5.689,1630,3.966,1637,3.476,1644,4.686,1685,5.091,1853,6.083,2336,7.787,2812,4.686,2813,7.155,2817,5.368,2821,5.739,2822,5.739,2823,5.091,2824,5.739,2825,5.739]],["title/getting_started/setting_probabilities/#example-calculations",[54,1.727,405,4.501]],["text/getting_started/setting_probabilities/#example-calculations",[7,1.012,54,2.138,61,2.732,87,2.43,96,1.572,161,4.445,495,4.868,697,5.907,716,6.128,953,5.164,1275,4.332,1461,5.572,2808,8.267,2810,6.117,2812,7.399,2826,7.491,2827,9.741,2828,9.061,2829,7.491,2830,7.491]],["title/getting_started/simultaneous_augmentation/",[7,0.421,53,0.873,77,0.862,78,0.809,79,0.804,80,2.154,81,1.565,82,0.884]],["text/getting_started/simultaneous_augmentation/",[1,1.003,3,3.519,6,0.336,7,1.326,10,0.614,12,1.952,21,1.266,33,3.953,46,1.605,47,3.042,49,2.64,51,2.449,52,2.702,53,2.716,54,2.223,59,2.177,61,1.245,69,3.185,70,0.716,72,1.359,77,2.564,78,2.407,79,2.392,80,3.635,81,1.713,82,2.045,84,1.416,85,1.639,86,1.833,89,1.743,96,0.716,97,1.284,98,0.578,105,2.671,106,2.218,107,2.218,108,2.068,109,1.753,110,2.218,126,2.5,161,1.557,164,2.846,166,3.305,172,1.753,179,1.733,200,1.797,201,2.473,207,0.803,217,1.244,224,2.535,251,2.414,267,2.102,273,1.622,278,2.354,281,1.718,284,2.262,291,2.582,292,2.043,293,2.035,304,2.267,306,2.415,308,1.789,309,1.139,311,1.139,312,1.284,331,3.767,344,1.979,356,1.892,361,1.974,363,2.262,364,2.004,367,1.842,374,3.082,382,2.803,401,2.141,408,0.695,420,0.858,427,1.733,430,2.554,493,2.693,525,2.035,584,1.359,585,1.542,642,2.359,897,2.413,1129,1.867,1266,1.775,1268,1.694,1304,2.004,1305,2.308,1315,2.262,1517,1.657,1602,1.589,1603,2.262,1608,2.413,1626,1.945,1627,3.418,1702,2.787,2021,3.028,2183,2.102,2685,2.787,2710,2.308,2765,2.897,2768,4.464,2781,3.028,2792,3.028,2804,3.028,2831,3.413,2832,6.745,2833,6.745,2834,3.413,2835,3.413]],["title/getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints",[7,0.421,53,0.873,77,0.862,78,0.809,79,0.804,80,2.154,81,1.565,82,0.884]],["text/getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints",[1,1.532,6,0.336,7,1.356,10,1.111,12,1.743,33,4.945,47,3.573,49,3.101,51,2.876,52,3.174,53,2.74,54,1.764,61,2.253,69,3.985,70,1.296,77,2.465,78,2.54,79,2.524,80,4.27,82,1.752,84,1.399,85,2.967,86,2.153,96,1.296,97,2.324,126,3.816,161,2.819,179,3.137,200,2.248,201,2.381,224,3.171,267,3.805,291,3.941,292,2.4,293,3.684,331,4.714,344,2.324,361,3.573,367,3.335,408,1.258,642,4.27,897,4.369,1608,4.369,1702,5.046,2685,5.046,2831,6.179]],["title/getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints",[53,0.751,78,0.696,79,0.692,89,0.889,98,0.454,251,1.01,281,0.877,374,1.289,420,0.675,427,1.363]],["text/getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints",[12,1.836,21,1.558,84,0.988,164,2.945,207,1.625,217,1.635,251,3.244,281,2.257,306,2.499,308,2.202,309,2.306,311,2.306,312,2.6,363,4.579,364,4.057,382,4.595,430,3.355,1129,3.779,1266,3.593,1268,3.429,1304,4.057,1305,4.674,1315,4.579,1626,3.939,1627,5.603,2768,7.318,2832,6.464,2833,6.464]],["title/getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk",[105,1.888,201,1.433,344,1.399,374,1.786,584,1.481,1517,1.805]],["text/getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk",[6,0.336,7,1.334,12,1.928,21,1.072,33,4.291,47,4.029,49,3.497,51,3.243,52,3.579,53,2.641,54,2.474,69,3.458,72,2.775,77,2.607,78,2.448,79,2.433,89,2.308,105,3.537,200,1.95,201,2.685,224,2.752,273,3.311,284,4.617,304,3.735,331,4.09,356,3.862,430,3.382,1602,3.243,1603,4.617,2021,6.181,2183,4.291,2765,5.913,2792,6.181]],["title/getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions",[7,0.421,82,0.884,84,0.445,172,1.601,278,1.395,292,1.211,374,1.497,585,1.408]],["text/getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions",[6,0.325,7,0.877,12,1.985,53,2.556,77,2.523,82,1.84,84,1.495,164,3.185,166,4.082,217,1.535,278,2.902,306,2.515,308,1.41,401,3.046,493,5.119,525,3.867,2710,4.387,2781,5.755,2804,5.755,2832,8.539,2833,8.539,2834,6.486,2835,6.486]],["title/getting_started/simultaneous_augmentation/#examples",[54,2.049]],["text/getting_started/simultaneous_augmentation/#examples",[6,0.297,7,1.127,46,3.922,54,2.381,59,5.32,86,2.907,106,5.42,107,5.42,108,5.052,109,4.285,110,5.42]],["title/getting_started/transforms_and_targets/",[82,1.306,83,1.594,84,0.658,85,2.212]],["text/getting_started/transforms_and_targets/",[1,0.647,3,2.889,6,0.276,7,0.458,8,1.108,21,0.522,25,2.248,28,2.164,35,3.01,53,2.012,69,1.684,74,1.34,75,2.523,77,1.987,78,1.659,79,1.649,80,2.345,82,2.426,83,1.811,84,1.4,85,2.515,96,1.098,168,3.138,173,2.596,179,1.723,187,3.209,200,2.012,213,1.831,216,1.703,284,2.248,288,4.078,302,5.802,305,1.743,331,1.992,358,2.295,375,2.164,379,2.879,380,2.248,384,1.962,401,1.132,407,2.704,415,1.116,451,1.786,482,1.563,572,1.723,575,1.934,590,2.248,729,2.77,742,2.596,797,2.164,836,2.77,870,2.879,912,2.879,998,2.879,1158,2.77,1243,2.023,1244,3.173,1245,2.879,1246,2.458,1247,2.879,1249,2.345,1251,2.677,1252,3.173,1253,3.173,1254,1.665,1255,2.879,1256,3.173,1258,2.399,1259,2.879,1260,2.879,1261,2.677,1262,2.523,1263,3.173,1264,2.248,1266,1.764,1268,1.684,1269,2.879,1270,2.596,1271,2.677,1272,3.173,1273,2.77,1274,2.879,1275,1.962,1276,2.879,1277,2.596,1278,2.458,1279,2.126,1280,2.77,1281,2.77,1282,2.126,1283,2.055,1284,2.879,1285,2.677,1286,2.879,1287,3.173,1288,2.164,1365,2.677,1398,2.879,1461,2.523,1462,3.173,1463,2.879,1464,3.173,1465,2.879,1466,2.879,1467,3.173,1553,2.596,1554,1.723,1629,5.236,1690,3.01,2183,3.225,2583,2.126,2729,4.132,2807,3.01,2836,3.393,2837,3.01,2838,3.393,2839,11.246,2840,3.393,2841,3.393]],["title/getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets",[82,1.306,83,1.594,84,0.658,85,2.212]],["text/getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets",[6,0.335,7,0.938,8,2.266,21,1.067,35,6.156,53,2.42,69,3.443,74,2.74,75,5.161,77,2.389,78,2.243,79,2.229,80,4.795,82,2.452,84,1.449,168,4.243,187,4.339,200,2.42,284,4.598,288,6.006,302,6.175,331,4.073,407,3.252,575,3.955,1158,5.666,1554,3.523,1629,5.514,1690,6.156,2583,4.347,2729,5.476,2836,6.938]],["title/getting_started/transforms_and_targets/#pixel-level-transforms",[84,0.748,302,3.277,407,1.968]],["text/getting_started/transforms_and_targets/#pixel-level-transforms",[6,0.236,25,4.399,28,4.235,53,1.859,77,1.835,78,1.723,79,1.712,82,2.385,83,2.297,84,1.319,96,1.393,168,3.258,187,3.332,200,2.354,213,3.584,302,5.268,379,5.634,380,4.399,384,3.84,407,2.498,415,2.184,451,3.494,729,5.422,742,5.08,797,4.235,836,5.422,870,5.634,912,5.634,1244,6.21,1245,5.634,1246,4.811,1251,5.239,1252,6.21,1253,6.21,1255,5.634,1256,6.21,1261,5.239,1262,4.938,1263,6.21,1266,3.452,1270,5.08,1271,5.239,1273,5.422,1277,5.08,1280,5.422,1281,5.422,1282,4.16,1285,5.239,1286,5.634,1287,6.21,1461,4.938,1463,5.634,1466,5.634,1467,6.21,1553,5.08,1629,4.235,2183,4.089,2729,5.239]],["title/getting_started/transforms_and_targets/#spatial-level-transforms",[84,0.748,302,3.277,1629,3.336]],["text/getting_started/transforms_and_targets/#spatial-level-transforms",[1,0.871,6,0.162,53,1.277,77,1.261,82,1.851,84,1.089,85,2.192,96,0.957,173,3.491,179,2.317,216,2.29,302,4.09,305,2.344,358,3.086,375,2.911,401,1.523,482,2.103,572,2.317,590,3.024,998,3.873,1243,2.72,1247,3.873,1249,3.154,1254,2.24,1258,3.227,1259,3.873,1260,3.873,1264,3.024,1268,2.265,1269,3.873,1272,4.268,1274,3.873,1275,2.639,1276,3.873,1278,3.306,1279,2.859,1283,2.764,1284,3.873,1288,2.911,1365,3.601,1398,3.873,1462,4.268,1464,4.268,1465,3.873,1629,4.164,2183,2.81,2807,4.048,2837,4.048,2838,4.563,2839,11.324,2840,4.563,2841,4.563]],["title/introduction/image_augmentation/",[6,0.121,7,0.458,13,2.054,38,2.054,39,2.089,40,1.807,73,2.522]],["text/introduction/image_augmentation/",[1,0.551,3,2.603,6,0.367,7,1.319,8,0.944,10,1.379,12,0.902,13,4.358,31,4.502,36,1.623,38,4.646,39,4.723,40,3.834,41,2.452,42,2.593,44,2.24,45,2.316,46,3.095,47,2.669,48,1.647,49,2.316,50,1.484,51,2.682,52,2.371,54,2.053,58,3.344,61,1.053,64,2.359,72,1.838,73,5.35,74,3.179,78,0.75,79,0.745,81,1.45,84,0.824,86,2.914,88,0.759,91,1.201,96,0.606,108,1.75,146,3.033,167,4.31,168,1.418,180,1.52,187,2.892,200,0.809,201,2.772,211,1.722,220,2.093,224,2.599,227,2.738,242,3.344,247,2.093,253,1.559,259,1.954,260,1.647,269,2.21,272,3.683,273,1.373,285,1.779,296,3.531,301,1.601,304,1.989,305,2.371,310,2.891,324,2.28,329,6.09,330,5.334,344,2.476,356,1.601,367,1.559,372,1.75,377,2.359,407,2.168,420,0.727,434,2.21,439,2.093,482,1.331,484,2.343,496,2.093,506,1.997,529,1.623,532,1.779,574,1.647,577,1.722,619,3.675,626,3.432,634,4.175,655,2.21,664,3.769,678,2.149,856,1.843,869,2.359,877,1.843,881,1.81,914,4.548,936,1.418,939,2.28,1122,2.452,1200,2.359,1532,3.769,1534,5.374,1562,2.21,1602,2.682,1625,1.914,1632,2.593,1633,2.093,1695,2.452,1697,2.563,1703,3.769,1716,2.093,1736,2.043,1770,4.706,1808,3.642,1852,4.409,1854,3.818,1914,2.359,1915,2.563,1969,2.563,2057,2.563,2068,2.28,2085,2.563,2183,2.842,2218,2.452,2412,4.094,2566,2.563,2583,1.81,2593,4.094,2647,2.359,2680,2.28,2726,2.563,2747,2.563,2805,2.359,2837,4.094,2842,5.762,2843,3.916,2844,2.889,2845,4.615,2846,2.889,2847,2.889,2848,4.094,2849,4.094,2850,2.889,2851,2.889,2852,2.889,2853,2.889,2854,2.889,2855,2.889,2856,2.889,2857,2.889,2858,2.889,2859,4.317,2860,2.889,2861,2.889,2862,2.889,2863,2.889,2864,2.889,2865,2.889,2866,2.889,2867,2.889,2868,2.889,2869,2.889,2870,2.889,2871,2.889,2872,3.916,2873,4.615,2874,2.889,2875,2.889,2876,2.889,2877,2.889,2878,5.762,2879,2.889,2880,2.889,2881,5.762,2882,4.094,2883,2.889,2884,2.889,2885,2.889,2886,2.889,2887,2.889,2888,2.889,2889,2.889,2890,4.615,2891,2.889,2892,2.889,2893,2.889,2894,2.889,2895,2.889,2896,2.889,2897,2.563,2898,2.889]],["title/introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks",[6,0.121,7,0.458,13,2.054,38,2.054,39,2.089,40,1.807,73,2.522]],["text/introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks",[6,0.356,13,3.205,38,3.205,39,3.258,41,4.49,46,3.882,47,3.06,48,3.015,49,2.655,51,3.37,52,2.718,54,2.356,61,1.929,72,2.883,74,3.88,78,1.373,79,1.364,81,2.655,91,2.199,167,4.068,200,1.481,201,3.581,224,3.505,227,2.514,242,5.246,247,3.833,273,2.514,285,3.258,296,5.539,329,6.359,344,3.339,377,4.32,407,1.99,532,3.258,577,3.154,634,3.833,914,3.656,936,2.597,1532,5.912,1602,2.463,1632,2.973,1695,4.49,1697,4.694,1736,3.741,1770,6.74,1852,6.315,1854,5.469,1915,4.694,2057,4.694,2412,6.423,2593,6.423,2680,4.175,2805,4.32,2842,8.253,2843,4.49,2844,5.29,2845,7.24,2846,5.29,2847,5.29,2848,6.423,2849,6.423,2850,5.29,2851,5.29,2852,5.29,2853,5.29,2854,5.29,2855,5.29,2856,5.29,2857,5.29,2858,5.29,2859,4.949,2860,5.29,2861,5.29,2862,5.29,2863,5.29,2864,5.29,2865,5.29]],["title/introduction/image_augmentation/#image-augmentation-to-the-rescue",[6,0.186,7,0.707,2866,5.231]],["text/introduction/image_augmentation/#image-augmentation-to-the-rescue",[6,0.367,7,0.93,31,6.057,50,3.536,54,2.455,84,1.229,96,1.444,146,4.938,167,5.272,168,3.378,220,4.987,227,3.271,269,5.266,272,4.859,304,3.706,329,6.512,372,4.169,914,6.484,1200,5.62,1602,3.204,1632,3.868,1633,4.987,2183,4.239,2867,6.882,2868,6.882,2869,6.882,2870,6.882,2871,6.882]],["title/introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks",[6,0.103,7,0.39,13,1.747,38,1.747,39,1.776,40,1.537,73,2.145,506,1.993,869,2.355]],["text/introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks",[1,0.845,6,0.352,7,1.381,8,1.448,10,1.63,12,1.249,13,3.872,36,2.49,38,4.542,39,4.618,40,3.996,42,3.592,44,3.103,45,3.208,46,2.084,47,2.563,49,2.224,51,2.063,52,2.277,58,4.632,64,3.619,73,5.577,84,0.633,86,3.334,88,1.164,108,2.685,167,2.49,180,2.333,187,3.763,211,2.642,227,2.106,253,2.392,259,2.997,260,2.526,272,2.128,301,2.456,305,3.284,310,4.005,324,3.497,329,4.236,330,6.192,356,2.456,367,2.392,407,2.405,420,1.115,434,3.391,439,3.211,482,2.042,484,3.246,496,3.211,529,2.49,574,2.526,619,4.782,626,4.754,634,4.632,655,3.391,664,5.22,678,3.296,856,2.827,877,2.827,881,2.777,939,3.497,1122,3.761,1534,6.703,1562,3.391,1602,2.063,1625,2.937,1703,5.22,1716,3.211,1808,5.044,1914,3.619,1969,3.932,2068,3.497,2085,3.932,2183,2.729,2218,3.761,2566,3.932,2583,2.777,2647,3.619,2726,3.932,2747,3.932,2837,5.671,2843,3.761,2859,4.146,2872,5.425,2873,6.392,2874,4.432,2875,4.432,2876,4.432,2877,4.432,2878,7.498,2879,4.432,2880,4.432,2881,7.498,2882,5.671,2883,4.432,2884,4.432,2885,4.432,2886,4.432,2887,4.432,2888,4.432,2889,4.432,2890,6.392,2891,4.432,2892,4.432,2893,4.432,2894,4.432,2895,4.432,2896,4.432,2897,3.932,2898,4.432]],["title/introduction/why_albumentations/",[1,1.369]],["text/introduction/why_albumentations/",[1,1.832,3,4.428,6,0.305,7,1.219,8,2.579,9,4.316,10,1.419,11,4.316,12,1.542,13,2.947,14,4.83,15,4.316,16,3.973,17,3.722,18,4.207,19,4.376,20,3.973,21,1.051,24,4.316,25,3.224,26,4.316,27,2.996,31,2.856,40,4.562,43,3.246,44,3.316,45,3.428,46,2.288,47,2.813,48,2.773,49,3.428,50,2.499,51,2.265,52,2.499,58,3.525,77,1.345,78,1.262,79,1.254,84,0.976,85,3.281,86,1.696,88,1.795,91,2.84,108,2.947,137,3.973,139,2.9,140,3.29,141,4.721,165,5.582,187,2.442,194,2.661,200,1.362,201,3.042,228,3.29,248,2.388,258,3.44,259,3.29,273,2.312,289,3.362,300,2.336,329,3.224,330,3.224,347,1.802,372,2.947,390,5.231,423,2.856,529,2.734,559,3.103,591,3.048,600,3.362,626,3.618,637,6.06,730,3.973,827,3.713,1309,3.161,1553,3.722,1632,2.734,1716,3.525,1724,3.618,1888,5.39,1890,4.316,2590,3.973,2596,5.797,2708,3.525,2749,4.129,2750,4.129,2791,3.973,2882,4.316,2897,4.316,2899,4.865,2900,4.865,2901,4.865,2902,4.865,2903,4.865,2904,5.797,2905,4.316,2906,4.316,2907,4.316,2908,4.316,2909,4.316,2910,4.316]],["title/introduction/why_albumentations/#why-albumentations",[1,1.369]],["text/introduction/why_albumentations/#why-albumentations",[]],["title/introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points",[6,0.103,77,0.797,78,0.748,79,0.744,91,1.199,390,1.911,559,1.84,827,1.356,1309,1.874]],["text/introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points",[1,1.523,43,3.795,44,3.877,45,4.008,46,3.756,47,4.618,48,4.552,49,4.725,50,4.103,51,3.718,52,4.103,91,3.32,187,4.008,372,4.838,390,5.292,600,5.519,827,3.756,2749,6.777,2750,6.777]],["title/introduction/why_albumentations/#battle-tested",[165,4.279,2899,6.051]],["text/introduction/why_albumentations/#battle-tested",[8,2.646,9,7.187,10,1.456,11,7.187,12,1.967,13,4.907,14,6.713,15,7.187,16,6.615,17,6.198,18,4.989,19,4.49,20,6.615,21,1.246]],["title/introduction/why_albumentations/#high-performance",[40,3.225,730,4.942]],["text/introduction/why_albumentations/#high-performance",[1,1.733,6,0.323,7,1.017,8,2.968,10,1.353,25,4.986,40,4.842,58,5.452,84,1.075,194,4.115,201,2.899,228,5.089,248,3.693,258,5.321,259,5.089,300,3.614,347,2.787,423,4.417,626,5.597,637,8.06,1553,5.757,1632,4.229,1888,7.17,2897,6.676,2900,7.524,2901,7.524,2902,7.524]],["title/introduction/why_albumentations/#diverse-set-of-supported-augmentations",[7,0.622,85,2.212,86,1.605,108,2.79]],["text/introduction/why_albumentations/#diverse-set-of-supported-augmentations",[1,1.623,6,0.303,7,1.15,43,4.043,85,4.086,273,4.043,2903,8.508]],["title/introduction/why_albumentations/#extensibility",[2596,6.091]],["text/introduction/why_albumentations/#extensibility",[1,1.553,7,1.1,10,1.463,31,4.778,44,3.951,45,4.085,84,1.163,88,2.138,289,5.625,390,5.394,529,4.574,591,5.1,827,3.828,1724,6.054,1890,7.221,2904,6.908]],["title/introduction/why_albumentations/#rigorous-testing",[165,4.279,2590,4.942]],["text/introduction/why_albumentations/#rigorous-testing",[1,1.488,7,1.054,40,4.158,88,2.05,137,6.371,141,6.417,165,5.517,200,2.184,201,3.578,329,5.17,330,5.17,1716,5.653,2596,6.621,2708,5.653,2791,6.371,2882,6.922,2904,6.621,2905,6.922,2906,6.922,2907,6.922,2908,6.922,2909,6.922,2910,6.922]],["title/introduction/why_albumentations/#it-is-open-source-and-mit-licensed",[18,2.837,19,2.553,24,4.086,26,4.086]],["text/introduction/why_albumentations/#it-is-open-source-and-mit-licensed",[19,4.764,21,1.322,27,5.293,139,5.124,140,5.813]],["title/introduction/why_you_need_a_dedicated_library_for_image_augmentation/",[6,0.146,7,0.556,8,1.344,74,1.625,75,3.06]],["text/introduction/why_you_need_a_dedicated_library_for_image_augmentation/",[1,0.876,3,2.73,6,0.373,7,1.373,8,2.499,10,0.971,12,0.898,18,1.287,21,1.252,23,1.158,27,1.287,38,2.142,39,2.177,40,1.114,46,2.161,47,1.209,48,1.191,49,2.306,51,2.139,52,2.36,53,0.585,54,1.543,55,1.496,61,1.675,72,0.832,74,3.216,75,1.554,77,2.115,78,1.402,79,1.393,83,0.723,84,1.28,86,1.601,87,2.383,88,1.836,90,2.177,91,0.869,95,2.177,96,1.788,97,2.628,98,0.915,105,1.061,126,0.993,137,2.887,140,1.414,141,2.443,165,2.5,167,1.987,168,4.183,172,1.074,176,1.554,181,1.554,183,1.27,187,3.84,200,2.336,201,1.362,203,2.075,207,0.831,209,1.1,216,2.306,217,1.43,220,3.329,222,2.215,224,3.022,227,1.68,228,1.414,251,0.786,259,1.414,260,1.191,267,1.287,272,2.595,273,0.993,281,0.683,286,1.884,289,1.444,297,1.355,298,1.227,300,1.004,302,4.958,303,1.227,306,1.777,307,0.909,308,1.597,312,1.728,318,1.227,319,1.649,329,3.581,344,0.786,356,2.995,357,3.137,367,1.908,371,1.246,372,2.142,377,1.707,390,2.343,407,2.763,408,0.426,419,0.756,420,0.526,429,3.297,442,0.917,452,2.266,482,3.023,483,1.514,506,1.444,547,3.927,560,4.347,572,1.061,574,1.191,575,3.982,577,1.246,580,1.287,590,1.385,618,1.649,619,1.333,645,1.358,646,1.554,679,0.954,700,0.669,732,1.774,737,3.0,805,1.599,812,1.209,823,3.249,824,1.309,827,1.663,856,2.255,877,1.333,902,1.707,905,3.626,936,1.026,982,1.287,1026,2.697,1052,1.358,1057,1.514,1136,3.515,1188,1.599,1223,1.599,1254,1.026,1266,1.087,1268,1.037,1306,3.137,1359,1.385,1360,1.414,1412,1.774,1530,0.926,1554,1.061,1563,1.414,1602,2.813,1607,2.045,1622,3.655,1625,1.385,1629,3.854,1630,1.444,1631,1.358,1632,1.174,1694,2.705,1716,1.514,1724,2.63,1736,1.478,1768,2.562,1776,2.63,1852,2.705,1854,2.343,1965,1.707,2025,1.444,2183,2.83,2184,1.854,2359,1.649,2425,1.854,2583,3.386,2590,1.707,2647,1.707,2680,1.649,2704,1.599,2708,3.916,2728,3.137,2737,5.128,2770,1.774,2791,1.707,2793,1.854,2805,2.887,2806,1.854,2823,1.854,2843,1.774,2848,1.854,2849,3.137,2872,3.0,2904,1.774,2905,1.854,2906,1.854,2907,1.854,2908,3.137,2909,1.854,2910,1.854,2911,2.09,2912,3.535,2913,2.09,2914,2.09,2915,2.09,2916,2.09,2917,3.535,2918,2.09,2919,2.09,2920,2.09,2921,2.09,2922,2.09,2923,2.09,2924,3.535,2925,2.09,2926,2.09,2927,2.09,2928,2.09,2929,2.09,2930,2.09,2931,2.09,2932,3.535,2933,2.09,2934,2.09,2935,3.535,2936,2.09,2937,2.09,2938,2.09,2939,2.09,2940,2.09,2941,2.09]],["title/introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation",[6,0.146,7,0.556,8,1.344,74,1.625,75,3.06]],["text/introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation",[1,1.073,6,0.378,7,1.283,8,2.973,10,1.011,12,1.474,18,3.464,21,1.503,23,3.118,54,1.605,83,1.946,84,1.078,90,4.648,96,1.18,167,3.161,168,2.76,183,2.02,187,3.788,216,2.823,217,2.246,220,4.075,222,3.524,259,3.804,286,2.998,300,2.701,306,2.27,308,2.064,372,3.407,482,2.592,560,5.0,580,3.464,590,3.727,645,3.655,646,4.183,823,3.977,824,3.524,856,3.587,902,4.593,1223,4.303,1306,6.695,1625,3.727,1632,3.161,1736,3.977,1852,5.774,1854,5.0,2183,4.648,2583,3.524,2872,4.773,2911,5.624,2912,7.546,2913,5.624,2914,5.624,2915,5.624,2916,5.624,2917,7.546,2918,5.624,2919,5.624,2920,5.624,2921,5.624,2922,5.624,2923,5.624]],["title/introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks",[6,0.084,46,1.108,49,1.182,51,1.097,52,2.008,53,0.659,74,0.93,84,0.337,96,0.494,97,0.886,224,0.93]],["text/introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks",[1,0.71,6,0.377,7,1.349,10,1.01,21,0.572,46,2.642,47,2.152,48,2.121,49,2.82,51,2.615,52,1.911,54,1.604,55,2.377,61,1.357,72,1.482,74,3.361,77,2.573,78,1.956,79,1.944,84,1.331,86,1.297,95,3.46,96,1.854,97,3.202,98,0.951,126,1.768,168,4.337,176,2.767,181,2.767,187,3.785,200,2.607,201,1.434,209,1.958,216,2.82,220,4.071,222,2.331,224,3.593,227,2.67,228,2.516,260,2.121,267,2.291,272,1.787,286,1.983,297,1.657,302,5.945,303,2.184,319,2.936,356,3.752,367,2.008,407,3.422,408,0.758,419,1.346,420,0.936,429,4.012,452,3.162,482,3.119,547,2.418,560,4.485,575,5.036,618,2.936,732,3.158,805,2.847,823,2.631,1136,5.179,1188,2.847,1554,1.889,1563,2.516,1602,3.151,1622,5.1,1629,5.163,1630,2.571,1694,4.298,1965,3.038,2025,2.571,2359,2.936,2425,3.301,2583,4.241,2680,2.936,2708,2.696,2728,4.984,2770,3.158,2791,3.038,2793,3.301,2805,4.588,2806,3.301,2823,3.301,2848,3.301,2849,4.984,2924,5.618,2925,3.721,2926,3.721,2927,3.721,2928,3.721,2929,3.721,2930,3.721]],["title/introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities",[87,1.963,91,2.516]],["text/introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities",[6,0.352,7,1.408,8,2.079,38,3.856,39,3.92,61,2.985,74,3.573,84,0.91,86,2.218,87,3.098,88,1.672,96,1.898,167,3.577,168,4.44,203,3.736,272,4.345,273,3.025,297,1.877,298,3.736,318,3.736,329,5.424,344,2.394,357,7.261,371,3.794,377,5.197,506,4.399,547,5.319,577,3.794,877,4.06,905,5.023,1026,3.736,1052,4.136,1602,3.81,1724,4.734,2184,5.647,2708,4.612,2737,8.105,2843,5.401,2872,5.401,2931,6.365,2932,8.185,2933,6.365,2934,6.365]],["title/introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface",[7,0.502,88,0.977,390,2.464,737,3.155,1607,2.15,1776,2.765]],["text/introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface",[1,1.125,6,0.31,7,1.253,8,2.544,10,1.06,12,1.152,21,1.427,54,1.684,84,1.246,86,2.056,87,2.829,88,2.291,96,1.238,98,1.319,105,2.995,168,3.823,183,2.118,187,4.377,200,1.651,203,3.463,207,1.832,251,2.219,281,1.927,289,4.077,306,2.026,307,2.565,308,1.896,312,3.281,356,3.27,372,3.573,390,3.909,442,2.59,482,3.59,483,4.274,547,3.833,560,3.909,572,2.995,574,3.362,679,2.691,700,1.887,737,5.006,812,3.411,823,4.171,827,3.663,856,3.762,936,2.895,982,3.633,1026,4.573,1254,2.895,1266,3.067,1268,2.927,1359,3.909,1360,3.99,1412,5.006,1530,2.614,1607,3.411,1724,4.387,1768,5.644,1776,4.387,2183,3.633,2647,4.817,2704,4.513,2737,5.006,2935,7.789]],["title/introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing",[165,4.279,2590,4.942]],["text/introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing",[7,1.189,8,2.333,27,4.399,38,4.327,39,4.399,40,3.807,88,2.313,137,7.188,140,4.831,141,6.083,165,5.051,172,3.67,200,2.464,201,2.753,329,5.832,367,3.856,547,4.642,619,4.556,905,6.946,1057,5.176,1631,4.642,1716,5.176,2708,6.378,2904,6.062,2905,6.338,2906,6.338,2907,6.338,2908,7.809,2909,6.338,2910,6.338,2936,7.143,2937,7.143,2938,7.143,2939,7.143,2940,7.143,2941,7.143]]],"fields":["title","text"],"invertedIndex":[["!",{"_index":2073,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it":{}},"title":{}}],["!=",{"_index":1951,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["!widgetstate.version_major))",{"_index":1499,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["\"",{"_index":2170,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["\"\",",{"_index":2541,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["\"\"}},",{"_index":2536,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["\"/path/to/image.jpg\"",{"_index":2703,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{}}],["\"/path/to/mask.png\"",{"_index":2796,"text":{"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{}}],["\"/path/to/mask_1.png\"",{"_index":2798,"text":{"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{}}],["\"/path/to/mask_2.png\"",{"_index":2800,"text":{"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{}}],["\"/path/to/mask_3.png\"",{"_index":2802,"text":{"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{}}],["\"1.2.0\",",{"_index":2499,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["\"1.5.0\",",{"_index":2533,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["\"http://download.tensorflow.org/example_images/flower_photos.tgz\"",{"_index":2147,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["\"image.jpg\"",{"_index":2732,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{}},"title":{}}],["\"parrot.jpg\"",{"_index":2913,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["#",{"_index":1538,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["##",{"_index":1704,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{}},"title":{}}],["%",{"_index":1573,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#import-the-required-libraries":{}},"title":{}}],["&",{"_index":1068,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["&&",{"_index":1495,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["'",{"_index":2473,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["'./images/image_1.jpg'",{"_index":1811,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{}},"title":{}}],["'./images/image_2.jpg'",{"_index":1812,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{}},"title":{}}],["'./images/image_3.jpg'",{"_index":1813,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{}},"title":{}}],["'/tmp/lambda_transform.json'",{"_index":1926,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["'/tmp/transform.json'",{"_index":1901,"text":{"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{}},"title":{}}],["'/tmp/transform.yml'",{"_index":1907,"text":{"examples/serialization/":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["'0.4.5',",{"_index":1929,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["'3.2.1'",{"_index":2078,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["'albumentations.augmentations.transforms.huesaturationvalue',",{"_index":1873,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["'albumentations.augmentations.transforms.randomcrop',",{"_index":1866,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["'albumentations.augmentations.transforms.resize',",{"_index":1864,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["'albumentations.augmentations.transforms.rgbshift',",{"_index":1871,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["'albumentations.core.composition.compose',",{"_index":1930,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["'albumentations.core.composition.oneof',",{"_index":1870,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["'albumentations.core.composition.replaycompose',",{"_index":1863,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["'https://unpkg.com/@jupyt",{"_index":1487,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["'images/000000386298.jpg'",{"_index":1606,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#load-the-image-from-the-disk":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#load-the-image-from-the-disk":{}},"title":{}}],["'images/deltae_16bit_gamma2.2.tif'",{"_index":1547,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{}},"title":{}}],["'images/dsb2018/1a11552569160f0b1ea10bedbd628ce6c14f29edec5092034c2309c556df833e/images/1a11552569160f0b1ea10bedbd628ce6c14f29edec5092034c2309c556df833e.png'",{"_index":1972,"text":{"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{}},"title":{}}],["'images/dsb2018/1a11552569160f0b1ea10bedbd628ce6c14f29edec5092034c2309c556df833e/masks'",{"_index":1973,"text":{"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{}},"title":{}}],["'images/image_2.jpg'",{"_index":1881,"text":{"examples/replay/":{},"examples/replay/#load-new-images":{}},"title":{}}],["'images/image_3.jpg'",{"_index":1519,"text":{"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/replay/":{},"examples/replay/#load-new-images":{}},"title":{}}],["'images/inria/inria_tyrol_w4_image.jpg'",{"_index":1966,"text":{"examples/showcase/":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{}},"title":{}}],["'images/inria/inria_tyrol_w4_mask.tif'",{"_index":1967,"text":{"examples/showcase/":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{}},"title":{}}],["'images/kaggle_salt/0fea4b5049.png'",{"_index":1660,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk":{}},"title":{}}],["'images/kaggle_salt/0fea4b5049_image.png'",{"_index":1659,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk":{}},"title":{}}],["'images/keypoints_image.jpg'",{"_index":1744,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#get-an-image-and-annotations-for-it":{}},"title":{}}],["'images/multi_target_1.jpg'",{"_index":1792,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#load-images-from-the-disk":{}},"title":{}}],["'images/multi_target_2.jpg'",{"_index":1794,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#load-images-from-the-disk":{}},"title":{}}],["'images/multi_target_3.jpg'",{"_index":1795,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#load-images-from-the-disk":{}},"title":{}}],["'images/parrot.jpg'",{"_index":1858,"text":{"examples/replay/":{},"examples/replay/#load-an-image-from-the-disk":{},"examples/serialization/":{},"examples/serialization/#load-an-image-from-the-disk":{},"examples/showcase/":{},"examples/showcase/#color-augmentations":{}},"title":{}}],["'images/vistas/_hnwguqebrcphuqutmrcca.jpg'",{"_index":1986,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["'images/vistas/_hnwguqebrcphuqutmrcca_instances.png'",{"_index":1989,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["'images/vistas/_hnwguqebrcphuqutmrcca_labels.png'",{"_index":1987,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["'images/weather_example.jpg'",{"_index":1797,"text":{"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#load-the-image-from-the-disk":{}},"title":{}}],["'some/image.jpg'",{"_index":2814,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{}}],["(",{"_index":308,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/core/composition/":{},"api_reference/core/serialization/":{},"api_reference/core/transforms_interface/":{},"api_reference/imgaug/transforms/":{},"api_reference/pytorch/transforms/":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-the-visualization-function":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#load-the-image-from-the-disk":{},"examples/example_bboxes/#visuaize-the-original-image-with-bounding-boxes":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#load-the-image-from-the-disk":{},"examples/example_bboxes2/#visuaize-the-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk":{},"examples/example_kaggle_salt/#verticalflip":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_keypoints/#define-keypoints":{},"examples/example_keypoints/#get-an-image-and-annotations-for-it":{},"examples/example_keypoints/#visualize-the-original-image-with-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_multi_target/#load-images-from-the-disk":{},"examples/example_multi_target/#show-original-images":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/#load-the-image-from-the-disk":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/example_weather_transforms/#visualize-the-original-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/replay/#define-the-visualization-function":{},"examples/replay/#load-an-image-from-the-disk":{},"examples/replay/#load-new-images":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#define-the-visualization-function":{},"examples/serialization/#load-an-image-from-the-disk":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#view-images-from-the-dataset_1":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"experimental/api_reference/augmentations/transforms/":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["(%)",{"_index":2884,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["((",{"_index":1583,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["()",{"_index":1600,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["()(",{"_index":2235,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["()),",{"_index":2119,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["(),",{"_index":670,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"experimental/api_reference/augmentations/transforms/":{}},"title":{}}],["(0,0)",{"_index":1013,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["(0.0,",{"_index":1143,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{}},"title":{}}],["(0.01",{"_index":1406,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{}},"title":{}}],["(0.03,",{"_index":1440,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{}},"title":{}}],["(0.05,",{"_index":1432,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{}},"title":{}}],["(0.15,",{"_index":458,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{}},"title":{}}],["(0.2,",{"_index":1423,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{}},"title":{}}],["(0.3,",{"_index":462,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{}},"title":{}}],["(0.5,",{"_index":1444,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{}},"title":{}}],["(0.6",{"_index":2830,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{}},"title":{}}],["(0.9",{"_index":2827,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{}},"title":{}}],["(0.9,",{"_index":1095,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{}},"title":{}}],["(10.0,",{"_index":966,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{}},"title":{}}],["(6,190)",{"_index":2891,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["(6,228)",{"_index":2894,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["([",{"_index":307,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_keypoints/":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{}}],["(albumentations.augmentations)",{"_index":131,"text":{"":{},"#api-reference":{},"api_reference/":{}},"title":{}}],["(albumentations.augmentations.bbox_utils)",{"_index":394,"text":{"api_reference/":{},"api_reference/augmentations/":{}},"title":{}}],["(albumentations.augmentations.functional)",{"_index":393,"text":{"api_reference/":{},"api_reference/augmentations/":{}},"title":{}}],["(albumentations.augmentations.keypoints_utils)",{"_index":395,"text":{"api_reference/":{},"api_reference/augmentations/":{}},"title":{}}],["(albumentations.augmentations.transforms)",{"_index":392,"text":{"api_reference/":{},"api_reference/augmentations/":{}},"title":{}}],["(albumentations.core)",{"_index":130,"text":{"":{},"#api-reference":{},"api_reference/":{}},"title":{}}],["(albumentations.core.composition)",{"_index":388,"text":{"api_reference/":{},"api_reference/core/":{}},"title":{}}],["(albumentations.core.serialization)",{"_index":389,"text":{"api_reference/":{},"api_reference/core/":{}},"title":{}}],["(albumentations.core.transforms_interface)",{"_index":391,"text":{"api_reference/":{},"api_reference/core/":{}},"title":{}}],["(albumentations.imgaug)",{"_index":134,"text":{"":{},"#api-reference":{},"api_reference/":{}},"title":{}}],["(albumentations.imgaug.transforms)",{"_index":396,"text":{"api_reference/":{},"api_reference/imgaug/":{}},"title":{}}],["(albumentations.pytorch)",{"_index":136,"text":{"":{},"#api-reference":{},"api_reference/":{}},"title":{}}],["(albumentations.pytorch.transforms)",{"_index":397,"text":{"api_reference/":{},"api_reference/pytorch/":{}},"title":{}}],["(albumentations_experimental.augmentations.transforms)",{"_index":2597,"text":{"experimental/overview/":{},"experimental/overview/#documentation":{}},"title":{}}],["(augmentations.bbox_utils)",{"_index":398,"text":{"api_reference/augmentations/bbox_utils/":{}},"title":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#helper-functions-for-working-with-bounding-boxes-augmentationsbbox_utils":{}}}],["(augmentations.functional)",{"_index":523,"text":{"api_reference/augmentations/functional/":{}},"title":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#functional-transforms-augmentationsfunctional":{}}}],["(augmentations.keypoints_utils)",{"_index":788,"text":{"api_reference/augmentations/keypoints_utils/":{}},"title":{"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/keypoints_utils/#helper-functions-for-working-with-keypoints-augmentationskeypoints_utils":{}}}],["(augmentations.transforms)",{"_index":793,"text":{"api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/":{}},"title":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#transforms-augmentationstransforms":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations-experimental-transforms-augmentationstransforms":{}}}],["(core.composition)",{"_index":1289,"text":{"api_reference/core/composition/":{}},"title":{"api_reference/core/composition/":{},"api_reference/core/composition/#composition-api-corecomposition":{}}}],["(core.serialization)",{"_index":1335,"text":{"api_reference/core/serialization/":{}},"title":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#serialization-api-coreserialization":{}}}],["(core.transforms_interface)",{"_index":1377,"text":{"api_reference/core/transforms_interface/":{}},"title":{"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#transforms-interface-coretransforms_interface":{}}}],["(e.g.",{"_index":852,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{}},"title":{}}],["(e.g.,",{"_index":2716,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{}},"title":{}}],["(i.e.,",{"_index":1535,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{}},"title":{}}],["(imgaug.transforms)",{"_index":1400,"text":{"api_reference/imgaug/transforms/":{}},"title":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#transforms-imgaugtransforms":{}}}],["(mu=0,",{"_index":916,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}},"title":{}}],["(pytorch.transforms)",{"_index":1468,"text":{"api_reference/pytorch/transforms/":{}},"title":{"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#transforms-pytorchtransforms":{}}}],["(tf.float32,",{"_index":2160,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{}},"title":{}}],["(tf.uint8,",{"_index":2120,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["(widgetstate.version_major",{"_index":1497,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],[")",{"_index":217,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/transforms/":{},"api_reference/core/composition/":{},"api_reference/core/serialization/":{},"api_reference/core/transforms_interface/":{},"api_reference/imgaug/transforms/":{},"api_reference/pytorch/transforms/":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-the-visualization-function":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#load-the-image-from-the-disk":{},"examples/example_bboxes/#visuaize-the-original-image-with-bounding-boxes":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#load-the-image-from-the-disk":{},"examples/example_bboxes2/#visuaize-the-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk":{},"examples/example_kaggle_salt/#verticalflip":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_keypoints/#get-an-image-and-annotations-for-it":{},"examples/example_keypoints/#visualize-the-original-image-with-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_multi_target/#load-images-from-the-disk":{},"examples/example_multi_target/#show-original-images":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/#load-the-image-from-the-disk":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/example_weather_transforms/#visualize-the-original-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/replay/#define-the-visualization-function":{},"examples/replay/#load-an-image-from-the-disk":{},"examples/replay/#load-new-images":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#define-the-visualization-function":{},"examples/serialization/#load-an-image-from-the-disk":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#view-images-from-the-dataset_1":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"experimental/api_reference/augmentations/transforms/":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#frequently-asked-questions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],[")(",{"_index":2233,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["))",{"_index":1515,"text":{"examples/example/":{},"examples/example/#define-the-visualization-function":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_multi_target/":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/replay/":{},"examples/replay/#define-the-visualization-function":{},"examples/serialization/":{},"examples/serialization/#define-the-visualization-function":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["))(",{"_index":2234,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],[")))",{"_index":1996,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],[")),",{"_index":1590,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["))]",{"_index":1963,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["),",{"_index":312,"text":{"api_reference/augmentations/transforms/":{},"api_reference/imgaug/transforms/":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_keypoints/":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#define-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{}}],[").",{"_index":359,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["):",{"_index":1512,"text":{"examples/example/":{},"examples/example/#define-the-visualization-function":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_multi_target/":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#define-the-visualization-function":{},"examples/serialization/":{},"examples/serialization/#define-the-visualization-function":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],[")[",{"_index":1526,"text":{"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{}},"title":{}}],[")]",{"_index":1727,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],[")])",{"_index":1731,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],[")],",{"_index":1626,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_multi_target/":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{}},"title":{}}],["*",{"_index":697,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/api_reference/augmentations/transforms/":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{}},"title":{}}],["**",{"_index":680,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/api_reference/augmentations/transforms/":{}},"title":{}}],["+",{"_index":953,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{}},"title":{}}],["+=",{"_index":1978,"text":{"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{}},"title":{}}],[",",{"_index":12,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"api_reference/core/serialization/":{},"api_reference/core/transforms_interface/":{},"api_reference/imgaug/transforms/":{},"api_reference/pytorch/transforms/":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-the-visualization-function":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes/#load-the-image-from-the-disk":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes/#visuaize-the-original-image-with-bounding-boxes":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#load-the-image-from-the-disk":{},"examples/example_bboxes2/#visuaize-the-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk":{},"examples/example_kaggle_salt/#verticalflip":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_keypoints/#define-keypoints":{},"examples/example_keypoints/#get-an-image-and-annotations-for-it":{},"examples/example_keypoints/#visualize-the-original-image-with-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_multi_target/#load-images-from-the-disk":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/#load-the-image-from-the-disk":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/replay/#define-the-visualization-function":{},"examples/replay/#load-an-image-from-the-disk":{},"examples/replay/#load-new-images":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#define-the-visualization-function":{},"examples/serialization/#load-an-image-from-the-disk":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"experimental/api_reference/augmentations/transforms/":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#battle-tested":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],[",:",{"_index":1968,"text":{"examples/showcase/":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{}},"title":{}}],[",[",{"_index":2155,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#process-data":{}},"title":{}}],[".",{"_index":21,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.OneOrOther":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensorV2":{},"contributing/":{},"contributing/#contributing":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-the-visualization-function":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes/#load-the-image-from-the-disk":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#load-the-image-from-the-disk":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk":{},"examples/example_kaggle_salt/#using-albumentations-for-a-semantic-segmentation-task":{},"examples/example_kaggle_salt/#verticalflip":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_keypoints/#get-an-image-and-annotations-for-it":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_multi_target/#load-images-from-the-disk":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/#load-the-image-from-the-disk":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/replay/#define-the-visualization-function":{},"examples/replay/#load-an-image-from-the-disk":{},"examples/replay/#load-new-images":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#define-the-visualization-function":{},"examples/serialization/#load-an-image-from-the-disk":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"experimental/overview/":{},"experimental/overview/#overview":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#frequently-asked-questions":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p2":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#battle-tested":{},"introduction/why_albumentations/#it-is-open-source-and-mit-licensed":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{},"release_notes/":{},"release_notes/#bug-fixes":{},"release_notes/#improvements":{}},"title":{}}],["..",{"_index":621,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{}},"title":{}}],["...",{"_index":1781,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{}}],["...],",{"_index":1779,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{}}],["/",{"_index":716,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{}},"title":{}}],["//",{"_index":1492,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{}},"title":{}}],["/root/tensorflow_datasets/tf_flowers/3.0.1.",{"_index":2115,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["/root/tensorflow_datasets/tf_flowers/3.0.1...",{"_index":2105,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["/usr/local/lib/python3.6/dist",{"_index":2299,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["0",{"_index":419,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{}}}],["0.0",{"_index":478,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/transforms/":{},"api_reference/core/composition/":{},"api_reference/imgaug/transforms/":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["0.0.",{"_index":487,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{}},"title":{}}],["0.01",{"_index":1047,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["0.03",{"_index":1434,"text":{"api_reference/imgaug/transforms/":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{}},"title":{}}],["0.03).",{"_index":987,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{}},"title":{}}],["0.03,",{"_index":986,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{}},"title":{}}],["0.05",{"_index":677,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{}},"title":{}}],["0.05).",{"_index":1113,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{}},"title":{}}],["0.05,",{"_index":446,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{}},"title":{}}],["0.0625",{"_index":1221,"text":{"api_reference/augmentations/transforms/":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["0.0625).",{"_index":1228,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["0.0625,",{"_index":1227,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["0.07);",{"_index":463,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{}},"title":{}}],["0.07243628666754276,",{"_index":1868,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["0.07].",{"_index":447,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{}},"title":{}}],["0.08",{"_index":1148,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["0.1",{"_index":651,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"api_reference/imgaug/transforms/":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["0.1).",{"_index":1229,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{}},"title":{}}],["0.1,",{"_index":445,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["0.1.",{"_index":1459,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{}},"title":{}}],["0.2",{"_index":1129,"text":{"api_reference/augmentations/transforms/":{},"api_reference/imgaug/transforms/":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#what-works":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{}},"title":{}}],["0.2).",{"_index":1131,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{}},"title":{}}],["0.2,",{"_index":1130,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{}},"title":{}}],["0.224",{"_index":1106,"text":{"api_reference/augmentations/transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{}},"title":{}}],["0.224,",{"_index":1850,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["0.225",{"_index":1107,"text":{"api_reference/augmentations/transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{}},"title":{}}],["0.225])",{"_index":1851,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["0.229",{"_index":1105,"text":{"api_reference/augmentations/transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{}},"title":{}}],["0.24375]",{"_index":2677,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#yolo":{}},"title":{}}],["0.25",{"_index":866,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["0.27,",{"_index":459,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{}},"title":{}}],["0.3",{"_index":982,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomsnow":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{}}],["0.3*((ksize",{"_index":957,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{}},"title":{}}],["0.3,",{"_index":1294,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{}},"title":{}}],["0.3.",{"_index":1640,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{}},"title":{}}],["0.3155",{"_index":2270,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0.3237",{"_index":2254,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0.3387",{"_index":2283,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0.35",{"_index":1588,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["0.3564",{"_index":2273,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0.3711",{"_index":2285,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0.3858",{"_index":2257,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0.4,",{"_index":1295,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{}},"title":{}}],["0.4.",{"_index":2825,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{}},"title":{}}],["0.4.6",{"_index":334,"text":{"release_notes/":{}},"title":{"release_notes/#046":{}}}],["0.4022",{"_index":2226,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0.406",{"_index":1103,"text":{"api_reference/augmentations/transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{}},"title":{}}],["0.406],",{"_index":1848,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["0.4237",{"_index":2238,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0.456",{"_index":1102,"text":{"api_reference/augmentations/transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{}},"title":{}}],["0.456,",{"_index":1847,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["0.485",{"_index":1101,"text":{"api_reference/augmentations/transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{}},"title":{}}],["0.4];",{"_index":1298,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{}},"title":{}}],["0.5",{"_index":679,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"api_reference/core/composition/":{},"api_reference/core/transforms_interface/":{},"api_reference/imgaug/transforms/":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{}}],["0.5)",{"_index":461,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{}},"title":{}}],["0.5).",{"_index":1424,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{}},"title":{}}],["0.5,",{"_index":1872,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{}}],["0.5.",{"_index":800,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.PerChannel":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["0.50",{"_index":1527,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{}},"title":{}}],["0.503125,",{"_index":2676,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#yolo":{}},"title":{}}],["0.5358820043066892},",{"_index":1869,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["0.5406",{"_index":2290,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0.5477",{"_index":2230,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0.5529",{"_index":2241,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0.5621",{"_index":2288,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0.5948",{"_index":2263,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0.5].",{"_index":1296,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{}},"title":{}}],["0.6",{"_index":2813,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{}}],["0.6))",{"_index":2828,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{}},"title":{}}],["0.6.",{"_index":2824,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{}},"title":{}}],["0.65625,",{"_index":2669,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{}},"title":{}}],["0.67,",{"_index":460,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{}},"title":{}}],["0.7",{"_index":969,"text":{"api_reference/augmentations/transforms/":{},"api_reference/imgaug/transforms/":{},"examples/example_keypoints/":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{}},"title":{}}],["0.7).",{"_index":1425,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{}},"title":{}}],["0.7117",{"_index":2266,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0.71875,",{"_index":2668,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{}},"title":{}}],["0.75",{"_index":1170,"text":{"api_reference/augmentations/transforms/":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{}}],["0.7932",{"_index":2265,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0.8",{"_index":959,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{}},"title":{}}],["0.85",{"_index":2811,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{}}],["0.85,",{"_index":2820,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p2":{}},"title":{}}],["0.8614583,",{"_index":2675,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#yolo":{}},"title":{}}],["0.9",{"_index":314,"text":{"api_reference/augmentations/transforms/":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{}}],["0.95",{"_index":2809,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{}}],["0.9625]",{"_index":2670,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{}},"title":{}}],["04",{"_index":922,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}},"title":{}}],["0imag",{"_index":1775,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{}}],["0x7f2f2369b208",{"_index":2291,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0x7f2f252740b8",{"_index":2286,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0x7f2f276c6048",{"_index":2274,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0x7f2f2a5b2b70",{"_index":2267,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0x7f2f2cf227f0",{"_index":2258,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0x7f2f31131588",{"_index":2242,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0x7f2f311b3dd8",{"_index":2232,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["0x7fead8ad2268",{"_index":1922,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["0x7feae89a77b8",{"_index":1920,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["1",{"_index":420,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/imgaug/transforms/":{},"api_reference/pytorch/transforms/":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_kaggle_salt/#verticalflip":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_multi_target/":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/keypoints_augmentation/#step-1-import-the-required-libraries":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{}}}],["1)*0.5",{"_index":958,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{}},"title":{}}],["1.0",{"_index":299,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/transforms/":{},"api_reference/core/composition/":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"api_reference/pytorch/transforms/":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{}},"title":{}}],["1.0)",{"_index":1144,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{}},"title":{}}],["1.0).",{"_index":1445,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{}},"title":{}}],["1.0,",{"_index":1867,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["1.0.",{"_index":858,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["1.0]",{"_index":1565,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["1.0],",{"_index":934,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{}},"title":{}}],["1.0].",{"_index":499,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{}},"title":{}}],["1.1",{"_index":1090,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["1.1).",{"_index":1096,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{}},"title":{}}],["1.1268",{"_index":2240,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["1.1270",{"_index":2229,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["1.1293",{"_index":2262,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["1.3",{"_index":1589,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["1.3333333333333333",{"_index":1171,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["1.3600",{"_index":2237,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["1.4029",{"_index":2225,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["1.4430",{"_index":2256,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["1.4586",{"_index":2284,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["1.4686",{"_index":2272,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["1.5",{"_index":2920,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["1.5246",{"_index":2253,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["1.5423",{"_index":2269,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["1.5470",{"_index":2282,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["1.7326",{"_index":2289,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["1.7783",{"_index":2287,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["1/2",{"_index":2221,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["10",{"_index":371,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"examples/example/":{},"examples/example/#define-the-visualization-function":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_multi_target/":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/replay/":{},"examples/replay/#define-the-visualization-function":{},"examples/showcase/":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["10.0",{"_index":962,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["100",{"_index":318,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#what-wont-work":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["1000",{"_index":1760,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["101",{"_index":1663,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomsizedcrop":{}},"title":{}}],["1024",{"_index":845,"text":{"api_reference/augmentations/transforms/":{},"examples/showcase/":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["1025",{"_index":1769,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{}},"title":{}}],["103",{"_index":2780,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["11",{"_index":1732,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["1100",{"_index":1749,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["115/115",{"_index":2222,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["1150",{"_index":1765,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["117",{"_index":2653,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#yolo":{}},"title":{}}],["12",{"_index":437,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{}},"title":{}}],["12.75",{"_index":1404,"text":{"api_reference/imgaug/transforms/":{}},"title":{}}],["120",{"_index":1153,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["127",{"_index":1236,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{}},"title":{}}],["128",{"_index":740,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#original-image":{}},"title":{}}],["13",{"_index":2067,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["1300",{"_index":1757,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["132.8",{"_index":1617,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{}},"title":{}}],["138.95",{"_index":1612,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{}},"title":{}}],["146ms/step",{"_index":2236,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["147.09",{"_index":1613,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{}},"title":{}}],["147ms/step",{"_index":2239,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["15",{"_index":1743,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/showcase/":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["150",{"_index":438,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["15138a13a9e2",{"_index":2110,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["1570",{"_index":1753,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["158ms/step",{"_index":2228,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["16",{"_index":204,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{}}}],["16.371479466245397},",{"_index":1879,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["160",{"_index":2778,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["160ms/step",{"_index":2224,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["161",{"_index":2695,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{}},"title":{}}],["162ms/step",{"_index":2255,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["163ms/step",{"_index":2271,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["164.88",{"_index":1614,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{}},"title":{}}],["164ms/step",{"_index":2252,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["17",{"_index":1620,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{}},"title":{}}],["1700",{"_index":1750,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["18",{"_index":1621,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{}},"title":{}}],["180",{"_index":930,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply":{},"examples/example_kaggle_salt/":{}},"title":{"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{}}}],["181.84",{"_index":1618,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{}},"title":{}}],["19",{"_index":2251,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["193",{"_index":2779,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["1a0e5a91eecb4afd9d0f7c7d711451f6",{"_index":2492,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["2",{"_index":584,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{}},"title":{"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{}}}],["2**8",{"_index":1110,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{}},"title":{}}],["2.5",{"_index":1198,"text":{"api_reference/augmentations/transforms/":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomsnow":{}},"title":{}}],["2.5500000000000003",{"_index":1403,"text":{"api_reference/imgaug/transforms/":{}},"title":{}}],["2.654172653504567,",{"_index":1875,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["2.you",{"_index":2701,"text":{"getting_started/bounding_boxes_augmentation/":{}},"title":{"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{}}}],["2/2",{"_index":2227,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["20",{"_index":1024,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/showcase/":{},"examples/showcase/#color-augmentations":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["200",{"_index":439,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/transforms/":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["2003",{"_index":635,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["200ms/step",{"_index":2264,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["2018",{"_index":1969,"text":{"examples/showcase/":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{"examples/showcase/#2018-data-science-bowl":{}}}],["2019",{"_index":2145,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{}},"title":{}}],["2020",{"_index":2626,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{},"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{}},"title":{}}],["203",{"_index":2774,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["203ms/step",{"_index":2261,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["212",{"_index":441,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{}},"title":{}}],["218.21",{"_index":2100,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["22",{"_index":2165,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["221.83",{"_index":2102,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["224",{"_index":1808,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["23",{"_index":2260,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{}},"title":{}}],["24",{"_index":1536,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{}},"title":{}}],["2444",{"_index":2371,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["2445",{"_index":2372,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["2446",{"_index":2374,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["2447",{"_index":2377,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["2448",{"_index":2378,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["247",{"_index":440,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{}},"title":{}}],["25.808674585522866,",{"_index":1877,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["2500",{"_index":1994,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["252",{"_index":2694,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{}},"title":{}}],["254",{"_index":2777,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["255",{"_index":659,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["255.0",{"_index":1109,"text":{"api_reference/augmentations/transforms/":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{}},"title":{}}],["256",{"_index":310,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["264",{"_index":2773,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["2665",{"_index":2391,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["2666",{"_index":2393,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["2667",{"_index":2394,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["2668",{"_index":2396,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["2669",{"_index":2398,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["270",{"_index":1709,"text":{"examples/example_kaggle_salt/":{}},"title":{"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{}}}],["2775",{"_index":2379,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["2776",{"_index":2380,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["2777",{"_index":2384,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["2778",{"_index":2386,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["2779",{"_index":2389,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["280",{"_index":1636,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{}},"title":{}}],["29",{"_index":923,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["294",{"_index":2693,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{}},"title":{}}],["295",{"_index":2690,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{}},"title":{}}],["2^5",{"_index":1678,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{}},"title":{}}],["2^n",{"_index":1670,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{}},"title":{}}],["2nd",{"_index":2179,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{}},"title":{}}],["2x",{"_index":903,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["3",{"_index":585,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#original-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/image_augmentation/":{},"getting_started/keypoints_augmentation/":{},"getting_started/mask_augmentation/":{},"getting_started/simultaneous_augmentation/":{}},"title":{"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{}}}],["3.5",{"_index":2572,"text":{"experimental/installation/":{},"experimental/installation/#installation":{},"getting_started/installation/":{},"getting_started/installation/#installation":{}},"title":{}}],["30",{"_index":1026,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#what-wont-work":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["300",{"_index":1751,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["31",{"_index":2488,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["32",{"_index":1537,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["322",{"_index":2652,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#yolo":{}},"title":{}}],["33",{"_index":2486,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["330",{"_index":2768,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{}},"title":{}}],["333",{"_index":2696,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{}},"title":{}}],["336",{"_index":1646,"text":{"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{}},"title":{}}],["345",{"_index":2662,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{}},"title":{}}],["345px",{"_index":2655,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{}},"title":{}}],["360",{"_index":1049,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{}},"title":{}}],["365",{"_index":2673,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#yolo":{}},"title":{}}],["366.7",{"_index":1615,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{}},"title":{}}],["3670",{"_index":2136,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["37",{"_index":2699,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{}},"title":{}}],["377",{"_index":2692,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{}},"title":{}}],["388",{"_index":2691,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{}},"title":{}}],["3e99d9d6a9cc498a8f6721e1fa056f71",{"_index":2530,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["4",{"_index":369,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/image_augmentation/":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/mask_augmentation/":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{}}}],["4.0",{"_index":821,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["40",{"_index":2184,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["400",{"_index":1211,"text":{"api_reference/augmentations/transforms/":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["410",{"_index":1748,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["42",{"_index":1531,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{}},"title":{}}],["420",{"_index":2663,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/bounding_boxes_augmentation/#yolo":{}},"title":{}}],["420px",{"_index":2656,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{}},"title":{}}],["421",{"_index":2697,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{}},"title":{}}],["4294967295",{"_index":1567,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["439",{"_index":2428,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["44",{"_index":1993,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["440",{"_index":2430,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["440.05",{"_index":2104,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["441",{"_index":2435,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["442",{"_index":2437,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["443",{"_index":2440,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["444",{"_index":1647,"text":{"examples/example_bboxes2/":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{}},"title":{}}],["448",{"_index":1645,"text":{"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{}},"title":{}}],["45",{"_index":1223,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["450",{"_index":2678,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["4500",{"_index":1638,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{}},"title":{}}],["462",{"_index":2664,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/bounding_boxes_augmentation/#yolo":{}},"title":{}}],["462px",{"_index":2657,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{}},"title":{}}],["480",{"_index":2651,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#yolo":{}},"title":{}}],["49",{"_index":2698,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{}},"title":{}}],["4f63",{"_index":2108,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["5",{"_index":854,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}},"title":{}}],["5.66",{"_index":1611,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{}},"title":{}}],["5/5",{"_index":2559,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["50",{"_index":877,"text":{"api_reference/augmentations/transforms/":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/showcase/":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#mapilary-vistas":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["50.0",{"_index":963,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["50.0).",{"_index":967,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{}},"title":{}}],["500",{"_index":386,"text":{"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["504",{"_index":383,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["505",{"_index":2361,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["506",{"_index":2363,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["507",{"_index":2364,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["508",{"_index":2365,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["512",{"_index":1768,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{}}],["512px",{"_index":2935,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{}}],["55",{"_index":1992,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["560",{"_index":1755,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["565",{"_index":365,"text":{"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["566",{"_index":366,"text":{"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["569",{"_index":381,"text":{"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["578",{"_index":2342,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["579",{"_index":2345,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["580",{"_index":2346,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["581",{"_index":2348,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["582",{"_index":2349,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["590",{"_index":1754,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["5ad3b36408ec",{"_index":2297,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["6",{"_index":370,"text":{"api_reference/augmentations/transforms/":{},"examples/serialization/":{},"examples/serialization/#define-the-visualization-function":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["60",{"_index":2903,"text":{"introduction/why_albumentations/":{},"introduction/why_albumentations/#diverse-set-of-supported-augmentations":{}},"title":{}}],["600",{"_index":2066,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["62.93s/",{"_index":2561,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["623",{"_index":351,"text":{"release_notes/":{},"release_notes/#improvements":{}},"title":{}}],["625",{"_index":2352,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["626",{"_index":2353,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["627",{"_index":2354,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["628",{"_index":2357,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["629",{"_index":2358,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["638",{"_index":373,"text":{"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["639",{"_index":349,"text":{"release_notes/":{},"release_notes/#improvements":{}},"title":{}}],["64",{"_index":2210,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["640",{"_index":2650,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#yolo":{}},"title":{}}],["65",{"_index":1990,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["650",{"_index":1752,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["65535",{"_index":1539,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{}},"title":{}}],["65535.0",{"_index":1572,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["65536",{"_index":1566,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["658",{"_index":342,"text":{"release_notes/":{},"release_notes/#improvements":{}},"title":{}}],["66",{"_index":2307,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["67",{"_index":2308,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["670",{"_index":1763,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["68",{"_index":2309,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["7",{"_index":796,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["720",{"_index":1747,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["74",{"_index":2689,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{}},"title":{}}],["75",{"_index":1529,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{}},"title":{}}],["750",{"_index":1758,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["76.3",{"_index":2886,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["768",{"_index":1767,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{}},"title":{}}],["77.6",{"_index":2887,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["77f0bf50d307",{"_index":2487,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["77f0bf50d307>:16",{"_index":2489,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["78.5",{"_index":2888,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["780",{"_index":1762,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["8",{"_index":93,"text":{"":{},"#examples":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"faq/":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{}},"title":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{}}}],["80",{"_index":1152,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["80.0",{"_index":2889,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["80.84",{"_index":1616,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{}},"title":{}}],["800",{"_index":1756,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["82.2",{"_index":2892,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["82.8",{"_index":2893,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["820",{"_index":1766,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["83.1",{"_index":2895,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["83.5",{"_index":2896,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["830",{"_index":1764,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["846",{"_index":2326,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["847",{"_index":2328,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["848",{"_index":2330,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["849",{"_index":2333,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["85",{"_index":2185,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p2":{}},"title":{}}],["850",{"_index":2335,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["86",{"_index":2775,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["88",{"_index":2776,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["90",{"_index":316,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"examples/example_kaggle_salt/":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{}},"title":{"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{}}}],["900",{"_index":1759,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["910",{"_index":1761,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["966",{"_index":2442,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["967",{"_index":2444,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["968",{"_index":2447,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["969",{"_index":2449,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["97",{"_index":436,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{}},"title":{}}],["970",{"_index":2450,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["979",{"_index":2414,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["98",{"_index":2661,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/bounding_boxes_augmentation/#yolo":{}},"title":{}}],["980",{"_index":2418,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["981",{"_index":2419,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["982",{"_index":2423,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["983",{"_index":2424,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["98px",{"_index":2654,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{}},"title":{}}],["99",{"_index":1032,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["9c225a9",{"_index":376,"text":{"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],[":",{"_index":161,"text":{"api_reference/augmentations/transforms/":{},"contributing/":{},"contributing/#contributing":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#note":{},"examples/tensorflow-example/#using-albumentations-with-tensorflow":{},"examples/tensorflow-example/#what-wont-work":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{},"getting_started/setting_probabilities/#p1":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{}},"title":{"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}}}],[";",{"_index":2831,"text":{"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{}},"title":{}}],["<",{"_index":873,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["<tensorflow.python.keras.callbacks.histori",{"_index":2231,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["=",{"_index":306,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/core/composition/":{},"api_reference/core/serialization/":{},"api_reference/core/transforms_interface/":{},"api_reference/imgaug/transforms/":{},"api_reference/pytorch/transforms/":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-the-visualization-function":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes/#load-the-image-from-the-disk":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#load-the-image-from-the-disk":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk":{},"examples/example_kaggle_salt/#verticalflip":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_keypoints/#define-keypoints":{},"examples/example_keypoints/#get-an-image-and-annotations-for-it":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_multi_target/#load-images-from-the-disk":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/#load-the-image-from-the-disk":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/replay/#define-the-visualization-function":{},"examples/replay/#load-an-image-from-the-disk":{},"examples/replay/#load-new-images":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#define-the-visualization-function":{},"examples/serialization/#load-an-image-from-the-disk":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"experimental/api_reference/augmentations/transforms/":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["=.",{"_index":1528,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{}},"title":{}}],["=<",{"_index":1035,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["==",{"_index":951,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],[">",{"_index":807,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],[">=",{"_index":1204,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{}},"title":{}}],["?",{"_index":199,"text":{"faq/":{},"faq/#frequently-asked-questions":{}},"title":{}}],["[",{"_index":164,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"contributing/":{},"contributing/#contributing":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_kaggle_salt/#verticalflip":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_keypoints/#define-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{}},"title":{}}],["[(",{"_index":1991,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["[0.0,",{"_index":498,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["[0.1,",{"_index":1297,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{}},"title":{}}],["[0.153125,",{"_index":2667,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{}},"title":{}}],["[0.2,",{"_index":1293,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{}},"title":{}}],["[0.3,",{"_index":444,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{}},"title":{}}],["[0.4046875,",{"_index":2674,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#yolo":{}},"title":{}}],["[05:14&lt;00:00,",{"_index":2560,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["[0;3]",{"_index":703,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{}},"title":{}}],["[:",{"_index":1666,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"examples/showcase/":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{}},"title":{}}],["[==============================]",{"_index":2223,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["[[",{"_index":1610,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{}},"title":{}}],["[])",{"_index":2169,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["[],",{"_index":1941,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["[horizontalflip(p=0.5),",{"_index":1778,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{}}],["[list(bbox)",{"_index":2000,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["[multiplier[0],",{"_index":1093,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{}},"title":{}}],["[simard2003]_",{"_index":617,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["]",{"_index":166,"text":{"contributing/":{},"contributing/#contributing":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_kaggle_salt/#verticalflip":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{}},"title":{}}],["])",{"_index":1530,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-works":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{}}],["]))",{"_index":2683,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["])))",{"_index":2714,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{}},"title":{}}],["]),",{"_index":1627,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{}},"title":{}}],["]):",{"_index":1950,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["],",{"_index":313,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{}}],["].",{"_index":1185,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{}},"title":{}}],["]:",{"_index":1948,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["]]",{"_index":1619,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{}},"title":{}}],["]},",{"_index":1980,"text":{"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{}},"title":{}}],["_",{"_index":943,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_'data",{"_index":944,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{}},"title":{}}],["__call__",{"_index":2340,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["__class_fullname__",{"_index":1862,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["__getitem__",{"_index":1805,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{}},"title":{}}],["__init__",{"_index":1250,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{}}}],["__len__",{"_index":1803,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{}},"title":{}}],["__name__",{"_index":1932,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["__new__",{"_index":1375,"text":{},"title":{"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta.__new__":{}}}],["__type__",{"_index":1931,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["__version__",{"_index":1928,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["__wrapped__",{"_index":2429,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_call",{"_index":2347,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_call_for_each_replica",{"_index":2461,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_create_graph_funct",{"_index":2385,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_dom_class",{"_index":2538,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_function_attribut",{"_index":2397,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_function_cach",{"_index":2381,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_get_concrete_function_internal_garbage_collect",{"_index":2370,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_get_tracing_count",{"_index":2351,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_in_multi_worker_mod",{"_index":2303,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_initi",{"_index":2355,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_lock",{"_index":2373,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_maybe_define_funct",{"_index":2376,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_method_wrapp",{"_index":2301,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_model_modul",{"_index":2497,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_model_module_vers",{"_index":2498,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_model_nam",{"_index":2500,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_view_count",{"_index":2501,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_view_modul",{"_index":2503,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_view_module_vers",{"_index":2504,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["_view_nam",{"_index":2505,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["`data_dir=gs://tfd",{"_index":2096,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["`tfds.load`",{"_index":2095,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["`try_gcs=true`",{"_index":2094,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["a.bboxparam",{"_index":2679,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["a.compos",{"_index":2733,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{}},"title":{}}],["a.compose(",{"_index":1777,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{}}],["a.convert_bboxes_to_albumentations(image.shape,",{"_index":2002,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["a.horizontalflip",{"_index":2718,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["a.keypointparam",{"_index":2769,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["a.randombrighntesscontrast",{"_index":2719,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["a.randombrightnesscontrast",{"_index":2738,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{}},"title":{}}],["a.randomcrop",{"_index":2717,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["a.randomcrop(width=256,",{"_index":2724,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["abov",{"_index":495,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p2":{},"getting_started/setting_probabilities/#p3":{}},"title":{}}],["absolut",{"_index":1226,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["accept",{"_index":692,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{}},"title":{}}],["access",{"_index":2306,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["accordingli",{"_index":2182,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{}},"title":{}}],["accur",{"_index":1349,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta.__new__":{}},"title":{}}],["accuraci",{"_index":2218,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["act",{"_index":2933,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["activ",{"_index":2207,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["actual",{"_index":2707,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{}},"title":{}}],["ad",{"_index":322,"text":{"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"faq/":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"getting_started/bounding_boxes_augmentation/":{}},"title":{"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{}}}],["adam",{"_index":2215,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["adapt",{"_index":825,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{}},"title":{}}],["add",{"_index":529,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/serialization/":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#extensibility":{}},"title":{"examples/example_kaggle_salt/#lets-add-non-rigid-transformations-and-randomsizedcrop":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{}}}],["add_control_depend",{"_index":2410,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["add_fog",{"_index":755,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{}}}],["add_initializers_to",{"_index":2356,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["add_rain",{"_index":756,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{}}}],["add_shadow",{"_index":757,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow":{}}}],["add_snow",{"_index":758,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{}}}],["add_subplot",{"_index":2166,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["add_sun_flar",{"_index":759,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{}}}],["add_target",{"_index":1395,"text":{},"title":{"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{}}}],["addit",{"_index":288,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"faq/":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{}}}],["addition",{"_index":1564,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["additional_target",{"_index":290,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{},"faq/":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{}},"title":{}}],["addwidgetsrender",{"_index":1479,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["adjust",{"_index":1136,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["advantag",{"_index":2922,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["ae017742",{"_index":2106,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["aee8",{"_index":2109,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["aerial",{"_index":1694,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/showcase/":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/showcase/#inria-aerial-image-labeling-dataset":{}}}],["affect",{"_index":1739,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["affin",{"_index":1224,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{}},"title":{}}],["ag_error_metadata",{"_index":2446,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["again",{"_index":2734,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{}},"title":{}}],["aggress",{"_index":2934,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["albument",{"_index":1,"text":{"":{},"#examples":{},"#external-resources":{},"#introduction-to-image-augmentation":{},"#other-topics":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"contributing/":{},"contributing/#contributing":{},"examples/":{},"examples/#list-of-examples":{},"examples/example/":{},"examples/example/#defining-a-simple-augmentation-pipeline-for-image-augmentation":{},"examples/example/#import-the-required-libraries":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#import-the-required-libraries":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#import-the-required-libraries":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#import-the-required-libraries":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#import-the-required-libraries":{},"examples/example_keypoints/":{},"examples/example_keypoints/#import-the-required-libraries":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#import-the-required-libraries":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#import-the-required-libraries":{},"examples/example_weather_transforms/#weather-augmentations-in-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries":{},"examples/migrating_from_torchvision_to_albumentations/#migrating-from-torchvision-to-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#import-the-required-libraries":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/serialization/#import-the-required-libraries":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#import-the-required-libraries":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/installation/":{},"experimental/installation/#installation":{},"experimental/overview/":{},"experimental/overview/#overview":{},"experimental/overview/#why-a-separate-library":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{},"external_resources/books/":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#frequently-asked-questions":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-1-import-the-required-libraries":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/installation/":{},"getting_started/installation/#install-the-latest-stable-version-from-conda-forge":{},"getting_started/installation/#install-the-latest-stable-version-from-pypi":{},"getting_started/installation/#installation":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#examples":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-1-import-the-required-libraries":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#examples":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_albumentations/#diverse-set-of-supported-augmentations":{},"introduction/why_albumentations/#extensibility":{},"introduction/why_albumentations/#high-performance":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{},"release_notes/":{},"release_notes/#bug-fixes":{},"release_notes/#improvements":{}},"title":{"":{},"#getting-started-with-albumentations":{},"#welcome-to-albumentations-documentation":{},"examples/example_bboxes/":{},"examples/example_bboxes/#using-albumentations-to-augment-bounding-boxes-for-object-detection-tasks":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#using-albumentations-for-a-semantic-segmentation-task":{},"examples/example_keypoints/":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#weather-augmentations-in-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/migrating_from_torchvision_to_albumentations/#migrating-from-torchvision-to-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"examples/tensorflow-example/#using-albumentations-with-tensorflow":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations-experimental-transforms-augmentationstransforms":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts-podcasts-and-talks-about-albumentations":{},"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{},"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#why-albumentations":{}}}],["albumentations.augmentations.bbox_util",{"_index":511,"text":{},"title":{"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils":{}}}],["albumentations.augmentations.bbox_utils.calculate_bbox_area",{"_index":400,"text":{"api_reference/augmentations/bbox_utils/":{}},"title":{}}],["albumentations.augmentations.bbox_utils.check_bbox",{"_index":416,"text":{"api_reference/augmentations/bbox_utils/":{}},"title":{}}],["albumentations.augmentations.bbox_utils.convert_bbox_from_albument",{"_index":424,"text":{"api_reference/augmentations/bbox_utils/":{}},"title":{}}],["albumentations.augmentations.bbox_utils.convert_bbox_to_albument",{"_index":449,"text":{"api_reference/augmentations/bbox_utils/":{}},"title":{}}],["albumentations.augmentations.bbox_utils.convert_bboxes_from_albument",{"_index":466,"text":{"api_reference/augmentations/bbox_utils/":{}},"title":{}}],["albumentations.augmentations.bbox_utils.convert_bboxes_to_albument",{"_index":468,"text":{"api_reference/augmentations/bbox_utils/":{}},"title":{}}],["albumentations.augmentations.bbox_utils.denormalize_bbox",{"_index":469,"text":{"api_reference/augmentations/bbox_utils/":{}},"title":{}}],["albumentations.augmentations.bbox_utils.filter_bbox",{"_index":476,"text":{"api_reference/augmentations/bbox_utils/":{}},"title":{}}],["albumentations.augmentations.bbox_utils.filter_bboxes_by_vis",{"_index":490,"text":{"api_reference/augmentations/bbox_utils/":{}},"title":{}}],["albumentations.augmentations.bbox_utils.normalize_bbox",{"_index":500,"text":{"api_reference/augmentations/bbox_utils/":{}},"title":{}}],["albumentations.augmentations.bbox_utils.union_of_bbox",{"_index":502,"text":{"api_reference/augmentations/bbox_utils/":{}},"title":{}}],["albumentations.augmentations.funct",{"_index":754,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional":{}}}],["albumentations.augmentations.functional.add_fog",{"_index":524,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.add_rain",{"_index":536,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.add_shadow",{"_index":549,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.add_snow",{"_index":552,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.add_sun_flar",{"_index":561,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.bbox_crop",{"_index":569,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.bbox_flip",{"_index":570,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.bbox_hflip",{"_index":576,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.bbox_rot",{"_index":587,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.bbox_rot90",{"_index":579,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.bbox_transpos",{"_index":589,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.bbox_vflip",{"_index":595,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.crop_bbox_by_coord",{"_index":596,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.crop_keypoint_by_coord",{"_index":605,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.elastic_transform",{"_index":608,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.elastic_transform_approx",{"_index":636,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.equ",{"_index":638,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.fancy_pca",{"_index":650,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.grid_distort",{"_index":667,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.iso_nois",{"_index":675,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.keypoint_center_crop",{"_index":693,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.keypoint_flip",{"_index":696,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.keypoint_hflip",{"_index":698,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.keypoint_random_crop",{"_index":699,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.keypoint_rot",{"_index":704,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.keypoint_rot90",{"_index":701,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.keypoint_scal",{"_index":705,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.keypoint_transpos",{"_index":708,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.keypoint_vflip",{"_index":709,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.multipli",{"_index":710,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.optical_distort",{"_index":711,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.poster",{"_index":727,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.preserve_channel_dim",{"_index":731,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.preserve_shap",{"_index":735,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.py3round",{"_index":736,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.solar",{"_index":739,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.functional.swap_tiles_on_imag",{"_index":744,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["albumentations.augmentations.keypoints_util",{"_index":791,"text":{},"title":{"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils":{}}}],["albumentations.augmentations.keypoints_utils.check_keypoint",{"_index":789,"text":{"api_reference/augmentations/keypoints_utils/":{}},"title":{}}],["albumentations.augmentations.transform",{"_index":1242,"text":{},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms":{}}}],["albumentations.augmentations.transforms.blur",{"_index":794,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.centercrop",{"_index":802,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.channeldropout",{"_index":809,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.channelshuffl",{"_index":817,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.clah",{"_index":819,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.coarsedropout",{"_index":829,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.crop",{"_index":844,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.cropnonemptymaskifexist",{"_index":847,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.cutout",{"_index":859,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.downscal",{"_index":864,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.elastictransform",{"_index":876,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.equ",{"_index":906,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.fancypca",{"_index":911,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.fancypca.__init__",{"_index":924,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.flip",{"_index":927,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.flip.appli",{"_index":928,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.fromfloat",{"_index":931,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.gaussianblur",{"_index":946,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.gaussnois",{"_index":960,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.glassblur",{"_index":968,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.griddistort",{"_index":980,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.griddropout",{"_index":988,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.horizontalflip",{"_index":1021,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.huesaturationvalu",{"_index":1022,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.imagecompress",{"_index":1030,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.imagecompression.imagecompressiontyp",{"_index":1042,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.invertimg",{"_index":1044,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.isonois",{"_index":1046,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.jpegcompress",{"_index":1055,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.lambda",{"_index":1056,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.longestmaxs",{"_index":1061,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.maskdropout",{"_index":1065,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.maskdropout.__init__",{"_index":1076,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.medianblur",{"_index":1083,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.motionblur",{"_index":1087,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.multiplicativenois",{"_index":1089,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.norm",{"_index":1100,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.opticaldistort",{"_index":1111,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.padifneed",{"_index":1114,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.poster",{"_index":1118,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randombright",{"_index":1128,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randombrightnesscontrast",{"_index":1132,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randomcontrast",{"_index":1137,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randomcrop",{"_index":1138,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randomcropnearbbox",{"_index":1139,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randomfog",{"_index":1145,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randomgamma",{"_index":1150,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randomgridshuffl",{"_index":1155,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randomrain",{"_index":1159,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randomresizedcrop",{"_index":1169,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randomrotate90",{"_index":1174,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randomrotate90.appli",{"_index":1176,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randomscal",{"_index":1177,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randomshadow",{"_index":1179,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randomsizedbboxsafecrop",{"_index":1187,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randomsizedcrop",{"_index":1192,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randomsnow",{"_index":1195,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.randomsunflar",{"_index":1205,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.res",{"_index":1212,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.rgbshift",{"_index":1213,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.rot",{"_index":1217,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.shiftscalerot",{"_index":1220,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.smallestmaxs",{"_index":1230,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.solar",{"_index":1232,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.tofloat",{"_index":1233,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.tograi",{"_index":1235,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.tosepia",{"_index":1237,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.transpos",{"_index":1239,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.augmentations.transforms.verticalflip",{"_index":1241,"text":{"api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations.core.composit",{"_index":1331,"text":{},"title":{"api_reference/core/composition/#albumentations.core.composition":{}}}],["albumentations.core.composition.bboxparam",{"_index":1290,"text":{"api_reference/core/composition/":{}},"title":{}}],["albumentations.core.composition.compos",{"_index":1303,"text":{"api_reference/core/composition/":{}},"title":{}}],["albumentations.core.composition.keypointparam",{"_index":1312,"text":{"api_reference/core/composition/":{}},"title":{}}],["albumentations.core.composition.oneof",{"_index":1324,"text":{"api_reference/core/composition/":{}},"title":{}}],["albumentations.core.composition.oneoroth",{"_index":1327,"text":{"api_reference/core/composition/":{}},"title":{}}],["albumentations.core.composition.perchannel",{"_index":1330,"text":{"api_reference/core/composition/":{}},"title":{}}],["albumentations.core.seri",{"_index":1373,"text":{},"title":{"api_reference/core/serialization/#albumentations.core.serialization":{}}}],["albumentations.core.serialization.from_dict",{"_index":1350,"text":{"api_reference/core/serialization/":{}},"title":{}}],["albumentations.core.serialization.load",{"_index":1356,"text":{"api_reference/core/serialization/":{}},"title":{}}],["albumentations.core.serialization.sav",{"_index":1363,"text":{"api_reference/core/serialization/":{}},"title":{}}],["albumentations.core.serialization.serializablemeta",{"_index":1336,"text":{"api_reference/core/serialization/":{}},"title":{}}],["albumentations.core.serialization.serializablemeta.__new__",{"_index":1344,"text":{"api_reference/core/serialization/":{}},"title":{}}],["albumentations.core.serialization.to_dict",{"_index":1371,"text":{"api_reference/core/serialization/":{}},"title":{}}],["albumentations.core.transforms_interfac",{"_index":1393,"text":{},"title":{"api_reference/core/transforms_interface/#albumentations.core.transforms_interface":{}}}],["albumentations.core.transforms_interface.basictransform",{"_index":1378,"text":{"api_reference/core/transforms_interface/":{}},"title":{}}],["albumentations.core.transforms_interface.basictransform.add_target",{"_index":1379,"text":{"api_reference/core/transforms_interface/":{}},"title":{}}],["albumentations.core.transforms_interface.dualtransform",{"_index":1383,"text":{"api_reference/core/transforms_interface/":{}},"title":{}}],["albumentations.core.transforms_interface.imageonlytransform",{"_index":1384,"text":{"api_reference/core/transforms_interface/":{}},"title":{}}],["albumentations.core.transforms_interface.noop",{"_index":1385,"text":{"api_reference/core/transforms_interface/":{}},"title":{}}],["albumentations.core.transforms_interface.to_tupl",{"_index":1387,"text":{"api_reference/core/transforms_interface/":{}},"title":{}}],["albumentations.imgaug.transform",{"_index":1460,"text":{},"title":{"api_reference/imgaug/transforms/#albumentations.imgaug.transforms":{}}}],["albumentations.imgaug.transforms.iaaadditivegaussiannois",{"_index":1401,"text":{"api_reference/imgaug/transforms/":{}},"title":{}}],["albumentations.imgaug.transforms.iaaaffin",{"_index":1407,"text":{"api_reference/imgaug/transforms/":{}},"title":{}}],["albumentations.imgaug.transforms.iaaemboss",{"_index":1419,"text":{"api_reference/imgaug/transforms/":{}},"title":{}}],["albumentations.imgaug.transforms.iaaperspect",{"_index":1426,"text":{"api_reference/imgaug/transforms/":{}},"title":{}}],["albumentations.imgaug.transforms.iaapiecewiseaffin",{"_index":1433,"text":{"api_reference/imgaug/transforms/":{}},"title":{}}],["albumentations.imgaug.transforms.iaasharpen",{"_index":1441,"text":{"api_reference/imgaug/transforms/":{}},"title":{}}],["albumentations.imgaug.transforms.iaasuperpixel",{"_index":1446,"text":{"api_reference/imgaug/transforms/":{}},"title":{}}],["albumentations.pytorch",{"_index":1800,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries":{}},"title":{}}],["albumentations.pytorch.transform",{"_index":1477,"text":{},"title":{"api_reference/pytorch/transforms/#albumentations.pytorch.transforms":{}}}],["albumentations.pytorch.transforms.totensor",{"_index":1469,"text":{"api_reference/pytorch/transforms/":{}},"title":{}}],["albumentations.pytorch.transforms.totensorv2",{"_index":1476,"text":{"api_reference/pytorch/transforms/":{}},"title":{}}],["albumentations_dataset",{"_index":1816,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{}},"title":{}}],["albumentations_experiment",{"_index":2577,"text":{"experimental/installation/":{},"experimental/installation/#install-the-latest-stable-version-from-pypi":{}},"title":{}}],["albumentations_experimental.augmentations.transform",{"_index":2611,"text":{},"title":{"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms":{}}}],["albumentations_experimental.augmentations.transforms.flipsymmetrickeypoint",{"_index":2598,"text":{"experimental/api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations_experimental.augmentations.transforms.horizontalflipsymmetrickeypoint",{"_index":2607,"text":{"experimental/api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations_experimental.augmentations.transforms.transposesymmetrickeypoint",{"_index":2609,"text":{"experimental/api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations_experimental.augmentations.transforms.verticalflipsymmetrickeypoint",{"_index":2610,"text":{"experimental/api_reference/augmentations/transforms/":{}},"title":{}}],["albumentations_pil_dataset",{"_index":1821,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{}},"title":{}}],["albumentations_pil_transform",{"_index":1820,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{}},"title":{}}],["albumentations_transform",{"_index":1815,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{}},"title":{}}],["albumentationsdataset",{"_index":1814,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{}},"title":{}}],["albumentationspildataset",{"_index":1817,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{}},"title":{}}],["alexnet",{"_index":2874,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["algorithm",{"_index":881,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["align_cont",{"_index":2507,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["align_item",{"_index":2508,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["align_self",{"_index":2509,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["allow",{"_index":1724,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#extensibility":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["along",{"_index":591,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#extensibility":{}},"title":{"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{}}}],["alpha",{"_index":535,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{}},"title":{}}],["alpha_affin",{"_index":610,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{}},"title":{}}],["alpha_coef",{"_index":527,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{}},"title":{}}],["alreadi",{"_index":343,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{}}],["alter",{"_index":2876,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["alwai",{"_index":262,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{}},"title":{}}],["always_appli",{"_index":208,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/core/transforms_interface/":{},"api_reference/imgaug/transforms/":{},"api_reference/pytorch/transforms/":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{}}}],["always_apply=false,",{"_index":1925,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["always_apply=tru",{"_index":212,"text":{"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{}}}],["amd.js';",{"_index":1490,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["amoebanet",{"_index":2890,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["amount",{"_index":1200,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{}},"title":{}}],["anaconda",{"_index":2745,"text":{"getting_started/installation/":{},"getting_started/installation/#install-the-latest-stable-version-from-conda-forge":{}},"title":{}}],["analysi",{"_index":630,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{}},"title":{}}],["angl",{"_index":588,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates":{}},"title":{}}],["angle_in_degre",{"_index":1314,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{"getting_started/keypoints_augmentation/#angle_in_degrees":{}}}],["angle_low",{"_index":1207,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomsunflare":{}},"title":{}}],["angle_upp",{"_index":1208,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{}},"title":{}}],["anim",{"_index":2006,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{}},"title":{}}],["annot",{"_index":223,"text":{"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_keypoints/":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{"examples/example_bboxes/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes2/#get-an-image-and-annotations-for-it":{},"examples/example_keypoints/#get-an-image-and-annotations-for-it":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{}}}],["anoth",{"_index":1329,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.OneOrOther":{},"examples/example_bboxes/":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{}},"title":{"examples/example_bboxes/#another-example":{},"examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image":{}}}],["another_imag",{"_index":2736,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{}},"title":{}}],["another_transformed_imag",{"_index":2735,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{}},"title":{}}],["apertur",{"_index":1085,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{}},"title":{}}],["api",{"_index":68,"text":{"":{},"#api-reference":{},"#welcome-to-albumentations-documentation":{},"api_reference/":{},"api_reference/core/":{},"api_reference/core/composition/":{},"api_reference/core/serialization/":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"experimental/overview/":{},"experimental/overview/#documentation":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{"#api-reference":{},"api_reference/core/composition/":{},"api_reference/core/composition/#composition-api-corecomposition":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#serialization-api-coreserialization":{}}}],["api'",{"_index":2196,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#note":{}},"title":{}}],["appear",{"_index":1184,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{}},"title":{}}],["appli",{"_index":96,"text":{"":{},"#examples":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.OneOrOther":{},"api_reference/core/composition/#albumentations.core.composition.PerChannel":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.ImageOnlyTransform":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/":{},"examples/#list-of-examples":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#frequently-asked-questions":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p2":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90.apply":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}}}],["applic",{"_index":2246,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["approach",{"_index":2921,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["appropri",{"_index":2624,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{}},"title":{}}],["approxim",{"_index":614,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["apt",{"_index":240,"text":{"faq/":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}},"title":{}}],["architectur",{"_index":1668,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{}},"title":{}}],["area",{"_index":406,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["arg",{"_index":2302,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/api_reference/augmentations/transforms/":{}},"title":{}}],["arg_nam",{"_index":2392,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["args=args,",{"_index":2455,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["argument",{"_index":291,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"faq/":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{}},"title":{"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{}}}],["arm",{"_index":2604,"text":{"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{}},"title":{}}],["around",{"_index":577,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["arrai",{"_index":195,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{}}}],["array_equ",{"_index":1904,"text":{"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["art",{"_index":2873,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["articl",{"_index":33,"text":{"":{},"#welcome-to-albumentations-documentation":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{},"faq/":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{}},"title":{}}],["artifact",{"_index":1417,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{}},"title":{}}],["as_supervis",{"_index":2080,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["ask",{"_index":122,"text":{"":{},"#other-topics":{},"faq/":{}},"title":{"faq/":{},"faq/#frequently-asked-questions":{}}}],["aspect",{"_index":1064,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{}},"title":{}}],["assert",{"_index":1684,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["assert_input_compat",{"_index":2471,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["assign",{"_index":2848,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["associ",{"_index":1603,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#get-an-image-and-annotations-for-it":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{}},"title":{}}],["astyp",{"_index":1979,"text":{"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["aug",{"_index":1679,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_kaggle_salt/#verticalflip":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["aug_data",{"_index":2187,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{}},"title":{}}],["aug_fn",{"_index":2186,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{}},"title":{}}],["aug_img",{"_index":2188,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{}},"title":{}}],["augment",{"_index":7,"text":{"":{},"#api-reference":{},"#examples":{},"#getting-started-with-albumentations":{},"#introduction-to-image-augmentation":{},"#welcome-to-albumentations-documentation":{},"api_reference/":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"examples/":{},"examples/#list-of-examples":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#defining-a-simple-augmentation-pipeline-for-image-augmentation":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_kaggle_salt/#verticalflip":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#weather-augmentations-in-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#migrating-from-torchvision-to-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"experimental/overview/":{},"experimental/overview/#overview":{},"experimental/overview/#why-a-separate-library":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#frequently-asked-questions":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#examples":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#examples":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p2":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#examples":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#diverse-set-of-supported-augmentations":{},"introduction/why_albumentations/#extensibility":{},"introduction/why_albumentations/#high-performance":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"#introduction-to-image-augmentation":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#defining-a-simple-augmentation-pipeline-for-image-augmentation":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#using-albumentations-to-augment-bounding-boxes-for-object-detection-tasks":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#weather-augmentations-in-albumentations":{},"examples/replay/":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/showcase/":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#showcase-cool-augmentation-examples-on-diverse-set-of-images-from-various-real-world-tasks":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation-for-object-detection":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/#diverse-set-of-supported-augmentations":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}}}],["augment_and_show",{"_index":1940,"text":{"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["augmented_imag",{"_index":1525,"text":{"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{}},"title":{}}],["author",{"_index":2068,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#using-albumentations-with-tensorflow":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["autoaug",{"_index":2881,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["autograph",{"_index":2408,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["autograph_opt",{"_index":2409,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["automat",{"_index":2085,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["autotun",{"_index":2077,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["avail",{"_index":28,"text":{"":{},"#welcome-to-albumentations-documentation":{},"examples/example_bboxes/":{},"examples/example_bboxes/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#get-an-image-and-annotations-for-it":{},"experimental/overview/":{},"experimental/overview/#overview":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{}}],["avendi",{"_index":2645,"text":{"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{}},"title":{}}],["averag",{"_index":1457,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{}},"title":{}}],["avoid",{"_index":2433,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["ax",{"_index":1656,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["axi",{"_index":578,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"examples/example/":{},"examples/example/#define-the-visualization-function":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#define-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/replay/":{},"examples/replay/#define-the-visualization-function":{},"examples/serialization/":{},"examples/serialization/#define-the-visualization-function":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#yolo":{}},"title":{}}],["ayushman",{"_index":2069,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#using-albumentations-with-tensorflow":{}},"title":{}}],["b",{"_index":1122,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["b1",{"_index":1126,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{}},"title":{}}],["b2",{"_index":1127,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{}},"title":{}}],["b9479fb66ba54448b347bf1197340a60",{"_index":2112,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["b9da9110e05a4770931ab8dbb85b6cc4",{"_index":2547,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["b_shift_limit",{"_index":1216,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["back",{"_index":872,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["background",{"_index":853,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{}},"title":{}}],["backward",{"_index":2588,"text":{"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{}},"title":{}}],["ball",{"_index":2688,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{}},"title":{}}],["banner",{"_index":2032,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["bar_color",{"_index":2549,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["bar_styl",{"_index":2565,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["barrel",{"_index":715,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{}},"title":{}}],["barrier",{"_index":2011,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["base",{"_index":619,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/core/serialization/":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["base_model",{"_index":2245,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["basic",{"_index":2872,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["basictransform",{"_index":1394,"text":{},"title":{"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform":{}}}],["basin",{"_index":2037,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["batch",{"_index":2158,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["batch_siz",{"_index":2311,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["batch_size=batch_size):",{"_index":2327,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["battl",{"_index":2899,"text":{"introduction/why_albumentations/":{}},"title":{"introduction/why_albumentations/#battle-tested":{}}}],["bbox",{"_index":401,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes/#visuaize-the-original-image-with-bounding-boxes":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#visuaize-the-image-with-bounding-boxes":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#mapilary-vistas":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{}}],["bbox=<funct",{"_index":1924,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["bbox_class",{"_index":2832,"text":{"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{}},"title":{}}],["bbox_crop",{"_index":760,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{}}}],["bbox_flip",{"_index":761,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{}}}],["bbox_hflip",{"_index":762,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{}}}],["bbox_param",{"_index":1304,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#mapilary-vistas":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{}},"title":{}}],["bbox_params=none,",{"_index":1899,"text":{"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["bbox_rot",{"_index":764,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{}}}],["bbox_rot90",{"_index":763,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{}}}],["bbox_transpos",{"_index":765,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{}}}],["bbox_vflip",{"_index":766,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{}}}],["bboxes1",{"_index":1783,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{}}],["bboxesm",{"_index":1784,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{}}],["bboxparam",{"_index":364,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"api_reference/core/composition/#albumentations.core.composition.BboxParams":{}}}],["be",{"_index":1455,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p2":{}},"title":{}}],["becam",{"_index":1639,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{}},"title":{}}],["becom",{"_index":1630,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["befor",{"_index":1191,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{}},"title":{}}],["behav",{"_index":282,"text":{"faq/":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{}},"title":{}}],["behavior",{"_index":271,"text":{"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["belong",{"_index":2806,"text":{"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["below",{"_index":2685,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{}},"title":{}}],["bench",{"_index":2033,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["benchmark",{"_index":2902,"text":{"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{}},"title":{}}],["benefici",{"_index":2931,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["bengali.ai",{"_index":2634,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}},"title":{}}],["besid",{"_index":2681,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["best",{"_index":626,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{}},"title":{}}],["better",{"_index":2885,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["between",{"_index":211,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{}}}],["bewar",{"_index":2591,"text":{"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{}},"title":{}}],["bg_label",{"_index":1952,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["bgr",{"_index":250,"text":{"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"faq/":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{}},"title":{"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{}}}],["bia",{"_index":1389,"text":{"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{}},"title":{}}],["bicycl",{"_index":2054,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["bicyclist",{"_index":2022,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["bigger",{"_index":2739,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{}},"title":{}}],["bike",{"_index":2013,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["billboard",{"_index":2035,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["bird",{"_index":2004,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["bit",{"_index":94,"text":{"":{},"#examples":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{}},"title":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{}}}],["black",{"_index":155,"text":{"contributing/":{},"contributing/#contributing":{}},"title":{}}],["bleach",{"_index":555,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{}},"title":{}}],["block",{"_index":2336,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p3":{}},"title":{}}],["blog",{"_index":114,"text":{"":{},"#external-resources":{},"external_resources/blog_posts_podcasts_talks/":{}},"title":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"external_resources/blog_posts_podcasts_talks/#blog-posts-podcasts-and-talks-about-albumentations":{}}}],["blue",{"_index":255,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"faq/":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{}},"title":{}}],["blur",{"_index":797,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{}}}],["blur_limit",{"_index":795,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["blur_valu",{"_index":541,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{}},"title":{}}],["blurri",{"_index":545,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{}},"title":{}}],["boat",{"_index":2055,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["bodi",{"_index":2792,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{}},"title":{}}],["bodun",{"_index":1604,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#get-an-image-and-annotations-for-it":{}},"title":{}}],["bonu",{"_index":2623,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{}},"title":{}}],["book",{"_index":118,"text":{"":{},"#external-resources":{},"external_resources/books/":{}},"title":{"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{}}}],["bool",{"_index":433,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{}},"title":{}}],["boolean",{"_index":896,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{}},"title":{}}],["boost",{"_index":37,"text":{"":{},"#welcome-to-albumentations-documentation":{}},"title":{}}],["booth",{"_index":2045,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["border",{"_index":1116,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["border_mod",{"_index":215,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{}},"title":{"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{}}}],["both",{"_index":575,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["bottom",{"_index":453,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{}},"title":{}}],["boun",{"_index":2648,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{}},"title":{}}],["bound",{"_index":78,"text":{"":{},"#examples":{},"#getting-started-with-albumentations":{},"api_reference/":{},"api_reference/augmentations/":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_multi_target/":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#helper-functions-for-working-with-bounding-boxes-augmentationsbbox_utils":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes/#using-albumentations-to-augment-bounding-boxes-for-object-detection-tasks":{},"examples/example_bboxes/#visuaize-the-original-image-with-bounding-boxes":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_bboxes2/#visuaize-the-image-with-bounding-boxes":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation-for-object-detection":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{}}}],["boundari",{"_index":417,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bboxes":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoints":{}},"title":{}}],["boundingrect",{"_index":1974,"text":{"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["bowl",{"_index":1971,"text":{"examples/showcase/":{}},"title":{"examples/showcase/#2018-data-science-bowl":{}}}],["box",{"_index":79,"text":{"":{},"#examples":{},"#getting-started-with-albumentations":{},"api_reference/":{},"api_reference/augmentations/":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_multi_target/":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#helper-functions-for-working-with-bounding-boxes-augmentationsbbox_utils":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes/#using-albumentations-to-augment-bounding-boxes-for-object-detection-tasks":{},"examples/example_bboxes/#visuaize-the-original-image-with-bounding-boxes":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_bboxes2/#visuaize-the-image-with-bounding-boxes":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation-for-object-detection":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{}}}],["box'",{"_index":1643,"text":{"examples/example_bboxes2/":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{}},"title":{}}],["box_color",{"_index":1576,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["box_styl",{"_index":2540,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["branch",{"_index":2579,"text":{"experimental/installation/":{},"getting_started/installation/":{}},"title":{"experimental/installation/#install-the-latest-version-from-the-master-branch-on-github":{},"getting_started/installation/#install-the-latest-version-from-the-master-branch-on-github":{}}}],["break",{"_index":268,"text":{"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{}},"title":{}}],["bridg",{"_index":2019,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["bright",{"_index":560,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["brighter",{"_index":2869,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{}},"title":{}}],["brighter_imag",{"_index":2918,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["brightness_by_max",{"_index":1135,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{}},"title":{}}],["brightness_coeff",{"_index":554,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomsnow":{}},"title":{}}],["brightness_coeffici",{"_index":542,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{}},"title":{}}],["brightness_enhanc",{"_index":2917,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["brightness_limit",{"_index":1133,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{}},"title":{}}],["broadcast",{"_index":1392,"text":{"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{}},"title":{}}],["bruce",{"_index":1544,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{}},"title":{}}],["bu",{"_index":2056,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["bucket",{"_index":2091,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["bug",{"_index":141,"text":{"contributing/":{},"contributing/#contributing":{},"faq/":{},"faq/#frequently-asked-questions":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"release_notes/#bug-fixes":{}}}],["buggi",{"_index":2936,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["build",{"_index":176,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{}}}],["built",{"_index":1890,"text":{"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#extensibility":{}},"title":{}}],["buragohain",{"_index":2070,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#using-albumentations-with-tensorflow":{}},"title":{}}],["by_channel",{"_index":640,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{}},"title":{}}],["c",{"_index":2747,"text":{"getting_started/installation/":{},"getting_started/installation/#install-the-latest-stable-version-from-conda-forge":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["c/create_c/make_imagenet_c.pi",{"_index":979,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{}},"title":{}}],["cache_kei",{"_index":2388,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["calcul",{"_index":405,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/setting_probabilities/":{}},"title":{"getting_started/setting_probabilities/#example-calculations":{}}}],["calculate_bbox_area",{"_index":512,"text":{},"title":{"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{}}}],["call",{"_index":189,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.OneOrOther":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#view-images-from-the-dataset_1":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{}}}],["call_context_kei",{"_index":2383,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["call_for_each_replica",{"_index":2458,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["callabl",{"_index":909,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{}},"title":{}}],["callback",{"_index":2313,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["camera",{"_index":685,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["can't",{"_index":1773,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{}}],["capabl",{"_index":2875,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["captur",{"_index":2939,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["capture_by_valu",{"_index":2413,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["capture_by_value=self._capture_by_value),",{"_index":2395,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["car",{"_index":2057,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["caravan",{"_index":2058,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["care",{"_index":1473,"text":{"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{}},"title":{}}],["carefulli",{"_index":2794,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["case",{"_index":300,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["cast",{"_index":935,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{}},"title":{}}],["cat",{"_index":1622,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["cat_id",{"_index":1949,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["catch",{"_index":2036,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["catch(e)",{"_index":1503,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["categori",{"_index":1942,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["category_id",{"_index":1598,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes/#visuaize-the-original-image-with-bounding-boxes":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#visuaize-the-image-with-bounding-boxes":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["category_id_to_nam",{"_index":1599,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes/#visuaize-the-original-image-with-bounding-boxes":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#visuaize-the-image-with-bounding-boxes":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["caus",{"_index":326,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"faq/":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["cctv",{"_index":2038,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["ccw",{"_index":582,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{}},"title":{}}],["cell",{"_index":984,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{}},"title":{}}],["center",{"_index":464,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#yolo":{}},"title":{}}],["centercrop",{"_index":1243,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"examples/example_kaggle_salt/#centercrop-and-crop":{}}}],["centercrop(256,",{"_index":1825,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["central",{"_index":803,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{}},"title":{}}],["ch",{"_index":2635,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}},"title":{}}],["chahnel",{"_index":1082,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{}},"title":{}}],["challeng",{"_index":1651,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#using-albumentations-for-a-semantic-segmentation-task":{}},"title":{}}],["chanc",{"_index":317,"text":{"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p2":{},"getting_started/setting_probabilities/#p3":{}},"title":{}}],["chang",{"_index":168,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"contributing/":{},"contributing/#contributing":{},"examples/example_bboxes/":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"faq/":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{}}],["channel",{"_index":253,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.preserve_channel_dim":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.PerChannel":{},"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"faq/":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["channel_drop_rang",{"_index":810,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{}},"title":{}}],["channeldropout",{"_index":1244,"text":{"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{}}}],["channelshuffl",{"_index":1245,"text":{"examples/showcase/":{},"examples/showcase/#color-augmentations":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{}}}],["check",{"_index":361,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoint":{},"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoints":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["check_bbox",{"_index":513,"text":{},"title":{"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bboxes":{}}}],["check_each_transform",{"_index":1291,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{}},"title":{}}],["check_each_transform=fals",{"_index":362,"text":{"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["check_keypoint",{"_index":792,"text":{},"title":{"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoint":{},"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoints":{}}}],["check_valid",{"_index":426,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{}},"title":{}}],["child",{"_index":2817,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p3":{}},"title":{}}],["children",{"_index":2542,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["choos",{"_index":814,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{}},"title":{}}],["chosen",{"_index":1069,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{}},"title":{}}],["cifar",{"_index":2616,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{}},"title":{}}],["circl",{"_index":566,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{}},"title":{}}],["citation=\"\"\"@onlin",{"_index":2139,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["cl",{"_index":1345,"text":{"api_reference/core/serialization/":{}},"title":{}}],["clahe",{"_index":1246,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/showcase/":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#mapilary-vistas":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{}}}],["class",{"_index":72,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/core/composition/":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/transforms_interface/":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/pytorch/transforms/":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"experimental/api_reference/augmentations/transforms/":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{}}}],["class_categori",{"_index":2713,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{}},"title":{}}],["class_dict",{"_index":1346,"text":{"api_reference/core/serialization/":{}},"title":{}}],["class_label",{"_index":2682,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["class_nam",{"_index":1580,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{}},"title":{}}],["class_sid",{"_index":2789,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["class_weight",{"_index":2316,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["classic",{"_index":2766,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{}}],["classif",{"_index":47,"text":{"":{},"#getting-started-with-albumentations":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"getting_started/image_augmentation/":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{}}}],["classlabel(shape=(),",{"_index":2131,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["clean",{"_index":2401,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["clear",{"_index":1692,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{}},"title":{}}],["clip",{"_index":1014,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["clip_limit",{"_index":820,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{}},"title":{}}],["clone",{"_index":150,"text":{"contributing/":{},"contributing/#contributing":{}},"title":{}}],["closer",{"_index":2815,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{}}],["closest",{"_index":1677,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{}},"title":{}}],["coarsedropout",{"_index":836,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{}}}],["coco",{"_index":430,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#get-an-image-and-annotations-for-it":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#mapilary-vistas":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{}},"title":{"getting_started/bounding_boxes_augmentation/#coco":{}}}],["coco_bbox",{"_index":1999,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["code",{"_index":27,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply":{},"contributing/":{},"contributing/#contributing":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/overview/":{},"experimental/overview/#overview":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#it-is-open-source-and-mit-licensed":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["coeffici",{"_index":534,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.multiply":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{}},"title":{}}],["col",{"_index":403,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/keypoints_utils/":{}},"title":{}}],["colab",{"_index":65,"text":{"":{},"#welcome-to-albumentations-documentation":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{}},"title":{}}],["collect",{"_index":2412,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["color",{"_index":252,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"faq/":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/showcase/#color-augmentations":{}}}],["color_bgr2rgb",{"_index":1521,"text":{"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_bboxes/":{},"examples/example_bboxes/#load-the-image-from-the-disk":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#load-the-image-from-the-disk":{},"examples/example_keypoints/":{},"examples/example_keypoints/#get-an-image-and-annotations-for-it":{},"examples/example_multi_target/":{},"examples/example_multi_target/#load-images-from-the-disk":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#load-the-image-from-the-disk":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/replay/":{},"examples/replay/#load-an-image-from-the-disk":{},"examples/replay/#load-new-images":{},"examples/serialization/":{},"examples/serialization/#load-an-image-from-the-disk":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{}}],["color_shift",{"_index":676,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{}},"title":{}}],["colorjitt",{"_index":1826,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["colorspac",{"_index":1051,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{}},"title":{}}],["column",{"_index":1240,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{}},"title":{}}],["combin",{"_index":1702,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{}},"title":{"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{}}}],["come",{"_index":2818,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{}},"title":{}}],["command",{"_index":230,"text":{"faq/":{},"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{}},"title":{}}],["commit",{"_index":153,"text":{"contributing/":{},"contributing/#contributing":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["common",{"_index":258,"text":{"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"faq/":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{}},"title":{}}],["compar",{"_index":2897,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{}},"title":{}}],["comparison",{"_index":2883,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["compat",{"_index":2589,"text":{"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{}},"title":{}}],["competit",{"_index":17,"text":{"":{},"#welcome-to-albumentations-documentation":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#battle-tested":{}},"title":{}}],["compil",{"_index":2214,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["complet",{"_index":1449,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["complex",{"_index":264,"text":{"examples/example_bboxes/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{}},"title":{"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{}}}],["compos",{"_index":281,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.PerChannel":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#run-the-example":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p2":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{"api_reference/core/composition/#albumentations.core.composition.Compose":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{}}}],["compose([resize(256,",{"_index":1823,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["composit",{"_index":387,"text":{"api_reference/":{},"api_reference/core/":{},"api_reference/core/composition/":{}},"title":{"api_reference/core/composition/":{},"api_reference/core/composition/#composition-api-corecomposition":{}}}],["compositetensor",{"_index":2426,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["compress",{"_index":1039,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{}},"title":{}}],["compression_typ",{"_index":1034,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{}},"title":{}}],["comput",{"_index":44,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_albumentations/#extensibility":{}},"title":{"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{}}}],["concretefunct",{"_index":2400,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["conda",{"_index":2743,"text":{"getting_started/installation/":{},"getting_started/installation/#install-the-latest-stable-version-from-conda-forge":{}},"title":{"getting_started/installation/#install-the-latest-stable-version-from-conda-forge":{}}}],["confer",{"_index":633,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["consid",{"_index":1550,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["consist",{"_index":1568,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{}},"title":{}}],["constant",{"_index":1437,"text":{"api_reference/imgaug/transforms/":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{}},"title":{}}],["construct",{"_index":1361,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{}},"title":{}}],["consult",{"_index":243,"text":{"faq/":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}},"title":{}}],["contain",{"_index":55,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["context",{"_index":2649,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{}},"title":{}}],["contrari",{"_index":2930,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["contrast",{"_index":823,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["contrast_limit",{"_index":1134,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{}},"title":{}}],["contribut",{"_index":127,"text":{"":{},"#other-topics":{},"contributing/":{}},"title":{"contributing/":{},"contributing/#contributing":{}}}],["control",{"_index":1052,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"examples/example_bboxes/":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["conv1",{"_index":2478,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["conv2",{"_index":2480,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["conv2d",{"_index":2206,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["conv2d_27",{"_index":2491,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["conv3",{"_index":2482,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["conveni",{"_index":2619,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{}},"title":{}}],["convers",{"_index":806,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{}}],["convert",{"_index":193,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensorV2":{},"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{}}}],["convert_bbox_from_albument",{"_index":514,"text":{},"title":{"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{}}}],["convert_bbox_to_albument",{"_index":515,"text":{},"title":{"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{}}}],["convert_bboxes_from_albument",{"_index":516,"text":{},"title":{"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{}}}],["convert_bboxes_to_albument",{"_index":517,"text":{},"title":{"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations":{}}}],["convert_image_dtyp",{"_index":2153,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#process-data":{}},"title":{}}],["convolut",{"_index":628,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}},"title":{}}],["cookbook",{"_index":2643,"text":{"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{}},"title":{}}],["cool",{"_index":107,"text":{"":{},"#examples":{},"examples/":{},"examples/#list-of-examples":{},"examples/showcase/":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#examples":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#examples":{}},"title":{"examples/showcase/":{},"examples/showcase/#showcase-cool-augmentation-examples-on-diverse-set-of-images-from-various-real-world-tasks":{}}}],["coord",{"_index":607,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{}},"title":{}}],["coordin",{"_index":452,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoint":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates":{}}}],["copi",{"_index":348,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{}}],["core",{"_index":129,"text":{"":{},"#api-reference":{},"api_reference/":{}},"title":{}}],["corner",{"_index":456,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{}}],["correct",{"_index":2849,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["correctli",{"_index":2680,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["correspond",{"_index":999,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{}},"title":{}}],["corrupt",{"_index":2906,"text":{"introduction/why_albumentations/":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["cost",{"_index":2861,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["costli",{"_index":2852,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["count",{"_index":983,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["creat",{"_index":146,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta.__new__":{},"contributing/":{},"contributing/#contributing":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{}},"title":{"examples/tensorflow-example/#create-pipeline-to-process-data":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{}}}],["create_model",{"_index":2204,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["credit",{"_index":918,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}},"title":{}}],["crop",{"_index":482,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"examples/example_bboxes/":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"examples/example_kaggle_salt/#centercrop-and-crop":{}}}],["crop_bbox_by_coord",{"_index":767,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{}}}],["crop_coord",{"_index":597,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{}},"title":{}}],["crop_height",{"_index":598,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{}},"title":{}}],["crop_keypoint_by_coord",{"_index":768,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{}}}],["crop_width",{"_index":599,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{}},"title":{}}],["cropnonemptymaskifexist",{"_index":1247,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{}}}],["crosswalk",{"_index":2014,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["csv",{"_index":2706,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{}},"title":{}}],["curb",{"_index":2007,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["current",{"_index":687,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{}},"title":{}}],["current_left_up_corner_col",{"_index":749,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{}},"title":{}}],["current_left_up_corner_row",{"_index":748,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{}},"title":{}}],["custom",{"_index":1914,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["cut",{"_index":1633,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"experimental/overview/":{},"experimental/overview/#overview":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{}},"title":{}}],["cutout",{"_index":1248,"text":{"examples/showcase/":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{}}}],["cv",{"_index":639,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{}},"title":{}}],["cv2",{"_index":874,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"examples/example/":{},"examples/example/#import-the-required-libraries":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#import-the-required-libraries":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#import-the-required-libraries":{},"examples/example_bboxes/#load-the-image-from-the-disk":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#import-the-required-libraries":{},"examples/example_bboxes2/#load-the-image-from-the-disk":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#import-the-required-libraries":{},"examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#get-an-image-and-annotations-for-it":{},"examples/example_keypoints/#import-the-required-libraries":{},"examples/example_multi_target/":{},"examples/example_multi_target/#import-the-required-libraries":{},"examples/example_multi_target/#load-images-from-the-disk":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#import-the-required-libraries":{},"examples/example_weather_transforms/#load-the-image-from-the-disk":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/replay/":{},"examples/replay/#import-the-required-libraries":{},"examples/replay/#load-an-image-from-the-disk":{},"examples/replay/#load-new-images":{},"examples/serialization/":{},"examples/serialization/#import-the-required-libraries":{},"examples/serialization/#load-an-image-from-the-disk":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#import-the-required-libraries":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-1-import-the-required-libraries":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#step-1-import-the-required-libraries":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{}}],["cv2.border_const",{"_index":325,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"faq/":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{}},"title":{}}],["cv2.border_constant,",{"_index":889,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["cv2.border_constant.",{"_index":895,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["cv2.border_reflect",{"_index":218,"text":{"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{}}}],["cv2.border_reflect,",{"_index":891,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["cv2.border_reflect_101",{"_index":219,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{}}}],["cv2.border_reflect_101.",{"_index":893,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["cv2.border_replicate,",{"_index":890,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["cv2.border_wrap,",{"_index":892,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["cv2.color_bgr2rgb)",{"_index":191,"text":{"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{}}}],["cv2.cvtcolor",{"_index":2730,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{}},"title":{}}],["cv2.cvtcolor(image,",{"_index":190,"text":{"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{}}}],["cv2.inter_area,",{"_index":885,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["cv2.inter_cubic,",{"_index":884,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["cv2.inter_lanczos4.",{"_index":886,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["cv2.inter_linear,",{"_index":883,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["cv2.inter_linear.",{"_index":887,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{}},"title":{}}],["cv2.inter_nearest",{"_index":875,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{}},"title":{}}],["cv2.inter_nearest,",{"_index":882,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["cval",{"_index":1411,"text":{"api_reference/imgaug/transforms/":{}},"title":{}}],["cvtcolor",{"_index":1520,"text":{"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_bboxes/":{},"examples/example_bboxes/#load-the-image-from-the-disk":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#load-the-image-from-the-disk":{},"examples/example_keypoints/":{},"examples/example_keypoints/#get-an-image-and-annotations-for-it":{},"examples/example_multi_target/":{},"examples/example_multi_target/#load-images-from-the-disk":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#load-the-image-from-the-disk":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/replay/":{},"examples/replay/#load-an-image-from-the-disk":{},"examples/replay/#load-new-images":{},"examples/serialization/":{},"examples/serialization/#load-an-image-from-the-disk":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{}}],["cycl",{"_index":2434,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["d",{"_index":571,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply":{}},"title":{}}],["d4",{"_index":1691,"text":{"examples/example_kaggle_salt/":{}},"title":{"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{}}}],["d7440ea51f4d48f4ba9f796f17c50694",{"_index":2550,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["dai",{"_index":546,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{}},"title":{}}],["data",{"_index":201,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_kaggle_salt/#using-albumentations-for-a-semantic-segmentation-task":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#migrating-from-torchvision-to-albumentations":{},"examples/replay/":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/showcase/":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{},"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{"examples/showcase/#2018-data-science-bowl":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{}}}],["data/datasets`.",{"_index":2097,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["data['replay']",{"_index":1859,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{}}}],["data_format",{"_index":1358,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"examples/serialization/":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["data_format='yaml'",{"_index":1906,"text":{"examples/serialization/":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["databas",{"_index":1910,"text":{"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{}},"title":{}}],["dataset",{"_index":1602,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#get-an-image-and-annotations-for-it":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/showcase/":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#view-images-from-the-dataset_1":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#view-images-from-the-dataset_1":{}}}],["datatyp",{"_index":1561,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["deal",{"_index":2926,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["debian",{"_index":238,"text":{"faq/":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}},"title":{}}],["debug",{"_index":102,"text":{"":{},"#examples":{},"examples/":{},"examples/#list-of-examples":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{}},"title":{"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{}}}],["decid",{"_index":319,"text":{"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p3":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["declar",{"_index":1607,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/replay/":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}}}],["decreas",{"_index":868,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{}},"title":{}}],["dedic",{"_index":75,"text":{"":{},"#introduction-to-image-augmentation":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{}},"title":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}}}],["dee763d01b544bc085bf150a3ee6df39",{"_index":2562,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["deep",{"_index":13,"text":{"":{},"#introduction-to-image-augmentation":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#battle-tested":{}},"title":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}}}],["def",{"_index":399,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/core/serialization/":{},"api_reference/core/transforms_interface/":{},"examples/example/":{},"examples/example/#define-the-visualization-function":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_multi_target/":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#define-the-visualization-function":{},"examples/serialization/":{},"examples/serialization/#define-the-visualization-function":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["defaul",{"_index":1099,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{}},"title":{}}],["default",{"_index":486,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.PerChannel":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{}}}],["defect",{"_index":1074,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{}},"title":{}}],["defin",{"_index":89,"text":{"":{},"#examples":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/":{},"examples/#list-of-examples":{},"examples/example/":{},"examples/example/#defining-a-simple-augmentation-pipeline-for-image-augmentation":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/replay/":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"faq/":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{}},"title":{"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-the-visualization-function":{},"examples/example/#defining-a-simple-augmentation-pipeline-for-image-augmentation":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_keypoints/#define-keypoints":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/replay/#define-the-visualization-function":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#define-the-visualization-function":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#import-libraries-and-define-helper-functions":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{}}}],["definit",{"_index":1776,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}}}],["deform",{"_index":616,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["degrad",{"_index":2909,"text":{"introduction/why_albumentations/":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["degre",{"_index":581,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90.apply":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"examples/example_kaggle_salt/":{}},"title":{"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{}}}],["dehidr",{"_index":1689,"text":{"examples/example_kaggle_salt/":{}},"title":{"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{}}}],["demo",{"_index":2720,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["demo.herokuapp.com",{"_index":2723,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["demonstr",{"_index":58,"text":{"":{},"#welcome-to-albumentations-documentation":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#weather-augmentations-in-albumentations":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{}},"title":{}}],["denorm",{"_index":470,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{}},"title":{}}],["denormalize_bbox",{"_index":518,"text":{},"title":{"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{}}}],["dens",{"_index":2212,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["dense1",{"_index":2484,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["dense2",{"_index":2485,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["depend",{"_index":335,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{}}],["deprec",{"_index":275,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{},"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{}},"title":{}}],["describ",{"_index":36,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["descript",{"_index":70,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.multiply":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.PerChannel":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{}},"title":{}}],["description='a",{"_index":2125,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["description_tooltip",{"_index":2553,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["description_width",{"_index":2535,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["descriptionstylemodel",{"_index":2532,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["deseri",{"_index":1342,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}}}],["desir",{"_index":1115,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{}},"title":{}}],["destruct",{"_index":1688,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{}},"title":{"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{}}}],["detail",{"_index":1608,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{}},"title":{}}],["detect",{"_index":52,"text":{"":{},"#examples":{},"#getting-started-with-albumentations":{},"#welcome-to-albumentations-documentation":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/example_bboxes/":{},"examples/example_bboxes/#using-albumentations-to-augment-bounding-boxes-for-object-detection-tasks":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation-for-object-detection":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}}}],["detection/discussion/114254",{"_index":1075,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{}},"title":{}}],["determin",{"_index":1438,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{}},"title":{}}],["develop",{"_index":137,"text":{"contributing/":{},"contributing/#contributing":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["deviat",{"_index":955,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{}},"title":{}}],["diamet",{"_index":1742,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{}},"title":{}}],["dict",{"_index":1308,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["dictionari",{"_index":1353,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{}},"title":{"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{}}}],["differ",{"_index":43,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_albumentations/#diverse-set-of-supported-augmentations":{}},"title":{"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{}}}],["difficult",{"_index":2844,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["digit",{"_index":1774,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{}}],["dim",{"_index":734,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.preserve_channel_dim":{}},"title":{}}],["direct",{"_index":1002,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["directli",{"_index":2089,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["directori",{"_index":188,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}}}],["dirnam",{"_index":1958,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["disable=protect",{"_index":2305,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["disadvantag",{"_index":2172,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["discov",{"_index":2882,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#rigorous-testing":{}},"title":{}}],["discuss",{"_index":2709,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["disk",{"_index":1517,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/replay/":{},"examples/serialization/":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/simultaneous_augmentation/":{}},"title":{"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_bboxes/#load-the-image-from-the-disk":{},"examples/example_bboxes2/#load-the-image-from-the-disk":{},"examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk":{},"examples/example_multi_target/#load-images-from-the-disk":{},"examples/example_weather_transforms/#load-the-image-from-the-disk":{},"examples/replay/#load-an-image-from-the-disk":{},"examples/serialization/#load-an-image-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{}}}],["displac",{"_index":899,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["displai",{"_index":1540,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["distanc",{"_index":974,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{}},"title":{}}],["distinct",{"_index":1700,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{}},"title":{}}],["distort",{"_index":673,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.grid_distortion":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{}},"title":{}}],["distort_limit",{"_index":981,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#opticaldistortion":{}},"title":{}}],["distribut",{"_index":915,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{}},"title":{}}],["divers",{"_index":108,"text":{"":{},"#examples":{},"examples/":{},"examples/#list-of-examples":{},"examples/showcase/":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#examples":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#examples":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{}},"title":{"examples/showcase/":{},"examples/showcase/#showcase-cool-augmentation-examples-on-diverse-set-of-images-from-various-real-world-tasks":{},"introduction/why_albumentations/#diverse-set-of-supported-augmentations":{}}}],["divid",{"_index":501,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{}},"title":{}}],["divis",{"_index":1669,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["dl",{"_index":2567,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["doc",{"_index":942,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["document",{"_index":2,"text":{"":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"faq/":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{"":{},"#welcome-to-albumentations-documentation":{},"experimental/overview/#documentation":{}}}],["document.addeventlistener('domcontentloaded',",{"_index":1507,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["document.body.appendchild(scriptelement);",{"_index":1506,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["document.createelement('script');",{"_index":1485,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["document.queryselector('script[type=\"application/vnd.jupyter.widget",{"_index":1482,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["doesn't",{"_index":222,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#frequently-asked-questions":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{}}}],["dog",{"_index":1623,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{}},"title":{}}],["domain",{"_index":2854,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["don't",{"_index":267,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_keypoints/":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["done",{"_index":138,"text":{"contributing/":{},"contributing/#contributing":{}},"title":{}}],["downgrad",{"_index":339,"text":{"release_notes/":{},"release_notes/#improvements":{}},"title":{}}],["download",{"_index":2086,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["downscal",{"_index":870,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{}}}],["dr",{"_index":2631,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}},"title":{}}],["draw",{"_index":2850,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["drive",{"_index":2865,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["drizzl",{"_index":1166,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{}},"title":{}}],["drop",{"_index":813,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"examples/example_bboxes/":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{}},"title":{}}],["drop_color",{"_index":540,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{}},"title":{}}],["drop_length",{"_index":538,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{}},"title":{}}],["drop_width",{"_index":539,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{}},"title":{}}],["dropout",{"_index":2250,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["ds",{"_index":2162,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["ds_alb",{"_index":2193,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#view-images-from-the-dataset_1":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["ds_tf",{"_index":2156,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["dtype",{"_index":932,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["dtype=tf.int64,",{"_index":2132,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["dtype=tf.uint8),",{"_index":2130,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["dual",{"_index":1302,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{}},"title":{}}],["dualtransform",{"_index":1396,"text":{},"title":{"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.DualTransform":{}}}],["dummi",{"_index":733,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.preserve_channel_dim":{},"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{}},"title":{}}],["dure",{"_index":2708,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["dx",{"_index":713,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["dy",{"_index":714,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["e",{"_index":163,"text":{"contributing/":{},"contributing/#contributing":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["e.g",{"_index":1301,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{}},"title":{}}],["e.g.",{"_index":435,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["e.g.,",{"_index":1909,"text":{"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{}},"title":{}}],["e0e2099e64e34a938ad70dd66da111e2",{"_index":2570,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["each",{"_index":61,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#define-keypoints":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{},"getting_started/setting_probabilities/#p2":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{}}}],["eager",{"_index":2202,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["easili",{"_index":2904,"text":{"introduction/why_albumentations/":{},"introduction/why_albumentations/#extensibility":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["eb1a387f74dd47cfad2c6b90deb572f9",{"_index":2571,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["edg",{"_index":1005,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"experimental/overview/":{},"experimental/overview/#overview":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{}}],["effect",{"_index":1164,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{}},"title":{}}],["effici",{"_index":2171,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["efficientnet",{"_index":2879,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["effort",{"_index":2859,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["ego",{"_index":2064,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["eigen",{"_index":661,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}},"title":{}}],["eight",{"_index":1699,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{}},"title":{}}],["elast",{"_index":615,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["elastic_transform",{"_index":769,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{}}}],["elastic_transform_approx",{"_index":770,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{}}}],["elastictransform",{"_index":1249,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/showcase/":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{}}}],["elbow",{"_index":2755,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["element",{"_index":1391,"text":{"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{}},"title":{}}],["elementwis",{"_index":1092,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{}},"title":{}}],["elimin",{"_index":345,"text":{"release_notes/":{},"release_notes/#improvements":{}},"title":{}}],["emboss",{"_index":1420,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{}},"title":{}}],["emot",{"_index":2752,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{}}],["emploi",{"_index":2621,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{}},"title":{}}],["empti",{"_index":850,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{}},"title":{}}],["enabl",{"_index":901,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["encod",{"_index":2660,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{}}],["end",{"_index":1571,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["engin",{"_index":1887,"text":{"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{}},"title":{}}],["enhanc",{"_index":2919,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["enough",{"_index":2593,"text":{"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["ensur",{"_index":1641,"text":{"examples/example_bboxes2/":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{}},"title":{}}],["enter",{"_index":1018,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["enumer",{"_index":1043,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression.ImageCompressionType":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{}},"title":{}}],["ep",{"_index":1154,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{}},"title":{}}],["epoch",{"_index":2220,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["equal",{"_index":213,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#frequently-asked-questions":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p2":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{}}}],["equival",{"_index":1822,"text":{"examples/migrating_from_torchvision_to_albumentations/":{}},"title":{"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}}}],["er",{"_index":1860,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["eros",{"_index":508,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{}},"title":{}}],["erosion_r",{"_index":503,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{}},"title":{}}],["error",{"_index":173,"text":{"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}}}],["estim",{"_index":2750,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{}},"title":{}}],["etc",{"_index":372,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["eugen",{"_index":2627,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}},"title":{}}],["even",{"_index":296,"text":{"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["ex",{"_index":1310,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{}},"title":{}}],["exact",{"_index":976,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{}},"title":{}}],["exampl",{"_index":54,"text":{"":{},"#examples":{},"#welcome-to-albumentations-documentation":{},"examples/":{},"examples/#list-of-examples":{},"examples/example/":{},"examples/example/#defining-a-simple-augmentation-pipeline-for-image-augmentation":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/showcase/":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#frequently-asked-questions":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#examples":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p2":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#examples":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{"#examples":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/showcase/":{},"examples/showcase/#showcase-cool-augmentation-examples-on-diverse-set-of-images-from-various-real-world-tasks":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"examples/tensorflow-example/#an-example-pipeline-using-tfimage":{},"examples/tensorflow-example/#run-the-example":{},"faq/#examples":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/image_augmentation/#examples":{},"getting_started/keypoints_augmentation/#examples":{},"getting_started/mask_augmentation/#examples":{},"getting_started/setting_probabilities/#example-calculations":{},"getting_started/simultaneous_augmentation/#examples":{}}}],["except",{"_index":367,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["execut",{"_index":2292,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["exist",{"_index":269,"text":{"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{}}],["exit",{"_index":2344,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["expect",{"_index":1558,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_multi_target/":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{}}],["expens",{"_index":2853,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["experiment",{"_index":124,"text":{"":{},"#other-topics":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/installation/":{},"experimental/installation/#installation":{},"experimental/overview/":{},"experimental/overview/#overview":{},"experimental/overview/#why-a-separate-library":{}},"title":{"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations-experimental-transforms-augmentationstransforms":{}}}],["expert",{"_index":2855,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["explicitli",{"_index":261,"text":{"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"faq/":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{}},"title":{}}],["explor",{"_index":2618,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{}},"title":{}}],["export",{"_index":332,"text":{"faq/":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{}},"title":{}}],["extens",{"_index":2596,"text":{"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#rigorous-testing":{}},"title":{"introduction/why_albumentations/#extensibility":{}}}],["extern",{"_index":112,"text":{"":{}},"title":{"#external-resources":{}}}],["extra",{"_index":323,"text":{"faq/":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{}},"title":{}}],["extract",{"_index":2163,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["extractor",{"_index":2268,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["extrapol",{"_index":888,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["ey",{"_index":2758,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{}}],["f",{"_index":1655,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["f500",{"_index":2107,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["face",{"_index":2751,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{}}],["facial",{"_index":2761,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{}}],["factor",{"_index":580,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["fail",{"_index":175,"text":{"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{}}}],["failur",{"_index":2937,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["fallback",{"_index":1493,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["fals",{"_index":210,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/core/transforms_interface/":{},"api_reference/imgaug/transforms/":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{}}}],["fanci",{"_index":652,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{}},"title":{}}],["fancy_pca",{"_index":771,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{}}}],["fancypca",{"_index":912,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}}}],["far",{"_index":1439,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#note":{}},"title":{}}],["fashion",{"_index":1000,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["fast",{"_index":4,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}},"title":{}}],["faster",{"_index":2176,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{}},"title":{}}],["feasibl",{"_index":2860,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["featur",{"_index":60,"text":{"":{},"#other-topics":{},"#welcome-to-albumentations-documentation":{},"contributing/":{},"contributing/#contributing":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{}},"title":{}}],["features=featuresdict({",{"_index":2128,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["fenc",{"_index":2008,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["few",{"_index":1625,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_keypoints/":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{}}}],["field",{"_index":1299,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["fig",{"_index":2164,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["fight",{"_index":2898,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["figsiz",{"_index":1514,"text":{"examples/example/":{},"examples/example/#define-the-visualization-function":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_multi_target/":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/replay/":{},"examples/replay/#define-the-visualization-function":{},"examples/serialization/":{},"examples/serialization/#define-the-visualization-function":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["figur",{"_index":1513,"text":{"examples/example/":{},"examples/example/#define-the-visualization-function":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_multi_target/":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/replay/":{},"examples/replay/#define-the-visualization-function":{},"examples/serialization/":{},"examples/serialization/#define-the-visualization-function":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["file",{"_index":143,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"contributing/":{},"contributing/#contributing":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}}}],["file_path",{"_index":1802,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{}},"title":{}}],["filenam",{"_index":1943,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["filepath",{"_index":1357,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{}},"title":{}}],["fill",{"_index":1079,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{}},"title":{}}],["fill_valu",{"_index":811,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["filter",{"_index":494,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{}},"title":{}}],["filter_bbox",{"_index":519,"text":{},"title":{"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{}}}],["filter_bboxes_by_vis",{"_index":520,"text":{},"title":{"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{}}}],["final",{"_index":483,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{}}],["find",{"_index":140,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{},"contributing/":{},"contributing/#contributing":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#it-is-open-source-and-mit-licensed":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{}}}],["find_in_dir",{"_index":1957,"text":{"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["findnonzero",{"_index":1975,"text":{"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["finish",{"_index":2338,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["fire",{"_index":2039,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["first",{"_index":856,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/core/composition/":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["fishey",{"_index":723,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{}},"title":{}}],["fit",{"_index":2195,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset_1":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["five",{"_index":2765,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{}},"title":{}}],["fix",{"_index":180,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"faq/":{},"faq/#frequently-asked-questions":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"release_notes/":{},"release_notes/#bug-fixes":{},"release_notes/#improvements":{}},"title":{"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{},"release_notes/#bug-fixes":{}}}],["flag",{"_index":880,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{}},"title":{}}],["flake8",{"_index":157,"text":{"contributing/":{},"contributing/#contributing":{}},"title":{}}],["flare",{"_index":568,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{}},"title":{}}],["flare_center_i",{"_index":563,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{}},"title":{}}],["flare_center_x",{"_index":562,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{}},"title":{}}],["flare_roi",{"_index":1206,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomsunflare":{}},"title":{}}],["flat",{"_index":2483,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["flatten",{"_index":2211,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["flex",{"_index":2510,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["flex_flow",{"_index":2511,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["flexibl",{"_index":5,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}},"title":{}}],["flip",{"_index":572,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{}}}],["flip_left_right",{"_index":2915,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["flipsymmetrickeypoint",{"_index":2612,"text":{},"title":{"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{}}}],["float",{"_index":485,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.PerChannel":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["float32",{"_index":801,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["floatprogressmodel",{"_index":2563,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["flower",{"_index":2126,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["fn(*args,",{"_index":2462,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["fname",{"_index":1960,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["fog",{"_index":530,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{}},"title":{}}],["fog_coef",{"_index":526,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{}},"title":{}}],["fog_coef_low",{"_index":1146,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{}},"title":{}}],["fog_coef_upp",{"_index":1147,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{}},"title":{}}],["follow",{"_index":229,"text":{"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"faq/":{},"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{}}],["font_hershey_simplex",{"_index":1587,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["font_scal",{"_index":1939,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["font_scale_aug",{"_index":1945,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["font_scale_orig",{"_index":1944,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["font_thick",{"_index":1938,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["fontfac",{"_index":1594,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{}},"title":{}}],["fontscal",{"_index":1595,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{}},"title":{}}],["fontsiz",{"_index":1654,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{}},"title":{}}],["force_apply=tru",{"_index":1325,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.OneOrOther":{}},"title":{}}],["forg",{"_index":2744,"text":{"getting_started/installation/":{},"getting_started/installation/#install-the-latest-stable-version-from-conda-forge":{}},"title":{"getting_started/installation/#install-the-latest-stable-version-from-conda-forge":{}}}],["fork",{"_index":148,"text":{"contributing/":{},"contributing/#contributing":{}},"title":{}}],["form",{"_index":457,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{}},"title":{}}],["format",{"_index":251,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_keypoints/#define-keypoints":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#mapilary-vistas":{},"faq/":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{}}}],["formatt",{"_index":156,"text":{"contributing/":{},"contributing/#contributing":{}},"title":{}}],["found",{"_index":1340,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta":{}},"title":{}}],["four",{"_index":1428,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{}}],["fourth",{"_index":2772,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{}},"title":{}}],["fraction",{"_index":488,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{}},"title":{}}],["frame",{"_index":1771,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["framework",{"_index":2629,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}},"title":{}}],["freez",{"_index":2244,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["frequent",{"_index":121,"text":{"":{},"#other-topics":{},"faq/":{}},"title":{"faq/":{},"faq/#frequently-asked-questions":{}}}],["from_dict",{"_index":1376,"text":{"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{}}}],["fromarrai",{"_index":1819,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{}},"title":{}}],["fromfloat",{"_index":1251,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{}}}],["front",{"_index":2052,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["full",{"_index":1343,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["func",{"_index":473,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/functional/":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{}},"title":{}}],["func_arg",{"_index":2421,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["func_graph",{"_index":2407,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["func_graph_from_py_func",{"_index":2405,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["func_kwarg",{"_index":2422,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["func_output",{"_index":2420,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["function",{"_index":347,"text":{"api_reference/":{},"api_reference/augmentations/":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/showcase/":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#helper-functions-for-working-with-bounding-boxes-augmentationsbbox_utils":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#functional-transforms-augmentationsfunctional":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/keypoints_utils/#helper-functions-for-working-with-keypoints-augmentationskeypoints_utils":{},"examples/example/#define-the-visualization-function":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/replay/#define-the-visualization-function":{},"examples/serialization/#define-the-visualization-function":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#import-libraries-and-define-helper-functions":{}}}],["functool",{"_index":2076,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["futur",{"_index":277,"text":{"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{}},"title":{}}],["g",{"_index":1121,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{}},"title":{}}],["g1",{"_index":1124,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{}},"title":{}}],["g2",{"_index":1125,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{}},"title":{}}],["g_shift_limit",{"_index":1215,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["gamma_limit",{"_index":1151,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{}},"title":{}}],["garbag",{"_index":2938,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["gather",{"_index":2847,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["gaussian",{"_index":879,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{}},"title":{}}],["gaussianblur",{"_index":1252,"text":{"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{}}}],["gaussiannois",{"_index":2829,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{}},"title":{}}],["gaussnois",{"_index":380,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{}}}],["gc",{"_index":2084,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["gcp",{"_index":2093,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["gener",{"_index":1405,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p3":{}},"title":{}}],["get",{"_index":41,"text":{"":{},"#welcome-to-albumentations-documentation":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{"#getting-started-with-albumentations":{}}}],["gettexts",{"_index":1586,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["git+https://github.com/albument",{"_index":2580,"text":{"experimental/installation/":{},"experimental/installation/#install-the-latest-version-from-the-master-branch-on-github":{},"getting_started/installation/":{},"getting_started/installation/#install-the-latest-version-from-the-master-branch-on-github":{}},"title":{}}],["github",{"_index":139,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/transforms/":{},"api_reference/core/composition/":{},"api_reference/core/serialization/":{},"api_reference/core/transforms_interface/":{},"api_reference/imgaug/transforms/":{},"api_reference/pytorch/transforms/":{},"contributing/":{},"contributing/#contributing":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/installation/":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/installation/":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#it-is-open-source-and-mit-licensed":{}},"title":{"experimental/installation/#install-the-latest-version-from-the-master-branch-on-github":{},"getting_started/installation/#install-the-latest-version-from-the-master-branch-on-github":{}}}],["give",{"_index":902,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["given",{"_index":592,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{}},"title":{}}],["glanc",{"_index":2911,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["glass",{"_index":972,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{}},"title":{}}],["glassblur",{"_index":1253,"text":{"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{}}}],["go",{"_index":2907,"text":{"introduction/why_albumentations/":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["goe",{"_index":2403,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["good",{"_index":1697,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["googl",{"_index":64,"text":{"":{},"#welcome-to-albumentations-documentation":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["graph",{"_index":2402,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["graph_funct",{"_index":2375,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["grayscal",{"_index":385,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["great",{"_index":2795,"text":{"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{}},"title":{}}],["greater",{"_index":956,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{}},"title":{}}],["green",{"_index":256,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"faq/":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{}},"title":{}}],["greyscal",{"_index":743,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{}},"title":{}}],["grid",{"_index":828,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{}},"title":{}}],["grid'",{"_index":1157,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{}},"title":{}}],["grid.html",{"_index":674,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.grid_distortion":{}},"title":{}}],["grid_area",{"_index":2512,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["grid_auto_column",{"_index":2513,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["grid_auto_flow",{"_index":2514,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["grid_auto_row",{"_index":2515,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["grid_column",{"_index":2516,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["grid_distort",{"_index":772,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.grid_distortion":{}}}],["grid_gap",{"_index":2517,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["grid_row",{"_index":2518,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["grid_template_area",{"_index":2519,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["grid_template_column",{"_index":2520,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["grid_template_row",{"_index":2521,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["griddistort",{"_index":375,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{}}}],["griddropout",{"_index":998,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}}}],["ground",{"_index":2005,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["group",{"_index":1690,"text":{"examples/example_kaggle_salt/":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{}},"title":{"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{}}}],["guard",{"_index":2009,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["h",{"_index":657,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["h_start",{"_index":694,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["handl",{"_index":1306,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["happen",{"_index":360,"text":{"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["hard",{"_index":2845,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["hasattr",{"_index":2445,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["haze_list",{"_index":528,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{}},"title":{}}],["hboxmodel",{"_index":2537,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["hboxview",{"_index":2539,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["healthcar",{"_index":2858,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["heavi",{"_index":1167,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{}},"title":{}}],["height",{"_index":309,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"release_notes/":{},"release_notes/#bug-fixes":{},"release_notes/#improvements":{}},"title":{}}],["height//2.",{"_index":1009,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["height=256)",{"_index":2725,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["height=768,",{"_index":1893,"text":{"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["height_til",{"_index":752,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{}},"title":{}}],["help",{"_index":1716,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["help(type)",{"_index":1348,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta.__new__":{}},"title":{}}],["helper",{"_index":133,"text":{"":{},"#api-reference":{},"api_reference/":{},"api_reference/augmentations/":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/keypoints_utils/":{},"examples/showcase/":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{}},"title":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#helper-functions-for-working-with-bounding-boxes-augmentationsbbox_utils":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/keypoints_utils/#helper-functions-for-working-with-keypoints-augmentationskeypoints_utils":{},"examples/showcase/#import-libraries-and-define-helper-functions":{}}}],["here",{"_index":2183,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["here'",{"_index":2198,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#note":{}},"title":{}}],["hflip",{"_index":1917,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["hflip_imag",{"_index":1916,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["high",{"_index":730,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"introduction/why_albumentations/":{}},"title":{"introduction/why_albumentations/#high-performance":{}}}],["higher",{"_index":1562,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"experimental/installation/":{},"experimental/installation/#installation":{},"getting_started/installation/":{},"getting_started/installation/#installation":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["highli",{"_index":2900,"text":{"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{}},"title":{}}],["highlight",{"_index":2784,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["histogram",{"_index":641,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{}},"title":{}}],["histor",{"_index":246,"text":{"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"faq/":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{}},"title":{}}],["hl",{"_index":1050,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{}},"title":{}}],["hole",{"_index":838,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["hole_height",{"_index":1017,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["hole_width",{"_index":1016,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["holes_number_i",{"_index":993,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["holes_number_x",{"_index":992,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["homepage='https://www.tensorflow.org/tutorials/load_data/images',",{"_index":2127,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["hood",{"_index":1553,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{}},"title":{}}],["hook",{"_index":154,"text":{"contributing/":{},"contributing/#contributing":{}},"title":{}}],["horizont",{"_index":574,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{}}],["horizontalflip",{"_index":1254,"text":{"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_keypoints/":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#run-the-example":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{}}}],["horizontalflip(p=0.5)",{"_index":1840,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["horizontalflipsymmetrickeypoint",{"_index":2613,"text":{},"title":{"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{}}}],["host",{"_index":2083,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["htmlmodel",{"_index":2551,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["htmlview",{"_index":2552,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["http://cocodataset.org/#explore?id=386298",{"_index":1605,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#get-an-image-and-annotations-for-it":{}},"title":{}}],["http://papers.nips.cc/paper/4824",{"_index":654,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}},"title":{}}],["http://pythology.blogspot.sg/2014/03/interpol",{"_index":672,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.grid_distortion":{}},"title":{}}],["http://www.brucelindbloom.com/index.html?referenceimages.html",{"_index":1542,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{}},"title":{}}],["http://www.coldvision.io/2017/03/02/advanc",{"_index":725,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{}},"title":{}}],["https://albument",{"_index":2722,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["https://albumentations.ai/docs/getting_started/bounding_boxes_augmentation/",{"_index":1609,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{}},"title":{}}],["https://albumentations.ai/docs/getting_started/keypoints_augmentation/",{"_index":1746,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{}},"title":{}}],["https://arxiv.org/abs/1708.04552",{"_index":840,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{}},"title":{}}],["https://arxiv.org/abs/1903.12261",{"_index":977,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{}},"title":{}}],["https://arxiv.org/abs/2001.04086",{"_index":1020,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["https://deshanadesai.github.io/notes/f",{"_index":919,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}},"title":{}}],["https://docs.scipy.org/doc/numpy/user/basics.types.html",{"_index":945,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{}},"title":{}}],["https://gist.github.com/erniejunior/601cdf56d2b424757de5",{"_index":620,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["https://github.com/albument",{"_index":29,"text":{"":{},"#welcome-to-albumentations-documentation":{},"contributing/":{},"contributing/#contributing":{},"experimental/overview/":{},"experimental/overview/#overview":{}},"title":{}}],["https://github.com/aleju/imgaug/blob/master/imgaug/augmenters/arithmetic.pi",{"_index":843,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{}},"title":{}}],["https://github.com/blink1073/tifffil",{"_index":1552,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{}},"title":{}}],["https://github.com/facebookresearch/detectron/blob/master/detectron/utils/vis.pi",{"_index":1575,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{}},"title":{}}],["https://github.com/hendrycks/robustness/blob/master/imagenet",{"_index":978,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{}},"title":{}}],["https://github.com/ujjwalsaxena/automold",{"_index":531,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{}},"title":{}}],["https://github.com/uoguelph",{"_index":841,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{}},"title":{}}],["https://pixelatedbrian.github.io/2018",{"_index":921,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}},"title":{}}],["https://stackoverflow.com/questions/10364201/imag",{"_index":721,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{}},"title":{}}],["https://stackoverflow.com/questions/2477774/correct",{"_index":722,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{}},"title":{}}],["https://stackoverflow.com/questions/6199636/formula",{"_index":720,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{}},"title":{}}],["https://www.kaggle.com/c/severst",{"_index":1072,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{}},"title":{}}],["hue",{"_index":1028,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{}},"title":{}}],["hue_shift",{"_index":1874,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["hue_shift_limit",{"_index":1023,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/showcase/":{},"examples/showcase/#color-augmentations":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{}},"title":{}}],["huesaturationvalu",{"_index":384,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_keypoints/":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/showcase/":{},"examples/showcase/#color-augmentations":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#run-the-example":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{}}}],["huesaturationvalue(always_apply=false,",{"_index":1897,"text":{"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["huesaturationvalue(hue_shift_limit=20,",{"_index":1827,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["human",{"_index":2748,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{}}],["hydrant",{"_index":2040,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["i.e.",{"_index":1456,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{}},"title":{}}],["iaaadditivegaussiannois",{"_index":1461,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{}}}],["iaaaffin",{"_index":1462,"text":{"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{}}}],["iaacropandpad",{"_index":2807,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{}}],["iaaemboss",{"_index":1463,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{}}}],["iaafliplr",{"_index":2840,"text":{"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{}}],["iaaflipud",{"_index":2841,"text":{"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{}}],["iaaperspect",{"_index":1464,"text":{"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{}}}],["iaapiecewiseaffin",{"_index":1465,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{}}}],["iaasharpen",{"_index":1466,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{}}}],["iaasuperpixel",{"_index":1467,"text":{"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{}}}],["idea",{"_index":1698,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{}},"title":{}}],["identif",{"_index":1650,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#using-albumentations-for-a-semantic-segmentation-task":{}},"title":{}}],["idx",{"_index":1806,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{}},"title":{}}],["iglovikov",{"_index":2633,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}},"title":{}}],["ignor",{"_index":851,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["ignore_channel",{"_index":849,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{}},"title":{}}],["ignore_channels=[0]",{"_index":857,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{}},"title":{}}],["ignore_valu",{"_index":848,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{}},"title":{}}],["ignore_values=[5]",{"_index":855,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{}},"title":{}}],["ilyaovodov",{"_index":352,"text":{"release_notes/":{},"release_notes/#bug-fixes":{},"release_notes/#improvements":{}},"title":{}}],["imag",{"_index":6,"text":{"":{},"#examples":{},"#getting-started-with-albumentations":{},"#introduction-to-image-augmentation":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.multiply":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.preserve_shape":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoint":{},"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoints":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.ImageOnlyTransform":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensorV2":{},"examples/":{},"examples/#list-of-examples":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-the-visualization-function":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes/#load-the-image-from-the-disk":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes/#visuaize-the-original-image-with-bounding-boxes":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_bboxes2/#load-the-image-from-the-disk":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_bboxes2/#visuaize-the-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk":{},"examples/example_kaggle_salt/#using-albumentations-for-a-semantic-segmentation-task":{},"examples/example_kaggle_salt/#verticalflip":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_keypoints/#get-an-image-and-annotations-for-it":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/example_keypoints/#visualize-the-original-image-with-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_multi_target/#load-images-from-the-disk":{},"examples/example_multi_target/#show-original-images":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/#load-the-image-from-the-disk":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/example_weather_transforms/#visualize-the-original-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/replay/#define-the-visualization-function":{},"examples/replay/#load-an-image-from-the-disk":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#define-the-visualization-function":{},"examples/serialization/#load-an-image-from-the-disk":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#examples":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p2":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#examples":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#diverse-set-of-supported-augmentations":{},"introduction/why_albumentations/#high-performance":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{},"release_notes/":{},"release_notes/#bug-fixes":{},"release_notes/#improvements":{}},"title":{"#introduction-to-image-augmentation":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#defining-a-simple-augmentation-pipeline-for-image-augmentation":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes/#load-the-image-from-the-disk":{},"examples/example_bboxes/#visuaize-the-original-image-with-bounding-boxes":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes2/#load-the-image-from-the-disk":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_bboxes2/#visuaize-the-image-with-bounding-boxes":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#get-an-image-and-annotations-for-it":{},"examples/example_keypoints/#visualize-the-original-image-with-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_multi_target/#load-images-from-the-disk":{},"examples/example_multi_target/#show-original-images":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/#load-the-image-from-the-disk":{},"examples/example_weather_transforms/#visualize-the-original-image":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"examples/replay/#load-an-image-from-the-disk":{},"examples/replay/#load-new-images":{},"examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image":{},"examples/serialization/#load-an-image-from-the-disk":{},"examples/showcase/":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#showcase-cool-augmentation-examples-on-diverse-set-of-images-from-various-real-world-tasks":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#view-images-from-the-dataset_1":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}}}],["image'",{"_index":1431,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#remove_invisible":{}},"title":{}}],["image(shape=(none,",{"_index":2129,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["image0",{"_index":1793,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_multi_target/#load-images-from-the-disk":{},"examples/example_multi_target/#show-original-images":{}},"title":{}}],["image1",{"_index":1780,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_multi_target/#load-images-from-the-disk":{},"examples/example_multi_target/#show-original-images":{}},"title":{}}],["image2",{"_index":1311,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/replay/":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"examples/replay/#load-new-images":{}},"title":{}}],["image2_data",{"_index":1883,"text":{"examples/replay/":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{}},"title":{}}],["image3",{"_index":1882,"text":{"examples/replay/":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"examples/replay/#load-new-images":{}},"title":{}}],["image3_data",{"_index":1884,"text":{"examples/replay/":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{}},"title":{}}],["image=<funct",{"_index":1919,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["image_aug",{"_index":1947,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["image_center_crop",{"_index":1682,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{}},"title":{}}],["image_crop",{"_index":1686,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{}},"title":{}}],["image_elast",{"_index":1718,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#elastictransform":{}},"title":{}}],["image_fill_valu",{"_index":1067,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{}},"title":{}}],["image_grid",{"_index":1720,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#griddistortion":{}},"title":{}}],["image_h_flip",{"_index":1705,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{}},"title":{}}],["image_heavi",{"_index":1737,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{}},"title":{}}],["image_light",{"_index":1728,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{}},"title":{}}],["image_medium",{"_index":1733,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#medium-augmentations":{}},"title":{}}],["image_np",{"_index":1818,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{}},"title":{}}],["image_opt",{"_index":1722,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#opticaldistortion":{}},"title":{}}],["image_pad",{"_index":1680,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#original-image":{}},"title":{}}],["image_rot90",{"_index":1710,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{}},"title":{}}],["image_sc",{"_index":1725,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#randomsizedcrop":{}},"title":{}}],["image_transpos",{"_index":1713,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{}},"title":{}}],["image_v_flip",{"_index":1707,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#verticalflip":{}},"title":{}}],["image_width//10.",{"_index":1008,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["imagecodec",{"_index":178,"text":{"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{}}}],["imagecompress",{"_index":379,"text":{"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{}}}],["imagecompressiontyp",{"_index":1036,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression.ImageCompressionType":{}}}],["imagecompressiontype.jpeg",{"_index":1040,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{}},"title":{}}],["imagecompressiontype.webp.",{"_index":1041,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{}},"title":{}}],["imagedatagener",{"_index":2175,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["imageenh",{"_index":2912,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["imagen",{"_index":1782,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{}}],["imagenet",{"_index":655,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["imageonlytransform",{"_index":1397,"text":{},"title":{"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.ImageOnlyTransform":{}}}],["imageri",{"_index":1533,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{}},"title":{}}],["img",{"_index":525,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.multiply":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{},"api_reference/augmentations/transforms/":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{}},"title":{}}],["img.dtyp",{"_index":950,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{}},"title":{}}],["img_siz",{"_index":2152,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{}},"title":{}}],["imgaug",{"_index":132,"text":{"":{},"#api-reference":{},"api_reference/":{},"getting_started/installation/":{},"getting_started/installation/#install-the-latest-stable-version-from-conda-forge":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{}}],["imit",{"_index":557,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{}},"title":{}}],["impact",{"_index":328,"text":{"faq/":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{}},"title":{}}],["implement",{"_index":1367,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{}},"title":{}}],["import",{"_index":183,"text":{"examples/example/":{},"examples/example/#import-the-required-libraries":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#import-the-required-libraries":{},"examples/example_bboxes/":{},"examples/example_bboxes/#import-the-required-libraries":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#import-the-required-libraries":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#import-the-required-libraries":{},"examples/example_keypoints/":{},"examples/example_keypoints/#import-the-required-libraries":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#import-the-required-libraries":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#import-the-required-libraries":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries":{},"examples/replay/":{},"examples/replay/#import-the-required-libraries":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/serialization/#import-the-required-libraries":{},"examples/showcase/":{},"examples/showcase/#import-the-required-libraries":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#what-works":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#step-1-import-the-required-libraries":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{"examples/example/#import-the-required-libraries":{},"examples/example_16_bit_tiff/#import-the-required-libraries":{},"examples/example_bboxes/#import-the-required-libraries":{},"examples/example_bboxes2/#import-the-required-libraries":{},"examples/example_kaggle_salt/#import-the-required-libraries":{},"examples/example_keypoints/#import-the-required-libraries":{},"examples/example_multi_target/#import-the-required-libraries":{},"examples/example_weather_transforms/#import-the-required-libraries":{},"examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries":{},"examples/replay/#import-the-required-libraries":{},"examples/serialization/#import-the-required-libraries":{},"examples/showcase/#import-libraries-and-define-helper-functions":{},"examples/showcase/#import-the-required-libraries":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{},"getting_started/bounding_boxes_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/keypoints_augmentation/#step-1-import-the-required-libraries":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{}}}],["importerror",{"_index":184,"text":{"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}}}],["imposs",{"_index":2846,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["improv",{"_index":73,"text":{"":{},"#introduction-to-image-augmentation":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"release_notes/":{}},"title":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"release_notes/#improvements":{}}}],["imread",{"_index":1518,"text":{"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_bboxes/":{},"examples/example_bboxes/#load-the-image-from-the-disk":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#load-the-image-from-the-disk":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk":{},"examples/example_keypoints/":{},"examples/example_keypoints/#get-an-image-and-annotations-for-it":{},"examples/example_multi_target/":{},"examples/example_multi_target/#load-images-from-the-disk":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#load-the-image-from-the-disk":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/replay/":{},"examples/replay/#load-an-image-from-the-disk":{},"examples/replay/#load-new-images":{},"examples/serialization/":{},"examples/serialization/#load-an-image-from-the-disk":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{}}],["imread_color",{"_index":1988,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["imread_grayscal",{"_index":1661,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{}},"title":{}}],["imread_unchang",{"_index":1548,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{}},"title":{}}],["imshow",{"_index":1516,"text":{"examples/example/":{},"examples/example/#define-the-visualization-function":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_multi_target/":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/replay/":{},"examples/replay/#define-the-visualization-function":{},"examples/serialization/":{},"examples/serialization/#define-the-visualization-function":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["incept",{"_index":2877,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["includ",{"_index":62,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{}},"title":{}}],["include_top",{"_index":2248,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["incompat",{"_index":2474,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{}},"title":{}}],["incorrect",{"_index":2791,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["incorrectli",{"_index":1549,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{}},"title":{}}],["increas",{"_index":357,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["index",{"_index":128,"text":{"":{},"#api-reference":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{"api_reference/":{},"api_reference/augmentations/":{},"api_reference/core/":{},"api_reference/imgaug/":{},"api_reference/pytorch/":{}}}],["indic",{"_index":1060,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["industri",{"_index":11,"text":{"":{},"#welcome-to-albumentations-documentation":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#battle-tested":{}},"title":{}}],["inf",{"_index":799,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{}},"title":{}}],["infer",{"_index":937,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{}},"title":{}}],["infinit",{"_index":2871,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{}},"title":{}}],["info",{"_index":295,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"faq/":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["inform",{"_index":284,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"faq/":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{}},"title":{}}],["initi",{"_index":160,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"contributing/":{},"contributing/#contributing":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["initial_epoch",{"_index":2318,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["inlin",{"_index":1574,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#import-the-required-libraries":{}},"title":{}}],["inp",{"_index":2191,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{}},"title":{}}],["inpain",{"_index":1081,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{}},"title":{}}],["inpaint",{"_index":1080,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{}},"title":{}}],["input",{"_index":200,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p2":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{}}}],["input_shap",{"_index":2205,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["inria",{"_index":1965,"text":{"examples/showcase/":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/showcase/#inria-aerial-image-labeling-dataset":{}}}],["insid",{"_index":1853,"text":{"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p2":{},"getting_started/setting_probabilities/#p3":{}},"title":{}}],["inspect",{"_index":279,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"faq/":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{}},"title":{}}],["inspir",{"_index":1071,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{}},"title":{}}],["inst",{"_index":1905,"text":{"examples/serialization/":{}},"title":{"examples/serialization/#using-yaml-insted-of-json":{}}}],["instal",{"_index":76,"text":{"":{},"#getting-started-with-albumentations":{},"contributing/":{},"contributing/#contributing":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it":{},"experimental/installation/":{},"experimental/installation/#install-the-latest-stable-version-from-pypi":{},"experimental/installation/#install-the-latest-version-from-the-master-branch-on-github":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/installation/":{},"getting_started/installation/#install-the-latest-stable-version-from-conda-forge":{},"getting_started/installation/#install-the-latest-stable-version-from-pypi":{},"getting_started/installation/#install-the-latest-version-from-the-master-branch-on-github":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{"experimental/installation/":{},"experimental/installation/#install-the-latest-stable-version-from-pypi":{},"experimental/installation/#install-the-latest-version-from-the-master-branch-on-github":{},"experimental/installation/#installation":{},"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{},"faq/#installation":{},"getting_started/installation/":{},"getting_started/installation/#install-the-latest-stable-version-from-conda-forge":{},"getting_started/installation/#install-the-latest-stable-version-from-pypi":{},"getting_started/installation/#install-the-latest-version-from-the-master-branch-on-github":{},"getting_started/installation/#installation":{}}}],["instanc",{"_index":50,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{}},"title":{}}],["instance_id",{"_index":1995,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["instance_label",{"_index":1998,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["instanti",{"_index":2181,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{}},"title":{}}],["instead",{"_index":270,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#migrating-from-torchvision-to-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/serialization/":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{}},"title":{}}],["int",{"_index":414,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["intact",{"_index":2924,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["integ",{"_index":1372,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{}},"title":{}}],["integr",{"_index":2177,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{}},"title":{}}],["intens",{"_index":678,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["interfac",{"_index":390,"text":{"api_reference/":{},"api_reference/core/":{},"api_reference/core/transforms_interface/":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_albumentations/#extensibility":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#transforms-interface-coretransforms_interface":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}}}],["intern",{"_index":632,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{}},"title":{}}],["interpol",{"_index":611,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["interview",{"_index":2630,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}},"title":{}}],["introduc",{"_index":1416,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{}},"title":{}}],["introduct",{"_index":34,"text":{"":{},"#welcome-to-albumentations-documentation":{}},"title":{"#introduction-to-image-augmentation":{}}}],["invalid_creator_scop",{"_index":2366,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["invari",{"_index":2425,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["invers",{"_index":472,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{}},"title":{}}],["invert",{"_index":741,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{}},"title":{}}],["invertimg",{"_index":1255,"text":{"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{}}}],["invis",{"_index":1323,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#remove_invisible":{}},"title":{}}],["ipy_model_1a0e5a91eecb4afd9d0f7c7d711451f6",{"_index":2554,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["ipy_model_3e99d9d6a9cc498a8f6721e1fa056f71",{"_index":2558,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["ipy_model_b9da9110e05a4770931ab8dbb85b6cc4",{"_index":2569,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["ipy_model_d7440ea51f4d48f4ba9f796f17c50694",{"_index":2544,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["ipy_model_dee763d01b544bc085bf150a3ee6df39",{"_index":2543,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["ipy_model_e0e2099e64e34a938ad70dd66da111e2",{"_index":2568,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["ipy_model_eb1a387f74dd47cfad2c6b90deb572f9",{"_index":2546,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["ipython",{"_index":2296,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["iso_nois",{"_index":773,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{}}}],["isonois",{"_index":1256,"text":{"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{}}}],["issu",{"_index":144,"text":{"contributing/":{},"contributing/#contributing":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["it'",{"_index":1077,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{}},"title":{}}],["item",{"_index":2700,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{}},"title":{}}],["iter",{"_index":971,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{}},"title":{}}],["itself",{"_index":2432,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["jan",{"_index":2143,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["januari",{"_index":2642,"text":{"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{}},"title":{}}],["john",{"_index":2636,"text":{"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{}},"title":{}}],["join",{"_index":1300,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{}},"title":{}}],["joint",{"_index":2753,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{}}],["jpeg",{"_index":1037,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{}},"title":{}}],["jpegcompress",{"_index":1257,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#run-the-example":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{}}}],["js",{"_index":1500,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["json",{"_index":1359,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#using-yaml-insted-of-json":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#using-yaml-insted-of-json":{}}}],["json.parse(mimeelement.innerhtml);",{"_index":1496,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["junction",{"_index":2041,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["jupyt",{"_index":56,"text":{"":{},"#welcome-to-albumentations-documentation":{},"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["justify_cont",{"_index":2522,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["justify_item",{"_index":2523,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["justin",{"_index":1545,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{}},"title":{}}],["k",{"_index":712,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["kaggl",{"_index":2762,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{}}],["keep",{"_index":95,"text":{"":{},"#examples":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/example_bboxes2/":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{}}}],["keep_siz",{"_index":1427,"text":{"api_reference/imgaug/transforms/":{}},"title":{}}],["kei",{"_index":1309,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"introduction/why_albumentations/":{}},"title":{"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{}}}],["kera",{"_index":2201,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}},"title":{}}],["kernel",{"_index":798,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{}},"title":{}}],["keypoint",{"_index":53,"text":{"":{},"#examples":{},"#getting-started-with-albumentations":{},"#welcome-to-albumentations-documentation":{},"api_reference/":{},"api_reference/augmentations/":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoint":{},"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoints":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_keypoints/#define-keypoints":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/example_keypoints/#visualize-the-original-image-with-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#examples":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/keypoints_utils/#helper-functions-for-working-with-keypoints-augmentationskeypoints_utils":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#define-keypoints":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/example_keypoints/#visualize-the-original-image-with-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}}}],["keypoint=<funct",{"_index":1923,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["keypoint_center_crop",{"_index":774,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{}}}],["keypoint_color",{"_index":1740,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{}},"title":{}}],["keypoint_flip",{"_index":775,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{}}}],["keypoint_hflip",{"_index":776,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{}}}],["keypoint_param",{"_index":1305,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{}},"title":{}}],["keypoint_params=none,",{"_index":1900,"text":{"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["keypoint_random_crop",{"_index":777,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{}}}],["keypoint_rot",{"_index":779,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{}}}],["keypoint_rot90",{"_index":778,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{}}}],["keypoint_scal",{"_index":780,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{}}}],["keypoint_transpos",{"_index":781,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_transpose":{}}}],["keypoint_vflip",{"_index":782,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{}}}],["keypointparam",{"_index":363,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{}}}],["keypointparams.angle_in_degrees)",{"_index":1322,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{}},"title":{}}],["keypoints1",{"_index":1785,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{}}],["keypoints2",{"_index":1786,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{}}],["keypoints_class",{"_index":2833,"text":{"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{}},"title":{}}],["keypointsk",{"_index":1787,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{}}],["khvedchenya",{"_index":2628,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}},"title":{}}],["knee",{"_index":2757,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{}},"title":{}}],["know",{"_index":2359,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["kp",{"_index":790,"text":{"api_reference/augmentations/keypoints_utils/":{}},"title":{}}],["krizhevsky'",{"_index":913,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}},"title":{}}],["kwarg",{"_index":681,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/api_reference/augmentations/transforms/":{}},"title":{}}],["kwargs=kwargs)",{"_index":2456,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["kwd",{"_index":2341,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["kyepoint",{"_index":2605,"text":{"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["label",{"_index":224,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}}}],["label2rgb",{"_index":1935,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#import-the-required-libraries":{}},"title":{}}],["label_field",{"_index":382,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#mapilary-vistas":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"getting_started/keypoints_augmentation/#label_fields":{}}}],["label_id",{"_index":1981,"text":{"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{}},"title":{}}],["label_imag",{"_index":1976,"text":{"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{}},"title":{}}],["label_nam",{"_index":1982,"text":{"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{}},"title":{}}],["labor",{"_index":2851,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["lambda",{"_index":1258,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}}}],["lambda(name='hflip_image',",{"_index":1918,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["lambda_transform",{"_index":1352,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["lane",{"_index":726,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["larg",{"_index":905,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["larger",{"_index":1202,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{}},"title":{}}],["last",{"_index":2295,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["later",{"_index":1341,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{}},"title":{}}],["latest",{"_index":2573,"text":{"experimental/installation/":{},"getting_started/installation/":{}},"title":{"experimental/installation/#install-the-latest-stable-version-from-pypi":{},"experimental/installation/#install-the-latest-version-from-the-master-branch-on-github":{},"getting_started/installation/#install-the-latest-stable-version-from-conda-forge":{},"getting_started/installation/#install-the-latest-stable-version-from-pypi":{},"getting_started/installation/#install-the-latest-version-from-the-master-branch-on-github":{}}}],["layer",{"_index":1673,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["layer_1",{"_index":2278,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["layer_2",{"_index":2279,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["layer_3",{"_index":2280,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["layer_nam",{"_index":2472,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["layout",{"_index":2545,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["layoutmodel",{"_index":2496,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["layoutview",{"_index":2506,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["lead",{"_index":1203,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{}},"title":{}}],["learn",{"_index":14,"text":{"":{},"#welcome-to-albumentations-documentation":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#battle-tested":{}},"title":{}}],["leav",{"_index":2836,"text":{"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{}},"title":{}}],["left",{"_index":454,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["left_elbow",{"_index":2786,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["left_wrist",{"_index":2764,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["legaci",{"_index":263,"text":{"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{}},"title":{}}],["legal",{"_index":2856,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["len",{"_index":1804,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["length",{"_index":2606,"text":{"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{}}],["less",{"_index":298,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoint":{},"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoints":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["lesser",{"_index":422,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bboxes":{}},"title":{}}],["let'",{"_index":303,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/example_kaggle_salt/#lets-add-non-rigid-transformations-and-randomsizedcrop":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{}}}],["level",{"_index":302,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{},"examples/example_keypoints/":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"getting_started/transforms_and_targets/#pixel-level-transforms":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}}}],["li",{"_index":2686,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{}},"title":{}}],["librari",{"_index":8,"text":{"":{},"#introduction-to-image-augmentation":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"contributing/":{},"contributing/#contributing":{},"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"experimental/overview/":{},"experimental/overview/#overview":{},"experimental/overview/#why-a-separate-library":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#battle-tested":{},"introduction/why_albumentations/#high-performance":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{"examples/example/#import-the-required-libraries":{},"examples/example_16_bit_tiff/#import-the-required-libraries":{},"examples/example_bboxes/#import-the-required-libraries":{},"examples/example_bboxes2/#import-the-required-libraries":{},"examples/example_kaggle_salt/#import-the-required-libraries":{},"examples/example_keypoints/#import-the-required-libraries":{},"examples/example_multi_target/#import-the-required-libraries":{},"examples/example_weather_transforms/#import-the-required-libraries":{},"examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries":{},"examples/replay/#import-the-required-libraries":{},"examples/serialization/#import-the-required-libraries":{},"examples/showcase/#import-libraries-and-define-helper-functions":{},"examples/showcase/#import-the-required-libraries":{},"experimental/overview/#why-a-separate-library":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{},"getting_started/bounding_boxes_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/keypoints_augmentation/#step-1-import-the-required-libraries":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}}}],["libxrend",{"_index":235,"text":{"faq/":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}},"title":{}}],["libxrender.so.1:",{"_index":185,"text":{"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}}}],["libxrender1",{"_index":241,"text":{"faq/":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}},"title":{}}],["licens",{"_index":24,"text":{"":{},"#welcome-to-albumentations-documentation":{},"introduction/why_albumentations/":{}},"title":{"introduction/why_albumentations/#it-is-open-source-and-mit-licensed":{}}}],["lie",{"_index":353,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["light",{"_index":1442,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["limit",{"_index":824,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["lindbloom",{"_index":1546,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{}},"title":{}}],["line",{"_index":1165,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{}},"title":{}}],["line_aa",{"_index":1597,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["linear",{"_index":1086,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{}},"title":{}}],["linetyp",{"_index":1596,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["link",{"_index":63,"text":{"":{},"#welcome-to-albumentations-documentation":{}},"title":{}}],["linter",{"_index":158,"text":{"contributing/":{},"contributing/#contributing":{}},"title":{}}],["lisf",{"_index":839,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{}},"title":{}}],["lisft",{"_index":1117,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{}},"title":{}}],["list",{"_index":83,"text":{"":{},"#getting-started-with-albumentations":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.PerChannel":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"examples/":{},"examples/example_bboxes/":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_keypoints/":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"faq/":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{"examples/":{},"examples/#list-of-examples":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{}}}],["list[tuple]",{"_index":467,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{}},"title":{}}],["listdir",{"_index":1962,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["littl",{"_index":2868,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{}},"title":{}}],["load",{"_index":105,"text":{"":{},"#examples":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/replay/":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{"api_reference/core/serialization/#albumentations.core.serialization.load":{},"examples/example_bboxes/#load-the-image-from-the-disk":{},"examples/example_bboxes2/#load-the-image-from-the-disk":{},"examples/example_multi_target/#load-images-from-the-disk":{},"examples/example_weather_transforms/#load-the-image-from-the-disk":{},"examples/replay/#load-an-image-from-the-disk":{},"examples/replay/#load-new-images":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/serialization/#load-an-image-from-the-disk":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{}}}],["loaded_transform",{"_index":1902,"text":{"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["loc",{"_index":1402,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{}},"title":{}}],["local",{"_index":151,"text":{"contributing/":{},"contributing/#contributing":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["locat",{"_index":2770,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["logic",{"_index":266,"text":{"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{}},"title":{}}],["longer",{"_index":2702,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{}},"title":{}}],["longestmaxs",{"_index":1259,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{}}}],["longrightarrow",{"_index":1676,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{}},"title":{}}],["longtensor",{"_index":1474,"text":{"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{}},"title":{}}],["look",{"_index":286,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["lose",{"_index":509,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{}},"title":{}}],["loss",{"_index":1189,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["lost",{"_index":1642,"text":{"examples/example_bboxes2/":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{}},"title":{}}],["lot",{"_index":1852,"text":{"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["low",{"_index":1388,"text":{"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{}},"title":{}}],["lower",{"_index":846,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{}},"title":{}}],["lower_bond",{"_index":1199,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{}},"title":{}}],["luca",{"_index":2639,"text":{"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{}},"title":{}}],["luminac",{"_index":1054,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{}},"title":{}}],["m",{"_index":232,"text":{"faq/":{},"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{}},"title":{}}],["machin",{"_index":16,"text":{"":{},"#welcome-to-albumentations-documentation":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#battle-tested":{}},"title":{}}],["magnitud",{"_index":2737,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["mailbox",{"_index":2042,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["main",{"_index":593,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{}},"title":{}}],["make",{"_index":167,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"contributing/":{},"contributing/#contributing":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["manag",{"_index":245,"text":{"faq/":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}},"title":{}}],["manager@*/dist/emb",{"_index":1489,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["manhol",{"_index":2043,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["mani",{"_index":1736,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["manual",{"_index":1915,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["map",{"_index":900,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{}},"title":{}}],["mapilari",{"_index":1984,"text":{"examples/showcase/":{}},"title":{"examples/showcase/#mapilary-vistas":{}}}],["march",{"_index":2646,"text":{"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{}},"title":{}}],["margin",{"_index":2524,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["mark",{"_index":2025,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["mask",{"_index":77,"text":{"":{},"#examples":{},"#getting-started-with-albumentations":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensorV2":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk":{},"examples/example_kaggle_salt/#verticalflip":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/why_albumentations/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{}}}],["mask1",{"_index":1788,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{}}],["mask2",{"_index":1789,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{}}],["mask=<funct",{"_index":1921,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["mask_1",{"_index":2797,"text":{"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{}}],["mask_2",{"_index":2799,"text":{"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{}}],["mask_3",{"_index":2801,"text":{"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{}}],["mask_aug",{"_index":1953,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["mask_center_crop",{"_index":1683,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{}},"title":{}}],["mask_crop",{"_index":1687,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{}},"title":{}}],["mask_elast",{"_index":1719,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#elastictransform":{}},"title":{}}],["mask_fill_valu",{"_index":997,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{}},"title":{}}],["mask_grid",{"_index":1721,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#griddistortion":{}},"title":{}}],["mask_h_flip",{"_index":1706,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{}},"title":{}}],["mask_heavi",{"_index":1738,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{}},"title":{}}],["mask_light",{"_index":1729,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{}},"title":{}}],["mask_medium",{"_index":1734,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#medium-augmentations":{}},"title":{}}],["mask_opt",{"_index":1723,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#opticaldistortion":{}},"title":{}}],["mask_pad",{"_index":1681,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#original-image":{}},"title":{}}],["mask_param",{"_index":907,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{}},"title":{}}],["mask_rot90",{"_index":1711,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{}},"title":{}}],["mask_scal",{"_index":1726,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#randomsizedcrop":{}},"title":{}}],["mask_transpos",{"_index":1714,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{}},"title":{}}],["mask_v_flip",{"_index":1708,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#verticalflip":{}},"title":{}}],["mask_valu",{"_index":878,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["maskdropout",{"_index":1260,"text":{"examples/showcase/":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{}}}],["maskl",{"_index":1790,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{}}],["massaron",{"_index":2640,"text":{"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{}},"title":{}}],["master",{"_index":2578,"text":{"experimental/installation/":{},"getting_started/installation/":{}},"title":{"experimental/installation/#install-the-latest-version-from-the-master-branch-on-github":{},"getting_started/installation/#install-the-latest-version-from-the-master-branch-on-github":{}}}],["matplotlib",{"_index":1509,"text":{"examples/example/":{},"examples/example/#import-the-required-libraries":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_16_bit_tiff/#import-the-required-libraries":{},"examples/example_bboxes/":{},"examples/example_bboxes/#import-the-required-libraries":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#import-the-required-libraries":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#import-the-required-libraries":{},"examples/example_keypoints/":{},"examples/example_keypoints/#import-the-required-libraries":{},"examples/example_multi_target/":{},"examples/example_multi_target/#import-the-required-libraries":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#import-the-required-libraries":{},"examples/showcase/":{},"examples/showcase/#import-the-required-libraries":{}},"title":{}}],["matplotlib.pyplot",{"_index":1857,"text":{"examples/replay/":{},"examples/replay/#import-the-required-libraries":{},"examples/serialization/":{},"examples/serialization/#import-the-required-libraries":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["matur",{"_index":2592,"text":{"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{}},"title":{}}],["max",{"_index":973,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["max_delta",{"_index":970,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{}},"title":{}}],["max_h_siz",{"_index":861,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{}},"title":{}}],["max_height",{"_index":831,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["max_hol",{"_index":830,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{}},"title":{}}],["max_object",{"_index":1066,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{}},"title":{}}],["max_part_shift",{"_index":1140,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{}},"title":{}}],["max_pixel_valu",{"_index":1108,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{}},"title":{}}],["max_queue_s",{"_index":2323,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["max_siz",{"_index":1062,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{}},"title":{}}],["max_valu",{"_index":933,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["max_w_siz",{"_index":862,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{}},"title":{}}],["max_width",{"_index":832,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["maximum",{"_index":423,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bboxes":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{}},"title":{}}],["maxpool",{"_index":1672,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{}},"title":{}}],["maxpooling2d",{"_index":2209,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["mayb",{"_index":644,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{}},"title":{}}],["mean",{"_index":964,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{}}],["measur",{"_index":1048,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{}},"title":{}}],["median",{"_index":1084,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{}},"title":{}}],["medianblur",{"_index":1261,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{}}}],["medic",{"_index":1695,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["medium",{"_index":1730,"text":{"examples/example_kaggle_salt/":{},"examples/showcase/":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#mapilary-vistas":{}},"title":{"examples/example_kaggle_salt/#medium-augmentations":{}}}],["mention",{"_index":119,"text":{"":{},"#external-resources":{},"external_resources/books/":{}},"title":{"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{}}}],["messag",{"_index":174,"text":{"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{}}}],["metaclass",{"_index":1337,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta":{}},"title":{}}],["method",{"_index":71,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["metric",{"_index":2217,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["mib",{"_index":2101,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["michael",{"_index":2644,"text":{"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{}},"title":{}}],["migrat",{"_index":100,"text":{"":{},"#examples":{},"examples/":{},"examples/#list-of-examples":{},"examples/migrating_from_torchvision_to_albumentations/":{}},"title":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#migrating-from-torchvision-to-albumentations":{}}}],["mimeel",{"_index":1481,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["min",{"_index":1078,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["min_area",{"_index":477,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#mapilary-vistas":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{}}}],["min_height",{"_index":834,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#original-image":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["min_hol",{"_index":833,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{}},"title":{}}],["min_max_height",{"_index":1193,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_keypoints/":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{}},"title":{}}],["min_vis",{"_index":479,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#mapilary-vistas":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{}}}],["min_visibilti",{"_index":1635,"text":{"examples/example_bboxes/":{}},"title":{"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{}}}],["min_visiibl",{"_index":2684,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{}},"title":{}}],["min_width",{"_index":835,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#original-image":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["min_width=512)",{"_index":1832,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["miniconda",{"_index":2746,"text":{"getting_started/installation/":{},"getting_started/installation/#install-the-latest-stable-version-from-conda-forge":{}},"title":{}}],["minim",{"_index":496,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["minimum",{"_index":421,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{}},"title":{}}],["mirror",{"_index":220,"text":{"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{}}}],["mirrored_imag",{"_index":2914,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["mislead",{"_index":2925,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["miss",{"_index":2382,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["mit",{"_index":26,"text":{"":{},"#welcome-to-albumentations-documentation":{},"introduction/why_albumentations/":{}},"title":{"introduction/why_albumentations/#it-is-open-source-and-mit-licensed":{}}}],["mlrg/cutout/blob/master/util/cutout.pi",{"_index":842,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{}},"title":{}}],["mode",{"_index":162,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/imgaug/transforms/":{},"contributing/":{},"contributing/#contributing":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{},"faq/":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{}},"title":{}}],["model",{"_index":330,"text":{"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset_1":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"faq/":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#rigorous-testing":{}},"title":{}}],["model_id",{"_index":2111,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["model_modul",{"_index":2493,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["model_nam",{"_index":2495,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["modif",{"_index":618,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["modifi",{"_index":2728,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["modul",{"_index":2298,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["monei",{"_index":2862,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["month",{"_index":2142,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["more",{"_index":273,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"examples/example_bboxes2/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"faq/":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#diverse-set-of-supported-augmentations":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{}}}],["motion",{"_index":1088,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{}},"title":{}}],["motionblur",{"_index":1262,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{}}}],["motorcycl",{"_index":2059,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["motorcyclist",{"_index":2023,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["mount",{"_index":2063,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["mountain",{"_index":2026,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["mouth",{"_index":2760,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{}}],["move",{"_index":1413,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{}},"title":{}}],["much",{"_index":506,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"introduction/image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}}}],["mueller",{"_index":2638,"text":{"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{}},"title":{}}],["multipl",{"_index":81,"text":{"":{},"#examples":{},"#getting-started-with-albumentations":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/simultaneous_augmentation/":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{}}}],["multipli",{"_index":471,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.multiply":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{}},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.multiply":{}}}],["multiplicativenois",{"_index":1263,"text":{"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{}}}],["multiplier[1])",{"_index":1094,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{}},"title":{}}],["mymodel",{"_index":2276,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["n",{"_index":1671,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{}},"title":{}}],["n=5",{"_index":1675,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{}},"title":{}}],["n_segment",{"_index":1448,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{}},"title":{}}],["name",{"_index":206,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.multiply":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.PerChannel":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{}}}],["name='tf_flowers',",{"_index":2123,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["nb_col",{"_index":1436,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{}},"title":{}}],["nb_row",{"_index":1435,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{}},"title":{}}],["nearest",{"_index":1954,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["necessari",{"_index":1570,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["need",{"_index":74,"text":{"":{},"#examples":{},"#introduction-to-image-augmentation":{},"examples/":{},"examples/#list-of-examples":{},"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"faq/":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"examples/example_bboxes2/":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}}}],["neighbourhood",{"_index":1414,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{}},"title":{}}],["network",{"_index":39,"text":{"":{},"#introduction-to-image-augmentation":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}}}],["networks.pdf",{"_index":656,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}},"title":{}}],["neural",{"_index":38,"text":{"":{},"#introduction-to-image-augmentation":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}}}],["never",{"_index":2816,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{}},"title":{}}],["new",{"_index":31,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta.__new__":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"examples/replay/":{},"examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#extensibility":{}},"title":{"examples/replay/#load-new-images":{}}}],["next",{"_index":1637,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{}},"title":{}}],["nois",{"_index":683,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{}},"title":{}}],["non",{"_index":92,"text":{"":{},"#examples":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"faq/":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{}},"title":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"examples/example_kaggle_salt/#lets-add-non-rigid-transformations-and-randomsizedcrop":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{}}}],["none",{"_index":612,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.PerChannel":{},"api_reference/core/serialization/":{},"api_reference/core/transforms_interface/":{},"api_reference/imgaug/transforms/":{},"api_reference/pytorch/transforms/":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["noop",{"_index":1398,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.NoOp":{}}}],["normal",{"_index":451,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#process-data":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{}}}],["normalize(mean=[0.485,",{"_index":1846,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["normalize_bbox",{"_index":521,"text":{},"title":{"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{}}}],["nose",{"_index":2759,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{}}],["note",{"_index":126,"text":{"":{},"#other-topics":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/tensorflow-example/":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"release_notes/":{}},"title":{"examples/tensorflow-example/#note":{},"release_notes/":{},"release_notes/#release-notes":{}}}],["notebook",{"_index":57,"text":{"":{},"#welcome-to-albumentations-documentation":{},"examples/example_keypoints/":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#weather-augmentations-in-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#migrating-from-torchvision-to-albumentations":{}},"title":{}}],["noth",{"_index":1386,"text":{"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.NoOp":{}},"title":{}}],["notic",{"_index":691,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{}},"title":{}}],["notimplementederror",{"_index":1369,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{}},"title":{}}],["notion",{"_index":1693,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{}},"title":{}}],["now",{"_index":274,"text":{"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"release_notes/":{},"release_notes/#bug-fixes":{},"release_notes/#improvements":{}},"title":{}}],["np",{"_index":1798,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/serialization/":{},"examples/serialization/#import-the-required-libraries":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#import-the-required-libraries":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{}},"title":{}}],["np.float32",{"_index":1556,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["np.ndarrai",{"_index":747,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{}},"title":{}}],["np.ndarray,",{"_index":908,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{}},"title":{}}],["np.rot90)",{"_index":583,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{}},"title":{}}],["np.rot90.",{"_index":586,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{}},"title":{}}],["np.uint16",{"_index":1559,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["np.uint32",{"_index":1560,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["np.uint8",{"_index":952,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["nuclei",{"_index":1983,"text":{"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{}},"title":{}}],["null",{"_index":2502,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["num_bit",{"_index":1119,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{}},"title":{}}],["num_class",{"_index":1470,"text":{"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{}},"title":{}}],["num_classes=5),",{"_index":2133,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["num_flare_circles_low",{"_index":1209,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{}},"title":{}}],["num_flare_circles_upp",{"_index":1210,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{}},"title":{}}],["num_hol",{"_index":860,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{}},"title":{}}],["num_parallel_cal",{"_index":2157,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{}},"title":{}}],["num_shadows_low",{"_index":1181,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{}},"title":{}}],["num_shadows_upp",{"_index":1182,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{}},"title":{}}],["num_step",{"_index":668,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{}},"title":{}}],["number",{"_index":368,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["numpi",{"_index":194,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/serialization/":{},"examples/serialization/#import-the-required-libraries":{},"examples/showcase/":{},"examples/showcase/#import-the-required-libraries":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{}},"title":{"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{}}}],["numpy.ndarrai",{"_index":533,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.multiply":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{}},"title":{}}],["numpy_funct",{"_index":2190,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{}},"title":{}}],["obj",{"_index":1362,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{}},"title":{}}],["obj1_mask",{"_index":1381,"text":{"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{}},"title":{}}],["obj2_mask",{"_index":1382,"text":{"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{}},"title":{}}],["object",{"_index":51,"text":{"":{},"#examples":{},"#getting-started-with-albumentations":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta.__new__":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_bboxes/":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/example_bboxes/":{},"examples/example_bboxes/#using-albumentations-to-augment-bounding-boxes-for-object-detection-tasks":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation-for-object-detection":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}}}],["object_fit",{"_index":2525,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["object_posit",{"_index":2526,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["obtain",{"_index":2842,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["odd",{"_index":948,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{}},"title":{}}],["offset",{"_index":1012,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{}},"title":{}}],["old",{"_index":340,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"release_notes/":{},"release_notes/#bug-fixes":{},"release_notes/#improvements":{}},"title":{}}],["old_left_up_corner_col",{"_index":751,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{}},"title":{}}],["old_left_up_corner_row",{"_index":750,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{}},"title":{}}],["older",{"_index":1494,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["on",{"_index":304,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.OneOrOther":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["on_not_implemented_error",{"_index":1364,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{}},"title":{}}],["on_train_batch_begin",{"_index":2329,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["onc",{"_index":1097,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["oneof",{"_index":1332,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_keypoints/":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#using-yaml-insted-of-json":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{"api_reference/core/composition/#albumentations.core.composition.OneOf":{}}}],["oneoroth",{"_index":1333,"text":{},"title":{"api_reference/core/composition/#albumentations.core.composition.OneOrOther":{}}}],["op_return_valu",{"_index":2411,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["open",{"_index":18,"text":{"":{},"#welcome-to-albumentations-documentation":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#battle-tested":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{},"introduction/why_albumentations/#it-is-open-source-and-mit-licensed":{}}}],["opencv",{"_index":248,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"faq/":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{}}],["oper",{"_index":242,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"faq/":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["optical_distort",{"_index":783,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{}}}],["opticaldistort",{"_index":1264,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_kaggle_salt/#opticaldistortion":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_kaggle_salt/#opticaldistortion":{}}}],["optim",{"_index":1888,"text":{"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{}},"title":{}}],["optin",{"_index":1059,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{}},"title":{}}],["option",{"_index":642,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{}},"title":{}}],["order",{"_index":254,"text":{"api_reference/imgaug/transforms/":{},"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"faq/":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{}},"title":{}}],["org",{"_index":1593,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{}},"title":{}}],["orient",{"_index":1320,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["origin",{"_index":272,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{"examples/example_bboxes/#visuaize-the-original-image-with-bounding-boxes":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_keypoints/#visualize-the-original-image-with-keypoints":{},"examples/example_multi_target/#show-original-images":{},"examples/example_weather_transforms/#visualize-the-original-image":{}}}],["original_func",{"_index":2415,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["original_height",{"_index":1664,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomsizedcrop":{}},"title":{}}],["original_imag",{"_index":1652,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_kaggle_salt/#verticalflip":{}},"title":{}}],["original_mask",{"_index":1653,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_kaggle_salt/#verticalflip":{}},"title":{}}],["original_shap",{"_index":491,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{}},"title":{}}],["original_width",{"_index":1665,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomsizedcrop":{}},"title":{}}],["os",{"_index":244,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#import-the-required-libraries":{},"faq/":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}},"title":{}}],["ot",{"_index":465,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{}},"title":{}}],["otherwis",{"_index":805,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["out",{"_index":556,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset_1":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["outofrangeerror",{"_index":2334,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["output",{"_index":429,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["outsid",{"_index":354,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["over",{"_index":1908,"text":{"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{}},"title":{}}],["overfit",{"_index":2843,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["overflow",{"_index":2527,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["overflow_i",{"_index":2529,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["overflow_x",{"_index":2528,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["overlai",{"_index":1421,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{}},"title":{}}],["override_flat_arg_shap",{"_index":2390,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["overview",{"_index":2582,"text":{"experimental/overview/":{}},"title":{"experimental/overview/":{},"experimental/overview/#overview":{}}}],["p",{"_index":207,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.PerChannel":{},"api_reference/core/transforms_interface/":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"api_reference/pytorch/transforms/":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_kaggle_salt/#verticalflip":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#frequently-asked-questions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{}}}],["p1",{"_index":2808,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{"getting_started/setting_probabilities/#p1":{}}}],["p2",{"_index":2810,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p2":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{"getting_started/setting_probabilities/#p2":{}}}],["p3",{"_index":2812,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{"getting_started/setting_probabilities/#p3":{}}}],["p=0.5",{"_index":2727,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["p=0.5)",{"_index":1830,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["p=0.5),",{"_index":1898,"text":{"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["p=0.5,",{"_index":1896,"text":{"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["p=0.9",{"_index":315,"text":{"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{}},"title":{}}],["p=1.0",{"_index":214,"text":{"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#frequently-asked-questions":{}},"title":{}}],["p=1.0,",{"_index":1892,"text":{"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["p=1.0?",{"_index":333,"text":{},"title":{"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{}}}],["p_replac",{"_index":1447,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{}},"title":{}}],["packag",{"_index":236,"text":{"faq/":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}},"title":{}}],["packages/tensorflow/python/distribute/distribute_lib.py:2290",{"_index":2457,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["packages/tensorflow/python/distribute/distribute_lib.py:2649",{"_index":2460,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["packages/tensorflow/python/distribute/distribute_lib.py:951",{"_index":2453,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["packages/tensorflow/python/eager/def_function.pi",{"_index":2339,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["packages/tensorflow/python/eager/function.pi",{"_index":2369,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["packages/tensorflow/python/framework/func_graph.pi",{"_index":2404,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["packages/tensorflow/python/keras/engine/base_layer.py:886",{"_index":2468,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["packages/tensorflow/python/keras/engine/input_spec.py:168",{"_index":2470,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["packages/tensorflow/python/keras/engine/training.pi",{"_index":2300,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["packages/tensorflow/python/keras/engine/training.py:531",{"_index":2463,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["packages/tensorflow/python/keras/engine/training.py:571",{"_index":2451,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["pad",{"_index":894,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#original-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["padifneed",{"_index":358,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#original-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{}}}],["padifneeded(min_height=512,",{"_index":1831,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["page",{"_index":941,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{}},"title":{}}],["pai",{"_index":2863,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["pair",{"_index":2602,"text":{"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["palett",{"_index":2929,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["paper",{"_index":664,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["param",{"_index":702,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["paramet",{"_index":98,"text":{"":{},"#examples":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.multiply":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.PerChannel":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_multi_target/":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{}}}],["parent",{"_index":320,"text":{"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{}},"title":{}}],["park",{"_index":2016,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["parrot",{"_index":2711,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{}},"title":{}}],["part",{"_index":356,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"examples/example_bboxes/":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["partial",{"_index":1450,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["pascal",{"_index":2658,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{}},"title":{}}],["pascal_voc",{"_index":431,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{}},"title":{"getting_started/bounding_boxes_augmentation/#pascal_voc":{}}}],["pass",{"_index":292,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.PerChannel":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/example/":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#view-images-from-the-dataset_1":{},"faq/":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{}}}],["patch",{"_index":2726,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["path",{"_index":1959,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["paul",{"_index":2637,"text":{"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{}},"title":{}}],["pca",{"_index":653,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}},"title":{}}],["pedestrian",{"_index":2017,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["per",{"_index":1058,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.PerChannel":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{}}],["per_channel",{"_index":1091,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/imgaug/transforms/":{}},"title":{}}],["perchannel",{"_index":1334,"text":{},"title":{"api_reference/core/composition/#albumentations.core.composition.PerChannel":{}}}],["perform",{"_index":40,"text":{"":{},"#introduction-to-image-augmentation":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#migrating-from-torchvision-to-albumentations":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/#high-performance":{}}}],["person",{"_index":2021,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{}},"title":{}}],["perspect",{"_index":1429,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{}},"title":{}}],["perturb/scal",{"_index":660,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}},"title":{}}],["phone",{"_index":2044,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["photo",{"_index":2805,"text":{"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["pick",{"_index":1219,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{}},"title":{}}],["piec",{"_index":2870,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{}},"title":{}}],["pieplin",{"_index":1628,"text":{"examples/example_bboxes/":{}},"title":{"examples/example_bboxes/#define-a-complex-augmentation-piepline":{}}}],["pil",{"_index":645,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{}}}],["pillow",{"_index":646,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{"getting_started/image_augmentation/#pillow":{}}}],["pillow_imag",{"_index":2731,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{}},"title":{}}],["pincushion",{"_index":717,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{}},"title":{}}],["pip",{"_index":159,"text":{"contributing/":{},"contributing/#contributing":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it":{},"experimental/installation/":{},"experimental/installation/#install-the-latest-stable-version-from-pypi":{},"experimental/installation/#install-the-latest-version-from-the-master-branch-on-github":{},"faq/":{},"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{},"getting_started/installation/":{},"getting_started/installation/#install-the-latest-stable-version-from-pypi":{},"getting_started/installation/#install-the-latest-version-from-the-master-branch-on-github":{}},"title":{}}],["pipelin",{"_index":88,"text":{"":{},"#examples":{},"#getting-started-with-albumentations":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"examples/":{},"examples/#list-of-examples":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#defining-a-simple-augmentation-pipeline-for-image-augmentation":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#extensibility":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#defining-a-simple-augmentation-pipeline-for-image-augmentation":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"examples/tensorflow-example/#an-example-pipeline-using-tfimage":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}}}],["pitfal",{"_index":2923,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["pixel",{"_index":407,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_keypoints/":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"getting_started/transforms_and_targets/#pixel-level-transforms":{}}}],["pixelwis",{"_index":1098,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{}},"title":{}}],["place",{"_index":1412,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{}}],["placehold",{"_index":2555,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{}}],["plai",{"_index":2819,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{}},"title":{}}],["plain",{"_index":2015,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["plane",{"_index":1701,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{}},"title":{}}],["platt",{"_index":625,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["playground",{"_index":2721,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["pleas",{"_index":331,"text":{"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"faq/":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{}},"title":{}}],["plt",{"_index":1511,"text":{"examples/example/":{},"examples/example/#define-the-visualization-function":{},"examples/example/#import-the-required-libraries":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_16_bit_tiff/#import-the-required-libraries":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#import-the-required-libraries":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#import-the-required-libraries":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#import-the-required-libraries":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#import-the-required-libraries":{},"examples/example_multi_target/":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_multi_target/#import-the-required-libraries":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/#import-the-required-libraries":{},"examples/replay/":{},"examples/replay/#define-the-visualization-function":{},"examples/replay/#import-the-required-libraries":{},"examples/serialization/":{},"examples/serialization/#define-the-visualization-function":{},"examples/serialization/#import-the-required-libraries":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#import-the-required-libraries":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["podcast",{"_index":116,"text":{"":{},"#external-resources":{},"external_resources/blog_posts_podcasts_talks/":{}},"title":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts-podcasts-and-talks-about-albumentations":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}}}],["point",{"_index":559,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"introduction/why_albumentations/":{}},"title":{"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{}}}],["poisson",{"_index":682,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{}},"title":{}}],["pole",{"_index":2048,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["polici",{"_index":2595,"text":{"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{}},"title":{}}],["pollut",{"_index":2584,"text":{"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{}},"title":{}}],["polygon",{"_index":1186,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{}}],["pool1",{"_index":2479,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["pool2",{"_index":2481,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["popular",{"_index":259,"text":{"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"faq/":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["port",{"_index":2594,"text":{"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{}},"title":{}}],["pose",{"_index":2749,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{}},"title":{}}],["posit",{"_index":1745,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["possibl",{"_index":939,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["post",{"_index":115,"text":{"":{},"#external-resources":{},"external_resources/blog_posts_podcasts_talks/":{}},"title":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"external_resources/blog_posts_podcasts_talks/#blog-posts-podcasts-and-talks-about-albumentations":{}}}],["poster",{"_index":729,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{}}}],["pothol",{"_index":2046,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["pr",{"_index":341,"text":{"release_notes/":{},"release_notes/#bug-fixes":{},"release_notes/#improvements":{}},"title":{}}],["practic",{"_index":627,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["pre",{"_index":152,"text":{"contributing/":{},"contributing/#contributing":{}},"title":{}}],["precis",{"_index":1557,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["prefer",{"_index":2088,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"getting_started/bounding_boxes_augmentation/":{}},"title":{"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{}}}],["prefetch",{"_index":2159,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{}},"title":{}}],["prefetchdataset",{"_index":2118,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["prepar",{"_index":2098,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{}},"title":{}}],["present",{"_index":1634,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{}},"title":{}}],["preserv",{"_index":732,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.preserve_channel_dim":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.preserve_shape":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["preserve_channel_dim",{"_index":784,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.preserve_channel_dim":{}}}],["preserve_shap",{"_index":785,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.preserve_shape":{}}}],["prevent",{"_index":377,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["previou",{"_index":2821,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{}},"title":{}}],["primari",{"_index":2387,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["primit",{"_index":1913,"text":{"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{}},"title":{}}],["print",{"_index":1662,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#original-image":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["probabl",{"_index":87,"text":{"":{},"#getting-started-with-albumentations":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.PerChannel":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#frequently-asked-questions":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p2":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}}}],["problem",{"_index":181,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"faq/":{},"faq/#frequently-asked-questions":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{}}}],["proc",{"_index":631,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["process",{"_index":1632,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/tensorflow-example/":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{}}}],["process_data",{"_index":2189,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{}},"title":{}}],["process_imag",{"_index":2151,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#process-data":{}},"title":{}}],["produc",{"_index":690,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["program",{"_index":2641,"text":{"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{}},"title":{}}],["programmat",{"_index":724,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{}},"title":{}}],["progressstylemodel",{"_index":2548,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["progressview",{"_index":2564,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["project",{"_index":20,"text":{"":{},"#welcome-to-albumentations-documentation":{},"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#battle-tested":{}},"title":{}}],["prone",{"_index":2585,"text":{"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{}},"title":{}}],["provid",{"_index":600,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"experimental/overview/":{},"experimental/overview/#overview":{},"experimental/overview/#why-a-separate-library":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{}},"title":{}}],["public",{"_index":2090,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["publish",{"_index":2880,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["pull",{"_index":147,"text":{"contributing/":{},"contributing/#contributing":{}},"title":{}}],["purpos",{"_index":1523,"text":{"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{}},"title":{}}],["push",{"_index":170,"text":{"contributing/":{},"contributing/#contributing":{}},"title":{}}],["puttext",{"_index":1591,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["py3round",{"_index":786,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.py3round":{}}}],["pyconbi",{"_index":2625,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}},"title":{}}],["pylint",{"_index":2304,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["pylint:disable=broad",{"_index":2443,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["pypi",{"_index":2575,"text":{"experimental/installation/":{},"getting_started/installation/":{}},"title":{"experimental/installation/#install-the-latest-stable-version-from-pypi":{},"getting_started/installation/#install-the-latest-stable-version-from-pypi":{}}}],["pyplot",{"_index":1510,"text":{"examples/example/":{},"examples/example/#import-the-required-libraries":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#import-the-required-libraries":{},"examples/example_bboxes/":{},"examples/example_bboxes/#import-the-required-libraries":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#import-the-required-libraries":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#import-the-required-libraries":{},"examples/example_keypoints/":{},"examples/example_keypoints/#import-the-required-libraries":{},"examples/example_multi_target/":{},"examples/example_multi_target/#import-the-required-libraries":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#import-the-required-libraries":{},"examples/showcase/":{},"examples/showcase/#import-the-required-libraries":{}},"title":{}}],["pytest",{"_index":169,"text":{"contributing/":{},"contributing/#contributing":{}},"title":{}}],["python",{"_index":23,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.py3round":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"experimental/installation/":{},"experimental/installation/#installation":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#pillow":{},"getting_started/installation/":{},"getting_started/installation/#installation":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{}}}],["python3",{"_index":231,"text":{"faq/":{},"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{}},"title":{}}],["python_func",{"_index":2406,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["pytorch",{"_index":135,"text":{"":{},"#api-reference":{},"api_reference/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{},"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{},"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{}}}],["qualiti",{"_index":869,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"introduction/image_augmentation/":{}},"title":{"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}}}],["quality_low",{"_index":1031,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{}},"title":{}}],["quality_upp",{"_index":1033,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{}},"title":{}}],["question",{"_index":123,"text":{"":{},"#other-topics":{},"faq/":{}},"title":{"faq/":{},"faq/#frequently-asked-questions":{}}}],["r",{"_index":1120,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["r1",{"_index":1123,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{}},"title":{}}],["r_shift_limit",{"_index":1214,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["rack",{"_index":2034,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["radian",{"_index":1321,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{}},"title":{}}],["rail",{"_index":2010,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["rain",{"_index":1163,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{}},"title":{}}],["rain_drop",{"_index":543,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{}},"title":{}}],["rain_typ",{"_index":1162,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{}},"title":{}}],["raini",{"_index":544,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{}},"title":{}}],["rais",{"_index":1365,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{}}],["random",{"_index":700,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#import-the-required-libraries":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#import-the-required-libraries":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#import-the-required-libraries":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#import-the-required-libraries":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#import-the-required-libraries":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#import-the-required-libraries":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#import-the-required-libraries":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#import-the-required-libraries":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/replay/#import-the-required-libraries":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#import-the-required-libraries":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#import-the-required-libraries":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p3":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{}}}],["random_flip_left_right",{"_index":2154,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#process-data":{}},"title":{}}],["random_offset",{"_index":996,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["random_st",{"_index":613,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{}},"title":{}}],["randomaffin",{"_index":1833,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["randombright",{"_index":1265,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#run-the-example":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{}}}],["randombrightnesscontrast",{"_index":1266,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_keypoints/":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/showcase/":{},"examples/showcase/#color-augmentations":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{}}}],["randomcontrast",{"_index":1267,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#run-the-example":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{}}}],["randomcrop",{"_index":1268,"text":{"examples/example_bboxes2/":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{}}}],["randomcrop(224,",{"_index":1824,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["randomcrop(256,",{"_index":1837,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["randomcrop(always_apply=false,",{"_index":1891,"text":{"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["randomcropnearbbox",{"_index":1269,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{}}}],["randomfog",{"_index":1270,"text":{"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{}}}],["randomgamma",{"_index":1271,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/showcase/":{},"examples/showcase/#color-augmentations":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{}}}],["randomgrayscal",{"_index":1838,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["randomgridshuffl",{"_index":1272,"text":{"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{}}}],["randomhorizontalflip",{"_index":1809,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{}},"title":{}}],["randomli",{"_index":812,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"examples/example_kaggle_salt/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{}}}],["randomrain",{"_index":1273,"text":{"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"examples/example_weather_transforms/#randomrain":{}}}],["randomresizedcrop",{"_index":1274,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{}}}],["randomrot",{"_index":1841,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["randomrotate90",{"_index":1275,"text":{"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p2":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{}}}],["randomscal",{"_index":1276,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{}}}],["randomshadow",{"_index":1277,"text":{"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{}}}],["randomsizedbboxsafecrop",{"_index":1278,"text":{"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{}}}],["randomsizedcrop",{"_index":1279,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_keypoints/":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"examples/example_kaggle_salt/#lets-add-non-rigid-transformations-and-randomsizedcrop":{},"examples/example_kaggle_salt/#randomsizedcrop":{}}}],["randomsnow",{"_index":1280,"text":{"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomsnow":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"examples/example_weather_transforms/#randomsnow":{}}}],["randomsunflar",{"_index":1281,"text":{"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomsunflare":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"examples/example_weather_transforms/#randomsunflare":{}}}],["randomverticalflip",{"_index":1843,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["rang",{"_index":418,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.check_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["range(0,",{"_index":666,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{}},"title":{}}],["rank",{"_index":2476,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["rapid",{"_index":2586,"text":{"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{}},"title":{}}],["rate",{"_index":1190,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{}},"title":{}}],["ratio",{"_index":989,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"examples/example_bboxes/":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{}},"title":{}}],["read",{"_index":249,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_kaggle_salt/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"faq/":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{},"getting_started/image_augmentation/#pillow":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_kaggle_salt/#read-an-image-and-its-mask-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}}}],["real",{"_index":109,"text":{"":{},"#examples":{},"examples/":{},"examples/#list-of-examples":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/showcase/":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#examples":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#examples":{}},"title":{"examples/showcase/":{},"examples/showcase/#showcase-cool-augmentation-examples-on-diverse-set-of-images-from-various-real-world-tasks":{}}}],["reappli",{"_index":1856,"text":{"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{}},"title":{}}],["rearrang",{"_index":818,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{}},"title":{}}],["reason",{"_index":247,"text":{"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"faq/":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["receiv",{"_index":172,"text":{"examples/example/":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{},"getting_started/simultaneous_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{}}}],["recent",{"_index":2294,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["recognit",{"_index":634,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["recommend",{"_index":804,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{"examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it":{}}}],["recreat",{"_index":1889,"text":{"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{}},"title":{}}],["rectangl",{"_index":1582,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{}},"title":{}}],["rectangular",{"_index":837,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["red",{"_index":257,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"faq/":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{}},"title":{}}],["redistribution_info",{"_index":2149,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["reduc",{"_index":728,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{}},"title":{}}],["redund",{"_index":346,"text":{"release_notes/":{},"release_notes/#improvements":{}},"title":{}}],["ref",{"_index":2439,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["refer",{"_index":69,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.grid_distortion":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/overview/":{},"experimental/overview/#documentation":{},"faq/":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{}},"title":{"#api-reference":{}}}],["reflect",{"_index":324,"text":{"api_reference/imgaug/transforms/":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"faq/":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["region",{"_index":221,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{}},"title":{"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{}}}],["regist",{"_index":1338,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta":{}},"title":{}}],["regrad",{"_index":1307,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{}},"title":{}}],["regress",{"_index":2940,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["regular",{"_index":283,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.grid_distortion":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"faq/":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{}},"title":{}}],["regularli",{"_index":2901,"text":{"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{}},"title":{}}],["releas",{"_index":125,"text":{"":{},"#other-topics":{},"release_notes/":{}},"title":{"release_notes/":{},"release_notes/#release-notes":{}}}],["relu",{"_index":2208,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["remain",{"_index":489,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{}},"title":{}}],["remov",{"_index":276,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["remove_invis",{"_index":1313,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{"getting_started/keypoints_augmentation/#remove_invisible":{}}}],["repeat",{"_index":975,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{}},"title":{}}],["replac",{"_index":280,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"faq/":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{}},"title":{}}],["replai",{"_index":1861,"text":{"examples/replay/":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["replaycompos",{"_index":103,"text":{"":{},"#examples":{},"examples/":{},"examples/#list-of-examples":{},"examples/replay/":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"faq/":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}}}],["replaycompose.replai",{"_index":1880,"text":{"examples/replay/":{},"examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image":{}},"title":{"examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image":{}}}],["repo",{"_index":171,"text":{"contributing/":{},"contributing/#contributing":{}},"title":{}}],["report",{"_index":2941,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["repositori",{"_index":149,"text":{"contributing/":{},"contributing/#contributing":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["repres",{"_index":1563,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["represent",{"_index":649,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{}},"title":{}}],["reproduc",{"_index":1885,"text":{"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{}},"title":{}}],["request",{"_index":142,"text":{"contributing/":{},"contributing/#contributing":{}},"title":{}}],["requir",{"_index":344,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/installation/":{},"experimental/installation/#installation":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/installation/":{},"getting_started/installation/#installation":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{"examples/example/#import-the-required-libraries":{},"examples/example_16_bit_tiff/#import-the-required-libraries":{},"examples/example_bboxes/#import-the-required-libraries":{},"examples/example_bboxes2/#import-the-required-libraries":{},"examples/example_kaggle_salt/#import-the-required-libraries":{},"examples/example_keypoints/#import-the-required-libraries":{},"examples/example_multi_target/#import-the-required-libraries":{},"examples/example_weather_transforms/#import-the-required-libraries":{},"examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries":{},"examples/replay/#import-the-required-libraries":{},"examples/serialization/#import-the-required-libraries":{},"examples/showcase/#import-the-required-libraries":{},"getting_started/bounding_boxes_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/keypoints_augmentation/#step-1-import-the-required-libraries":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{}}}],["rescal",{"_index":1063,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{}},"title":{}}],["rescu",{"_index":2866,"text":{"introduction/image_augmentation/":{}},"title":{"introduction/image_augmentation/#image-augmentation-to-the-rescue":{}}}],["research",{"_index":15,"text":{"":{},"#welcome-to-albumentations-documentation":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#battle-tested":{}},"title":{}}],["resiz",{"_index":305,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"examples/example_bboxes/":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{}}}],["resize(256,",{"_index":1845,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["resnet",{"_index":2878,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["resnet50",{"_index":2247,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["resourc",{"_index":113,"text":{"":{}},"title":{"#external-resources":{}}}],["respect",{"_index":1355,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{}}],["restor",{"_index":1354,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{}},"title":{}}],["restrict",{"_index":2857,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["result",{"_index":936,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{}}],["retun",{"_index":2783,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["return",{"_index":415,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.multiply":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta.__new__":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{}}],["reus",{"_index":2117,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["rgb",{"_index":260,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{},"examples/example/":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"faq/":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{}}}],["rgbshift",{"_index":1282,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_keypoints/":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{}}}],["rgbshift(always_apply=false,",{"_index":1895,"text":{"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["rider",{"_index":2024,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["right",{"_index":455,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["right_elbow",{"_index":2763,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["right_hip",{"_index":2788,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["right_wrist",{"_index":2787,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["rigid",{"_index":1715,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{}},"title":{"examples/example_kaggle_salt/#lets-add-non-rigid-transformations-and-randomsizedcrop":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{}}}],["rigor",{"_index":2590,"text":{"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"introduction/why_albumentations/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{}},"title":{"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}}}],["risk",{"_index":2928,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["road",{"_index":532,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["rotat",{"_index":216,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_transpose":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/imgaug/transforms/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#run-the-example":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{}}}],["rotate(limit=45,",{"_index":1842,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["rotate_limit",{"_index":1222,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["rotate_limit=45,",{"_index":1836,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["rotated_imag",{"_index":2916,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["round",{"_index":738,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.py3round":{}},"title":{}}],["round(sigma",{"_index":949,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{}},"title":{}}],["row",{"_index":402,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{}},"title":{}}],["rule",{"_index":2823,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["run",{"_index":66,"text":{"":{},"#welcome-to-albumentations-documentation":{},"contributing/":{},"contributing/#contributing":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"faq/":{},"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{"examples/tensorflow-example/#run-the-example":{}}}],["run_distribute_coordin",{"_index":2310,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["run_eagerli",{"_index":2219,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["s",{"_index":1319,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{}},"title":{}}],["salt",{"_index":1649,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#using-albumentations-for-a-semantic-segmentation-task":{}},"title":{}}],["same",{"_index":97,"text":{"":{},"#examples":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"examples/":{},"examples/#list-of-examples":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}}}],["sampl",{"_index":914,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["sample_weight",{"_index":2317,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["sand",{"_index":2027,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["sat_shift",{"_index":1876,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["sat_shift_limit",{"_index":1025,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/showcase/":{},"examples/showcase/#color-augmentations":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{}},"title":{}}],["sat_shift_limit=30,",{"_index":1828,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["satellit",{"_index":1532,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["satur",{"_index":1029,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{}},"title":{}}],["save",{"_index":104,"text":{"":{},"#examples":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"examples/":{},"examples/#list-of-examples":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{},"faq/":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{}},"title":{"api_reference/core/serialization/#albumentations.core.serialization.save":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{}}}],["savefig",{"_index":1956,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["scalar",{"_index":1390,"text":{"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{}},"title":{}}],["scale",{"_index":606,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates":{}},"title":{}}],["scale_i",{"_index":707,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{}},"title":{}}],["scale_limit",{"_index":1178,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["scale_limit=0.1,",{"_index":1835,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["scale_max",{"_index":867,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{}},"title":{}}],["scale_min",{"_index":865,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{}},"title":{}}],["scale_x",{"_index":706,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{}},"title":{}}],["scene",{"_index":2864,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["scienc",{"_index":1970,"text":{"examples/showcase/":{},"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{}},"title":{"examples/showcase/#2018-data-science-bowl":{}}}],["scientist",{"_index":1886,"text":{"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{}},"title":{}}],["scikit",{"_index":920,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}},"title":{}}],["scriptel",{"_index":1484,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["scriptelement.src",{"_index":1505,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["second",{"_index":1328,"text":{"api_reference/core/composition/":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{}},"title":{}}],["secondari",{"_index":594,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{}},"title":{}}],["section",{"_index":35,"text":{"":{},"#welcome-to-albumentations-documentation":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{}},"title":{}}],["see",{"_index":294,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta.__new__":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_keypoints/":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"faq/":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["seed",{"_index":1522,"text":{"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"examples/showcase/#mapilary-vistas":{}},"title":{"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{}}}],["seen",{"_index":929,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply":{}},"title":{}}],["segment",{"_index":49,"text":{"":{},"#examples":{},"#getting-started-with-albumentations":{},"#welcome-to-albumentations-documentation":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.DualTransform":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_kaggle_salt/":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#examples":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#using-albumentations-for-a-semantic-segmentation-task":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}}}],["select",{"_index":643,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.OneOrOther":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{}},"title":{}}],["self",{"_index":925,"text":{"api_reference/augmentations/transforms/":{},"api_reference/core/transforms_interface/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["self(x,",{"_index":2466,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["self._call_for_each_replica(fn,",{"_index":2459,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["self._concrete_stateful_fn",{"_index":2360,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["self._extended.call_for_each_replica(fn,",{"_index":2454,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["self._stateful_fn._get_concrete_function_internal_garbage_collected(",{"_index":2362,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["self.conv1(xb)",{"_index":2490,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["self.distribute_strategy.run(",{"_index":2452,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["self.name)",{"_index":2469,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["semant",{"_index":48,"text":{"":{},"#examples":{},"#welcome-to-albumentations-documentation":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_kaggle_salt/":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#examples":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#using-albumentations-for-a-semantic-segmentation-task":{}}}],["send",{"_index":1911,"text":{"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{}},"title":{}}],["sensor",{"_index":686,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{}},"title":{}}],["separ",{"_index":647,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"experimental/overview/":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{"experimental/overview/#why-a-separate-library":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{}}}],["sepia",{"_index":1238,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{}},"title":{}}],["sequenc",{"_index":202,"text":{"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{}}}],["sequenti",{"_index":2203,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["sequential_7",{"_index":2475,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["serial",{"_index":378,"text":{"api_reference/":{},"api_reference/core/":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#serialization-api-coreserialization":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}}}],["serializ",{"_index":350,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{}}],["serializable_registri",{"_index":1339,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta":{}},"title":{}}],["serializablemeta",{"_index":1374,"text":{},"title":{"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta":{}}}],["server",{"_index":1912,"text":{"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{}},"title":{}}],["servic",{"_index":225,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{}},"title":{"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{}}}],["set",{"_index":86,"text":{"":{},"#examples":{},"#getting-started-with-albumentations":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/replay/":{},"examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image":{},"examples/showcase/":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#frequently-asked-questions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#examples":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#p2":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#examples":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{"examples/showcase/":{},"examples/showcase/#showcase-cool-augmentation-examples-on-diverse-set-of-images-from-various-real-world-tasks":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"introduction/why_albumentations/#diverse-set-of-supported-augmentations":{}}}],["set_titl",{"_index":1658,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["setup",{"_index":1006,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["shadi",{"_index":548,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{}},"title":{}}],["shadow",{"_index":551,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{}},"title":{}}],["shadow_dimens",{"_index":1183,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{}},"title":{}}],["shadow_roi",{"_index":1180,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{}},"title":{}}],["shape",{"_index":497,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.preserve_shape":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoint":{},"api_reference/augmentations/keypoints_utils/#albumentations.augmentations.keypoints_utils.check_keypoints":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#original-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["share",{"_index":186,"text":{"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}}}],["sharpen",{"_index":1443,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{}},"title":{}}],["shear",{"_index":1410,"text":{"api_reference/imgaug/transforms/":{}},"title":{}}],["shift",{"_index":1141,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["shift_i",{"_index":995,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["shift_limit",{"_index":1112,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#opticaldistortion":{}},"title":{}}],["shift_x",{"_index":994,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["shiftscalerot",{"_index":1283,"text":{"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/showcase/":{},"examples/showcase/#inria-aerial-image-labeling-dataset":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}}}],["shiftscalerotate(shift_limit=0.0625,",{"_index":1834,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["shorter",{"_index":1004,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["shoulder",{"_index":2754,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{}}],["shouldn't",{"_index":1524,"text":{"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["show",{"_index":42,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"examples/example/":{},"examples/example/#defining-a-simple-augmentation-pipeline-for-image-augmentation":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_keypoints/":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/example_multi_target/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#migrating-from-torchvision-to-albumentations":{},"faq/":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{"examples/example_multi_target/#show-original-images":{}}}],["show_titl",{"_index":1946,"text":{"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["showcas",{"_index":106,"text":{"":{},"#examples":{},"examples/":{},"examples/#list-of-examples":{},"examples/showcase/":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#examples":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#examples":{}},"title":{"examples/showcase/":{},"examples/showcase/#showcase-cool-augmentation-examples-on-diverse-set-of-images-from-various-real-world-tasks":{}}}],["shrink",{"_index":507,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{}},"title":{}}],["shuffl",{"_index":1156,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["side",{"_index":985,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["sidewalk",{"_index":2018,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["sift",{"_index":2767,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{}}],["sigma",{"_index":609,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{}},"title":{}}],["sigma=alpha)",{"_index":917,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}},"title":{}}],["sigma_limit",{"_index":947,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{}},"title":{}}],["sigmoid",{"_index":1471,"text":{"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{}},"title":{}}],["sign",{"_index":2050,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["signatur",{"_index":910,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta.__new__":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["signific",{"_index":327,"text":{"faq/":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{}},"title":{}}],["silent",{"_index":2905,"text":{"introduction/why_albumentations/":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["simard",{"_index":623,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["simard2003",{"_index":622,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["similar",{"_index":2665,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{}},"title":{}}],["simpl",{"_index":90,"text":{"":{},"#examples":{},"examples/":{},"examples/#list-of-examples":{},"examples/example/":{},"examples/example/#defining-a-simple-augmentation-pipeline-for-image-augmentation":{},"examples/example_keypoints/":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#process-data":{},"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{"examples/example/":{},"examples/example/#defining-a-simple-augmentation-pipeline-for-image-augmentation":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{}}}],["simplifi",{"_index":2803,"text":{"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{}}],["simul",{"_index":684,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{}},"title":{}}],["simultan",{"_index":80,"text":{"":{},"#getting-started-with-albumentations":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{}},"title":{"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{}}}],["singl",{"_index":827,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_albumentations/#extensibility":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{}}}],["situat",{"_index":2927,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["size",{"_index":484,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"examples/example_bboxes/":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["skimage'",{"_index":1452,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{}},"title":{}}],["skimage.color",{"_index":1934,"text":{"examples/showcase/":{},"examples/showcase/#import-the-required-libraries":{}},"title":{}}],["skip",{"_index":2822,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{}},"title":{}}],["sky",{"_index":2028,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["slant",{"_index":537,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{}},"title":{}}],["slant_low",{"_index":1160,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{}},"title":{}}],["slant_upp",{"_index":1161,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{}},"title":{}}],["slic",{"_index":1453,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{}},"title":{}}],["slightli",{"_index":2867,"text":{"introduction/image_augmentation/":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{}},"title":{}}],["slow",{"_index":1454,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["small",{"_index":2932,"text":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["smaller",{"_index":1011,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"examples/example_bboxes/":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{}},"title":{}}],["smallest",{"_index":1231,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{}},"title":{}}],["smallestmaxs",{"_index":1284,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{}}}],["smooth",{"_index":898,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["snow",{"_index":558,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["snow_point",{"_index":553,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{}},"title":{}}],["snow_point_low",{"_index":1196,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomsnow":{}},"title":{}}],["snow_point_upp",{"_index":1197,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomsnow":{}},"title":{}}],["softmax",{"_index":2213,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["softwar",{"_index":226,"text":{"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{}}}],["solar",{"_index":742,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{}}}],["solv",{"_index":2173,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{}},"title":{}}],["sometim",{"_index":1770,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["sort",{"_index":1961,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["sourc",{"_index":19,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/transforms/":{},"api_reference/core/composition/":{},"api_reference/core/serialization/":{},"api_reference/core/transforms_interface/":{},"api_reference/imgaug/transforms/":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/overview/":{},"experimental/overview/#overview":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#battle-tested":{},"introduction/why_albumentations/#it-is-open-source-and-mit-licensed":{}},"title":{"introduction/why_albumentations/#it-is-open-source-and-mit-licensed":{}}}],["source_format",{"_index":450,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations":{}},"title":{}}],["source_format='coco')",{"_index":2003,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["space",{"_index":505,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"examples/example/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{}},"title":{"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{}}}],["sparse_categorical_crossentropi",{"_index":2216,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["spatial",{"_index":1629,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_keypoints/":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}}}],["special",{"_index":926,"text":{"api_reference/augmentations/transforms/":{},"api_reference/core/serialization/":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{}}],["specif",{"_index":2647,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{}}],["specifi",{"_index":427,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/simultaneous_augmentation/":{}},"title":{"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{}}}],["speed",{"_index":637,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{}},"title":{}}],["speedup",{"_index":904,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["split",{"_index":1158,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{}},"title":{}}],["sport",{"_index":2687,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{}},"title":{}}],["squar",{"_index":863,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{}},"title":{}}],["src_color",{"_index":565,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{}},"title":{}}],["src_radiu",{"_index":564,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{}},"title":{}}],["stabl",{"_index":2574,"text":{"experimental/installation/":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"getting_started/installation/":{}},"title":{"experimental/installation/#install-the-latest-stable-version-from-pypi":{},"getting_started/installation/#install-the-latest-stable-version-from-conda-forge":{},"getting_started/installation/#install-the-latest-stable-version-from-pypi":{}}}],["stage",{"_index":1569,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["standard",{"_index":954,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{}},"title":{}}],["start",{"_index":32,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{"#getting-started-with-albumentations":{}}}],["state",{"_index":1703,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["staticmethod",{"_index":1347,"text":{"api_reference/core/serialization/":{}},"title":{}}],["std",{"_index":1104,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{}},"title":{}}],["std=0.1",{"_index":665,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{}},"title":{}}],["std=[0.229,",{"_index":1849,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["steel",{"_index":1073,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{}},"title":{}}],["steinkrau",{"_index":624,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{}},"title":{}}],["step",{"_index":374,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#image-augmentation-for-classification":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{},"getting_started/simultaneous_augmentation/":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"getting_started/bounding_boxes_augmentation/#step-1-import-the-required-libraries":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/#step-1-import-the-required-libraries":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"getting_started/simultaneous_augmentation/#step-2-load-all-required-data-from-the-disk":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{}}}],["steps_per_epoch",{"_index":2319,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["still",{"_index":2782,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["store",{"_index":2704,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{}}],["str",{"_index":428,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{}},"title":{}}],["stransform",{"_index":1735,"text":{"examples/example_kaggle_salt/":{}},"title":{"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{}}}],["street",{"_index":2047,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["strength",{"_index":1053,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{}},"title":{}}],["string",{"_index":940,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{}},"title":{}}],["strive",{"_index":2587,"text":{"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{}},"title":{}}],["strong",{"_index":1964,"text":{"examples/showcase/":{},"examples/showcase/#color-augmentations":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["style",{"_index":2557,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["styleview",{"_index":2534,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["subclass",{"_index":2275,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["subimage'",{"_index":1430,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{}},"title":{}}],["subplot",{"_index":1657,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["subsequ",{"_index":2116,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["subtract",{"_index":1045,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{}},"title":{}}],["success",{"_index":2566,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["successfulli",{"_index":182,"text":{"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}}}],["such",{"_index":187,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{}}}],["sudo",{"_index":239,"text":{"faq/":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}},"title":{}}],["suit",{"_index":2910,"text":{"introduction/why_albumentations/":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["sum",{"_index":1685,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{}},"title":{}}],["sun",{"_index":567,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{}},"title":{}}],["super",{"_index":2277,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["superpixel",{"_index":1451,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{}},"title":{}}],["supervised_keys=('image',",{"_index":2138,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["support",{"_index":85,"text":{"":{},"#getting-started-with-albumentations":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_keypoints/":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#weather-augmentations-in-albumentations":{},"faq/":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#diverse-set-of-supported-augmentations":{}},"title":{"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"introduction/why_albumentations/#diverse-set-of-supported-augmentations":{}}}],["swap",{"_index":746,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["swap_tiles_on_imag",{"_index":787,"text":{},"title":{"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{}}}],["switch",{"_index":1712,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{}},"title":{}}],["symmetr",{"_index":2603,"text":{"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["symmetric_keypoint",{"_index":2608,"text":{"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["symmetric_keypoints_both",{"_index":2601,"text":{"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{}},"title":{}}],["symmetric_keypoints_horizont",{"_index":2599,"text":{"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{}},"title":{}}],["symmetric_keypoints_vert",{"_index":2600,"text":{"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{}},"title":{}}],["system",{"_index":234,"text":{"faq/":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}},"title":{}}],["tabl",{"_index":2837,"text":{"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["take",{"_index":285,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"faq/":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{}},"title":{}}],["taken",{"_index":1541,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{}},"title":{}}],["talk",{"_index":117,"text":{"":{},"#external-resources":{},"external_resources/blog_posts_podcasts_talks/":{}},"title":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts-podcasts-and-talks-about-albumentations":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}}}],["target",{"_index":82,"text":{"":{},"#getting-started-with-albumentations":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/example_keypoints/":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/replay/":{},"examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"faq/":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{}}}],["target_format",{"_index":425,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{}},"title":{}}],["target_imag",{"_index":1380,"text":{"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{}},"title":{}}],["task",{"_index":46,"text":{"":{},"#examples":{},"#welcome-to-albumentations-documentation":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.DualTransform":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/showcase/":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#examples":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#examples":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/example_bboxes/":{},"examples/example_bboxes/#using-albumentations-to-augment-bounding-boxes-for-object-detection-tasks":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#using-albumentations-for-a-semantic-segmentation-task":{},"examples/showcase/":{},"examples/showcase/#showcase-cool-augmentation-examples-on-diverse-set-of-images-from-various-real-world-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}}}],["team",{"_index":2141,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["team/albument",{"_index":30,"text":{"":{},"#welcome-to-albumentations-documentation":{},"contributing/":{},"contributing/#contributing":{},"getting_started/installation/":{},"getting_started/installation/#install-the-latest-version-from-the-master-branch-on-github":{}},"title":{}}],["team/albumentations/issu",{"_index":145,"text":{"contributing/":{},"contributing/#contributing":{}},"title":{}}],["team/albumentations_experiment",{"_index":2581,"text":{"experimental/installation/":{},"experimental/installation/#install-the-latest-version-from-the-master-branch-on-github":{},"experimental/overview/":{},"experimental/overview/#overview":{}},"title":{}}],["techniqu",{"_index":1534,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"experimental/overview/":{},"experimental/overview/#overview":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["tell",{"_index":2399,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{}},"title":{}}],["tensor",{"_index":196,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{}}}],["tensorflow",{"_index":111,"text":{"":{},"#examples":{},"examples/":{},"examples/#list-of-examples":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#what-works":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}},"title":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#using-albumentations-with-tensorflow":{}}}],["tensorflow.kera",{"_index":2200,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["tensorflow.keras.model",{"_index":2197,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#note":{}},"title":{}}],["tensorflow_dataset",{"_index":2071,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it":{},"examples/tensorflow-example/#run-the-example":{}},"title":{"examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it":{}}}],["terrain",{"_index":2029,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["test",{"_index":165,"text":{"contributing/":{},"contributing/#contributing":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{"introduction/why_albumentations/#battle-tested":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}}}],["text",{"_index":1592,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{}},"title":{}}],["text_color",{"_index":1577,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["text_height",{"_index":1585,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["text_width",{"_index":1584,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["tf",{"_index":2074,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["tf.imag",{"_index":2150,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{"examples/tensorflow-example/#an-example-pipeline-using-tfimage":{}}}],["tf.int64)>",{"_index":2121,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["tf.kera",{"_index":2174,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["tf.numpy_funct",{"_index":2180,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{}},"title":{}}],["tf_decor",{"_index":2416,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["tf_flower",{"_index":2079,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["tf_flowers/3.0.1",{"_index":2099,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["tfd",{"_index":2075,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["tfds.core.datasetinfo(",{"_index":2122,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["tfflower",{"_index":2140,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["tg",{"_index":1648,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#using-albumentations-for-a-semantic-segmentation-task":{}},"title":{}}],["thick",{"_index":1581,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["third",{"_index":2771,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{}},"title":{}}],["those",{"_index":227,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{}}}],["three",{"_index":1796,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{}},"title":{}}],["threshold",{"_index":481,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{}},"title":{}}],["through",{"_index":289,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"faq/":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#extensibility":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{}}],["thu",{"_index":2826,"text":{"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#example-calculations":{}},"title":{}}],["tiff",{"_index":205,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{}}}],["tifffil",{"_index":1551,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{}},"title":{}}],["tight_layout",{"_index":1955,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["tile",{"_index":745,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{}},"title":{}}],["tile_grid_s",{"_index":822,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{}},"title":{}}],["time",{"_index":1175,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90.apply":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{}},"title":{}}],["titl",{"_index":1937,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/showcase/#mapilary-vistas":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["tmp_log",{"_index":2331,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["to_dict",{"_index":1368,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{}}}],["to_except",{"_index":2448,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["to_tupl",{"_index":1399,"text":{},"title":{"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{}}}],["tofloat",{"_index":1285,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{}}}],["tograi",{"_index":1286,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{}}}],["togray(p=0.5)",{"_index":1839,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["tool",{"_index":2620,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{}},"title":{}}],["top",{"_index":301,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"experimental/overview/":{},"experimental/overview/#overview":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["topic",{"_index":120,"text":{"":{}},"title":{"#other-topics":{}}}],["torch.tensor",{"_index":1472,"text":{"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensorV2":{}},"title":{}}],["torch.utils.data",{"_index":1799,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries":{}},"title":{}}],["torchvis",{"_index":101,"text":{"":{},"#examples":{},"examples/":{},"examples/#list-of-examples":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries":{},"examples/migrating_from_torchvision_to_albumentations/#migrating-from-torchvision-to-albumentations":{}},"title":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#migrating-from-torchvision-to-albumentations":{}}}],["torchvision'",{"_index":1172,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{}},"title":{}}],["torchvision.norm",{"_index":1475,"text":{"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{}},"title":{}}],["torchvision_dataset",{"_index":1810,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{}},"title":{}}],["torchvision_transform",{"_index":1807,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{}},"title":{}}],["torchvisiondataset",{"_index":1801,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{}},"title":{}}],["torresti",{"_index":1168,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{}},"title":{}}],["tosepia",{"_index":1287,"text":{"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{}}}],["total",{"_index":2103,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["total_num_examples=3670,",{"_index":2135,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["totensor",{"_index":197,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{}},"title":{"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{}}}],["totensorv2",{"_index":198,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{}},"title":{"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensorV2":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{}}}],["tout",{"_index":2192,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{}},"title":{}}],["tpu",{"_index":2617,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{}},"title":{}}],["traceback",{"_index":2293,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["tracing_count",{"_index":2350,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["track",{"_index":1855,"text":{"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["traffic",{"_index":2049,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["trailer",{"_index":2061,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["train",{"_index":329,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#what-works":{},"faq/":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["train_funct",{"_index":2332,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["train_step",{"_index":2464,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["trainabl",{"_index":2249,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["training=true)",{"_index":2467,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["tranform",{"_index":1019,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["transfer",{"_index":2243,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["transform",{"_index":84,"text":{"":{},"#getting-started-with-albumentations":{},"api_reference/":{},"api_reference/augmentations/":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.OneOrOther":{},"api_reference/core/composition/#albumentations.core.composition.PerChannel":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.DualTransform":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.ImageOnlyTransform":{},"api_reference/imgaug/":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"api_reference/pytorch/":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#import-the-required-libraries":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"experimental/overview/":{},"experimental/overview/#documentation":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#frequently-asked-questions":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/image_augmentation/#image-augmentation-to-the-rescue":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#extensibility":{},"introduction/why_albumentations/#high-performance":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#functional-transforms-augmentationsfunctional":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#transforms-augmentationstransforms":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#transforms-interface-coretransforms_interface":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#transforms-imgaugtransforms":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#transforms-pytorchtransforms":{},"examples/example_kaggle_salt/#lets-add-non-rigid-transformations-and-randomsizedcrop":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations-experimental-transforms-augmentationstransforms":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}}}],["transform_dict",{"_index":1351,"text":{"api_reference/core/serialization/":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["transformed_bbox",{"_index":493,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{}},"title":{}}],["transformed_bbox_class",{"_index":2834,"text":{"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{}},"title":{}}],["transformed_class_categori",{"_index":2715,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{}},"title":{}}],["transformed_class_label",{"_index":2712,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["transformed_class_sid",{"_index":2790,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["transformed_from_loaded_transform",{"_index":1903,"text":{"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["transformed_imag",{"_index":2710,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{}},"title":{}}],["transformed_image_1",{"_index":2740,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{}},"title":{}}],["transformed_image_2",{"_index":2741,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{}},"title":{}}],["transformed_image_3",{"_index":2742,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{}},"title":{}}],["transformed_keypoint",{"_index":2781,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{}},"title":{}}],["transformed_keypoints_class",{"_index":2835,"text":{"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{}},"title":{}}],["transformed_mask",{"_index":2804,"text":{"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{}},"title":{}}],["transformed_shap",{"_index":492,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{}},"title":{}}],["translat",{"_index":1225,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["translate_perc",{"_index":1408,"text":{"api_reference/imgaug/transforms/":{}},"title":{}}],["translate_px",{"_index":1409,"text":{"api_reference/imgaug/transforms/":{}},"title":{}}],["transpar",{"_index":1149,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{}},"title":{}}],["transpos",{"_index":590,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"examples/example/":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{}}}],["transposesymmetrickeypoint",{"_index":2614,"text":{},"title":{"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{}}}],["trash",{"_index":2053,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["treat",{"_index":1070,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{}},"title":{}}],["tri",{"_index":2199,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#note":{}},"title":{}}],["truck",{"_index":2062,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["true",{"_index":209,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"api_reference/imgaug/transforms/":{},"api_reference/pytorch/transforms/":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{},"examples/tensorflow-example/#what-works":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"faq/#frequently-asked-questions":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{}}}],["try",{"_index":179,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}}}],["tunnel",{"_index":2020,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["tupl",{"_index":409,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["two",{"_index":1554,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#get-an-image-and-annotations-for-it":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-keypoints":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{}}}],["type",{"_index":408,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_fog":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_snow":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_sun_flare":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.multiply":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.posterize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"api_reference/core/composition/#albumentations.core.composition.PerChannel":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.from_dict":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#process-data":{},"examples/tensorflow-example/#run-the-example":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["typic",{"_index":1696,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{}},"title":{}}],["u",{"_index":2576,"text":{"experimental/installation/":{},"experimental/installation/#install-the-latest-stable-version-from-pypi":{},"experimental/installation/#install-the-latest-version-from-the-master-branch-on-github":{},"getting_started/installation/":{},"getting_started/installation/#install-the-latest-stable-version-from-pypi":{},"getting_started/installation/#install-the-latest-version-from-the-master-branch-on-github":{}},"title":{}}],["u200b",{"_index":2556,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["ubuntu",{"_index":237,"text":{"faq/":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{}},"title":{}}],["uint16",{"_index":815,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["uint8",{"_index":688,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.LongestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightness":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomBrightnessContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomContrast":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGridShuffle":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.SmallestMaxSize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToSepia":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Transpose":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/showcase/#mapilary-vistas":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["unchang",{"_index":2729,"text":{"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{}},"title":{}}],["unclear",{"_index":1717,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{}},"title":{}}],["unconvent",{"_index":718,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{}},"title":{}}],["undefin",{"_index":2477,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["under",{"_index":25,"text":{"":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#pixel-level-transforms":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{}},"title":{}}],["unet",{"_index":1667,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{}},"title":{}}],["unfortun",{"_index":321,"text":{"faq/":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{}},"title":{}}],["unfreez",{"_index":2259,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["unifi",{"_index":737,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.py3round":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}}}],["uniform",{"_index":1218,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{}},"title":{}}],["union",{"_index":504,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{}},"title":{}}],["union_of_bbox",{"_index":522,"text":{},"title":{"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{}}}],["uniqu",{"_index":1997,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["unit",{"_index":1003,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["unit32",{"_index":816,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{}},"title":{}}],["unit_s",{"_index":1001,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["unit_size_max",{"_index":991,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["unit_size_min",{"_index":990,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["unit_width",{"_index":1015,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["unknown",{"_index":2194,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["unlabel",{"_index":2065,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["unlik",{"_index":2666,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{}},"title":{}}],["unnecessari",{"_index":265,"text":{"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{}},"title":{}}],["unnot",{"_index":2908,"text":{"introduction/why_albumentations/":{},"introduction/why_albumentations/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["unsign",{"_index":1555,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{}},"title":{}}],["unsupport",{"_index":2838,"text":{"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{}}],["until",{"_index":2337,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["unused_arg",{"_index":2367,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["unused_kwd",{"_index":2368,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["unwrap",{"_index":2417,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["up",{"_index":1644,"text":{"examples/example_bboxes2/":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{}},"title":{}}],["updat",{"_index":228,"text":{"examples/tensorflow-example/":{},"faq/":{},"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{},"faq/#i-successfully-installed-the-library-but-when-i-am-trying-to-import-it-i-receive-an-error-importerror-libxrenderso1-cannot-open-shared-object-file-no-such-file-or-directory":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#high-performance":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{"examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it":{}}}],["upgrad",{"_index":233,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it":{},"faq/":{},"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{}},"title":{}}],["upper",{"_index":826,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.JpegCompression":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomFog":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{}},"title":{}}],["upper_bond",{"_index":1201,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{}},"title":{}}],["upscal",{"_index":871,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Downscale":{}},"title":{}}],["url",{"_index":2146,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["us",{"_index":10,"text":{"":{},"#examples":{},"#welcome-to-albumentations-documentation":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Blur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MedianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MotionBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.SerializableMeta":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"examples/":{},"examples/#list-of-examples":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#defining-a-simple-augmentation-pipeline-for-image-augmentation":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#get-an-image-and-annotations-for-it":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#using-albumentations-for-a-semantic-segmentation-task":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#define-keypoints":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#migrating-from-torchvision-to-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#the-same-pipeline-with-albumentations":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"faq/#why-do-you-call-cv2cvtcolorimage-cv2color_bgr2rgb-in-your-examples":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-pass-class-labels-along-with-coordinates":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{},"getting_started/installation/":{},"getting_started/installation/#install-the-latest-stable-version-from-conda-forge":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/keypoints_augmentation/#examples":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#examples":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#battle-tested":{},"introduction/why_albumentations/#extensibility":{},"introduction/why_albumentations/#high-performance":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_bboxes/":{},"examples/example_bboxes/#using-albumentations-to-augment-bounding-boxes-for-object-detection-tasks":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#using-albumentations-for-a-semantic-segmentation-task":{},"examples/example_keypoints/":{},"examples/example_keypoints/#using-albumentations-to-augment-keypoints":{},"examples/migrating_from_torchvision_to_albumentations/#an-example-pipeline-that-uses-torchvision":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/replay/#using-replaycomposereplay-to-apply-the-same-augmentations-to-another-image":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{},"examples/tensorflow-example/#an-example-pipeline-using-tfimage":{},"examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it":{},"examples/tensorflow-example/#using-albumentations-with-tensorflow":{},"faq/#how-can-i-find-which-augmentations-were-applied-to-the-input-data-and-which-parameters-they-used":{},"faq/#i-created-annotations-for-bounding-boxes-using-labeling-service-or-labeling-software-how-can-i-use-those-annotations-in-albumentations":{},"faq/#when-i-use-augmentations-with-the-border_mode-parameter-such-as-rotate-and-set-border_mode-to-cv2border_reflect-or-cv2border_reflect_101-albumentations-mirrors-regions-of-images-and-masks-but-doesnt-mirror-bounding-boxes-and-keypoints-is-it-a-bug":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{}}}],["usag",{"_index":192,"text":{"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{}},"title":{"faq/#usage":{}}}],["use_multiprocess",{"_index":2325,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["user",{"_index":1057,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{}}],["usual",{"_index":547,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{}}],["util",{"_index":2051,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-3-read-images-from-the-disk":{}},"title":{}}],["val",{"_index":663,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}},"title":{}}],["val_shift",{"_index":1878,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["val_shift_limit",{"_index":1027,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#using-yaml-insted-of-json":{},"examples/showcase/":{},"examples/showcase/#color-augmentations":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{}},"title":{}}],["val_shift_limit=20,",{"_index":1829,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["valid",{"_index":434,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{}},"title":{}}],["validation_batch_s",{"_index":2321,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["validation_data",{"_index":2315,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["validation_freq",{"_index":2322,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["validation_split",{"_index":2314,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["validation_step",{"_index":2320,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["valu",{"_index":297,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.solarize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CLAHE":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ChannelDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HueSaturationValue":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.InvertImg":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MultiplicativeNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Normalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.OpticalDistortion":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Posterize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RGBShift":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomGamma":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomScale":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSnow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Rotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Solarize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToGray":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.Compose":{},"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.to_tuple":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#what-wont-work":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p1":{},"getting_started/setting_probabilities/#setting-probabilities-for-transforms-in-an-augmentation-pipeline":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"getting_started/bounding_boxes_augmentation/#1-you-can-pass-labels-along-with-bounding-boxes-coordinates-by-adding-them-as-additional-values-to-the-list-of-coordinates":{}}}],["valueerror",{"_index":448,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["vanilla",{"_index":1674,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{}},"title":{}}],["var",{"_index":1480,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["var_limit",{"_index":961,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["varianc",{"_index":965,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussNoise":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ISONoise":{}},"title":{}}],["variant",{"_index":1173,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{}},"title":{}}],["variou",{"_index":59,"text":{"":{},"#examples":{},"#welcome-to-albumentations-documentation":{},"examples/":{},"examples/#list-of-examples":{},"examples/showcase/":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#examples":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#examples":{}},"title":{"examples/showcase/":{},"examples/showcase/#showcase-cool-augmentation-examples-on-diverse-set-of-images-from-various-real-world-tasks":{}}}],["vec",{"_index":662,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FancyPCA":{}},"title":{}}],["veget",{"_index":2030,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["vehicl",{"_index":2060,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["verbos",{"_index":2312,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["veri",{"_index":1854,"text":{"examples/replay/":{},"examples/replay/#debugging-an-augmentation-pipeline-with-replaycompose":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#mask-augmentation-for-segmentation":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["verifi",{"_index":1927,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["version",{"_index":278,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.py3round":{},"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/showcase/":{},"examples/tensorflow-example/":{},"experimental/installation/":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"faq/":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/installation/":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{},"release_notes/":{},"release_notes/#improvements":{}},"title":{"examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it":{},"experimental/installation/#install-the-latest-stable-version-from-pypi":{},"experimental/installation/#install-the-latest-version-from-the-master-branch-on-github":{},"getting_started/installation/#install-the-latest-stable-version-from-conda-forge":{},"getting_started/installation/#install-the-latest-stable-version-from-pypi":{},"getting_started/installation/#install-the-latest-version-from-the-master-branch-on-github":{},"getting_started/simultaneous_augmentation/#step-3-pass-all-targets-to-transform-and-receive-their-augmented-versions":{}}}],["version=3.0.1,",{"_index":2124,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["version_major",{"_index":2113,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["version_minor",{"_index":2114,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["vertic",{"_index":573,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Flip.apply":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}},"title":{}}],["verticalflip",{"_index":1288,"text":{"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#verticalflip":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_multi_target/":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"examples/example_kaggle_salt/#verticalflip":{}}}],["verticalflip(p=0.5)",{"_index":1844,"text":{"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#albumentations-equivalents-for-torchvision-transforms":{}},"title":{}}],["verticalflipsymmetrickeypoint",{"_index":2615,"text":{},"title":{"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{}}}],["vertices_list",{"_index":550,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_shadow":{}},"title":{}}],["via",{"_index":1415,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{}},"title":{}}],["video",{"_index":1772,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{}},"title":{}}],["view",{"_index":404,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.add_rain":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRain":{},"api_reference/core/composition/":{},"api_reference/core/serialization/":{},"api_reference/core/transforms_interface/":{},"api_reference/imgaug/transforms/":{},"api_reference/pytorch/transforms/":{},"examples/tensorflow-example/":{},"experimental/api_reference/augmentations/transforms/":{}},"title":{"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#view-images-from-the-dataset_1":{}}}],["view+json\"]');",{"_index":1483,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["view_imag",{"_index":2161,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"examples/tensorflow-example/#view-images-from-the-dataset_1":{}},"title":{}}],["vis_keypoint",{"_index":1741,"text":{"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_keypoints/#visualize-the-original-image-with-keypoints":{}},"title":{}}],["visibl",{"_index":355,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASharpen":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{}}],["visible,at",{"_index":1422,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAEmboss":{}},"title":{}}],["vision",{"_index":45,"text":{"":{},"#welcome-to-albumentations-documentation":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#randomrain":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"external_resources/books/":{},"external_resources/books/#books-that-mention-albumentations":{},"faq/":{},"faq/#frequently-asked-questions":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-1-import-the-required-libraries":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_albumentations/#extensibility":{}},"title":{"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{}}}],["vista",{"_index":1985,"text":{"examples/showcase/":{}},"title":{"examples/showcase/#mapilary-vistas":{}}}],["visuaiz",{"_index":1624,"text":{"examples/example_bboxes/":{},"examples/example_bboxes2/":{}},"title":{"examples/example_bboxes/#visuaize-the-original-image-with-bounding-boxes":{},"examples/example_bboxes2/#visuaize-the-image-with-bounding-boxes":{}}}],["visual",{"_index":629,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.elastic_transform_approx":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"examples/example/":{},"examples/example/#define-a-single-augmentation-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-an-augmentation-pipeline-using-compose-pass-the-image-to-it-and-receive-the-augmented-image":{},"examples/example/#define-the-visualization-function":{},"examples/example/#read-the-image-from-the-disk-and-convert-it-from-the-bgr-color-space-to-the-rgb-color-space":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{},"examples/example_bboxes/":{},"examples/example_bboxes/#another-example":{},"examples/example_bboxes/#define-a-complex-augmentation-piepline":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes/#visuaize-the-original-image-with-bounding-boxes":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#a-few-more-examples-with-different-random-seeds":{},"examples/example_bboxes2/#augment-the-input-image-with-bounding-boxes":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#visuaize-the-image-with-bounding-boxes":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_kaggle_salt/#elastictransform":{},"examples/example_kaggle_salt/#griddistortion":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#lets-try-to-combine-different-transformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_kaggle_salt/#non-rigid-transformations-elastictransform-griddistortion-opticaldistortion":{},"examples/example_kaggle_salt/#opticaldistortion":{},"examples/example_kaggle_salt/#original-image":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_kaggle_salt/#verticalflip":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_multi_target/#show-original-images":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/#randomfog":{},"examples/example_weather_transforms/#randomfog_1":{},"examples/example_weather_transforms/#randomrain":{},"examples/example_weather_transforms/#randomshadow":{},"examples/example_weather_transforms/#randomshadow_1":{},"examples/example_weather_transforms/#randomsnow":{},"examples/example_weather_transforms/#randomsunflare":{},"examples/example_weather_transforms/#visualize-the-original-image":{},"examples/replay/":{},"examples/replay/#apply-augmentations-from-datareplay-to-those-images":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/replay/#define-the-visualization-function":{},"examples/replay/#load-an-image-from-the-disk":{},"examples/replay/#load-new-images":{},"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#define-the-visualization-function":{},"examples/serialization/#load-an-image-from-the-disk":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{}},"title":{"examples/example/#define-the-visualization-function":{},"examples/example_16_bit_tiff/#define-the-visualization-function":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/#define-a-function-to-visualize-images-and-masks":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#visualize-the-original-image-with-keypoints":{},"examples/example_multi_target/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/#define-a-function-to-visualize-an-image":{},"examples/example_weather_transforms/#visualize-the-original-image":{},"examples/replay/#define-the-visualization-function":{},"examples/serialization/#define-the-visualization-function":{},"examples/showcase/#define-visualization-functions":{}}}],["visualize_bbox",{"_index":1579,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["visualize_titl",{"_index":1936,"text":{"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["vladimir",{"_index":2632,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}},"title":{}}],["voc",{"_index":2659,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{}},"title":{}}],["volum",{"_index":510,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{}},"title":{}}],["w",{"_index":658,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.fancy_pca":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["w2h_ratio",{"_index":1194,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{}},"title":{}}],["w_start",{"_index":695,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["wai",{"_index":293,"text":{"api_reference/core/transforms_interface/":{},"api_reference/core/transforms_interface/#albumentations.core.transforms_interface.BasicTransform.add_targets":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#non-destructive-transformations-dehidral-group-d4":{},"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/serialization/":{},"examples/serialization/#how-to-save-and-load-parameters-of-an-augmentation-pipeline":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{},"faq/":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#class-labels-for-bounding-boxes":{},"getting_started/bounding_boxes_augmentation/#step-4-pass-an-image-and-bounding-boxes-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{}},"title":{"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{}}}],["wall",{"_index":2012,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["want",{"_index":203,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/serialization/":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#which-transformation-should-i-use-to-convert-a-numpy-array-with-an-image-or-a-mask-to-a-pytorch-tensor-totensor-or-totensorv2":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/#step-4-pass-images-to-the-augmentation-pipeline-and-receive-augmented-images":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}},"title":{"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{}}}],["warn",{"_index":1370,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"api_reference/core/serialization/#albumentations.core.serialization.to_dict":{},"api_reference/pytorch/transforms/":{},"api_reference/pytorch/transforms/#albumentations.pytorch.transforms.ToTensor":{}},"title":{}}],["warning:absl:dataset",{"_index":2082,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["water",{"_index":2031,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["we'll",{"_index":2072,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#recommended-update-the-version-of-tensorflow_datasets-if-you-want-to-use-it":{}},"title":{}}],["weak",{"_index":2431,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["weak_wrapped_fn",{"_index":2436,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["weakref",{"_index":2438,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["weather",{"_index":99,"text":{"":{},"#examples":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#weather-augmentations-in-albumentations":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{}},"title":{"examples/example_weather_transforms/":{},"examples/example_weather_transforms/#weather-augmentations-in-albumentations":{}}}],["webp",{"_index":1038,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ImageCompression":{}},"title":{}}],["weight",{"_index":1326,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["welcom",{"_index":0,"text":{"":{}},"title":{"":{},"#welcome-to-albumentations-documentation":{}}}],["well",{"_index":2583,"text":{"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2you-can-pass-labels-for-bounding-boxes-as-a-separate-list-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-4-pass-image-and-masks-to-the-augmentation-pipeline-and-receive-augmented-images-and-masks":{},"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#a-list-of-transforms-and-their-supported-targets":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#how-much-does-image-augmentation-improves-the-quality-and-performance-of-deep-neural-networks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#why-you-need-a-dedicated-library-for-image-augmentation":{}},"title":{}}],["whatev",{"_index":1010,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["wheel",{"_index":177,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{},"faq/":{},"faq/#frequently-asked-questions":{}},"title":{"faq/#i-am-receiving-an-error-message-failed-building-wheel-for-imagecodecs-when-i-am-trying-to-install-albumentations-how-can-i-fix-the-problem":{}}}],["whether",{"_index":897,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ElasticTransform":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Lambda":{},"experimental/overview/":{},"experimental/overview/#why-a-separate-library":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#bounding-boxes-augmentation":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#augmenting-keypoints":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#simultaneous-augmentation-of-multiple-targets-masks-bounding-boxes-keypoints":{}},"title":{}}],["white",{"_index":1578,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["whose",{"_index":480,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{}},"title":{}}],["wide",{"_index":9,"text":{"":{},"#welcome-to-albumentations-documentation":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#battle-tested":{}},"title":{}}],["widgetrenderersrc",{"_index":1486,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["widgets/base\",",{"_index":2494,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["widgets/controls\",",{"_index":2531,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["widgets/html",{"_index":1488,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["widgets@*/dist/embed.js';",{"_index":1501,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["widgetst",{"_index":1491,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["width",{"_index":311,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CropNonEmptyMaskIfExists":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.PadIfNeeded":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomResizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedCrop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Resize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ShiftScaleRotate":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_area":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-the-default-values-for-min_area-and-min_visibilty":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-an-augmentation-pipeline":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/#using-randomsizedbboxsafecrop-to-keep-all-bounding-boxes-from-the-original-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/example_kaggle_salt/#lets-add-non-spatial-stransformations":{},"examples/example_kaggle_salt/#medium-augmentations":{},"examples/example_kaggle_salt/#randomsizedcrop":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"faq/":{},"faq/#augmentations-have-a-parameter-named-p-that-sets-the-probability-of-applying-that-augmentation-but-they-also-have-the-always_apply-parameter-that-can-either-be-true-or-false-what-is-the-difference-between-p-and-always_apply-is-always_applytrue-equals-to-p10":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#2-pass-class-labels-in-a-separate-argument-to-transform-the-preferred-way":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#step-3-read-images-and-masks-from-the-disk":{},"getting_started/mask_augmentation/#steps-1-and-2-import-the-required-libraries-and-define-an-augmentation-pipeline":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{},"release_notes/":{},"release_notes/#bug-fixes":{},"release_notes/#improvements":{}},"title":{}}],["width//2.",{"_index":1007,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{}},"title":{}}],["width=768),",{"_index":1894,"text":{"examples/serialization/":{},"examples/serialization/#define-an-augmentation-pipeline-that-we-want-to-serialize":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#serializing-an-augmentation-pipeline-to-a-python-dictionary":{},"examples/serialization/#using-yaml-insted-of-json":{}},"title":{}}],["width_til",{"_index":753,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.swap_tiles_on_image":{}},"title":{}}],["with_info",{"_index":2081,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["within",{"_index":1458,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAASuperpixels":{},"getting_started/setting_probabilities/":{},"getting_started/setting_probabilities/#p3":{}},"title":{}}],["without",{"_index":1188,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSizedBBoxSafeCrop":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["won't",{"_index":1631,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline-with-min_visibility":{},"examples/example_bboxes/#min_area-and-min_visibility-parameters":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#how-to-use-albumentations-for-detection-tasks-if-you-need-to-keep-all-bounding-boxes":{},"examples/tensorflow-example/":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#remove_invisible":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#rigorous-testing":{}},"title":{"examples/tensorflow-example/#what-wont-work":{}}}],["won\u2019t",{"_index":338,"text":{"release_notes/":{},"release_notes/#improvements":{}},"title":{}}],["word",{"_index":1292,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{}},"title":{}}],["work",{"_index":91,"text":{"":{},"#examples":{},"api_reference/":{},"api_reference/augmentations/":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.OneOf":{},"examples/":{},"examples/#list-of-examples":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-an-augmentation-pipeline":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/migrating_from_torchvision_to_albumentations/#using-albumentations-with-pil":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#note":{},"faq/":{},"faq/#frequently-asked-questions":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"introduction/image_augmentation/":{},"introduction/image_augmentation/#what-is-image-augmentation-and-how-it-can-improve-the-performance-of-deep-neural-networks":{},"introduction/why_albumentations/":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"release_notes/":{},"release_notes/#bug-fixes":{}},"title":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#helper-functions-for-working-with-bounding-boxes-augmentationsbbox_utils":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/keypoints_utils/#helper-functions-for-working-with-keypoints-augmentationskeypoints_utils":{},"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#define-an-augmentation-pipeline-that-works-with-16-bit-tiff-images":{},"examples/example_16_bit_tiff/#working-with-non-8-bit-images":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{},"introduction/why_albumentations/#a-single-interface-to-work-with-images-masks-bounding-boxes-and-key-points":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#working-with-probabilities":{}}}],["worker",{"_index":2324,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["workflow",{"_index":2622,"text":{"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#blog-posts":{}},"title":{}}],["world",{"_index":110,"text":{"":{},"#examples":{},"examples/":{},"examples/#list-of-examples":{},"examples/showcase/":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#examples":{},"getting_started/image_augmentation/":{},"getting_started/image_augmentation/#examples":{},"getting_started/mask_augmentation/":{},"getting_started/mask_augmentation/#examples":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#examples":{}},"title":{"examples/showcase/":{},"examples/showcase/#showcase-cool-augmentation-examples-on-diverse-set-of-images-from-various-real-world-tasks":{}}}],["wors",{"_index":808,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CenterCrop":{}},"title":{}}],["wrap",{"_index":2178,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#an-example-pipeline-using-albumentations":{}},"title":{}}],["wrapped_fn",{"_index":2427,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["wrapper",{"_index":2441,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["wrist",{"_index":2756,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#label_fields":{}},"title":{}}],["write",{"_index":1366,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{}},"title":{}}],["written",{"_index":22,"text":{"":{},"#welcome-to-albumentations-documentation":{}},"title":{}}],["wrong",{"_index":2793,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#the-need-to-apply-the-same-transform-to-an-image-and-for-labels-for-segmentation-object-detection-and-keypoint-detection-tasks":{}},"title":{}}],["x",{"_index":442,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.VerticalFlip":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#define-keypoints":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.VerticalFlipSymmetricKeypoints":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{}}],["x,y",{"_index":1142,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomCropNearBBox":{}},"title":{}}],["x1",{"_index":601,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{}},"title":{}}],["x2",{"_index":603,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{}},"title":{}}],["x_center",{"_index":2671,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#yolo":{}},"title":{}}],["x_max",{"_index":412,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{}},"title":{}}],["x_min",{"_index":410,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{}},"title":{}}],["xb",{"_index":2281,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"examples/tensorflow-example/#what-works":{}},"title":{}}],["xla_context",{"_index":2343,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["xml",{"_index":2705,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{}},"title":{}}],["xstep",{"_index":669,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["xtick",{"_index":2167,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["xy",{"_index":1315,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"examples/example_keypoints/":{},"examples/example_keypoints/#a-few-more-examples-of-augmentation-pipelines":{},"examples/example_keypoints/#an-example-of-complex-augmentation-pipeline":{},"examples/example_keypoints/#define-a-simple-augmentation-pipeline":{},"examples/example_keypoints/#define-keypoints":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{},"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates":{},"getting_started/simultaneous_augmentation/":{},"getting_started/simultaneous_augmentation/#step-1-define-compose-with-parameters-that-specify-formats-for-bounding-boxes-and-keypoints":{}},"title":{}}],["xya",{"_index":1317,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates":{}},"title":{}}],["xysa",{"_index":1318,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates":{}},"title":{}}],["y",{"_index":443,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_center_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_random_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_scale":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.keypoint_vflip":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GridDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.HorizontalFlip":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#randomrotate90-randomly-rotates-by-0-90-180-270-degrees":{},"examples/example_keypoints/":{},"examples/example_keypoints/#define-a-function-to-visualize-keypoints-on-an-image":{},"examples/example_keypoints/#define-keypoints":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.FlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.HorizontalFlipSymmetricKeypoints":{},"experimental/api_reference/augmentations/transforms/#albumentations_experimental.augmentations.transforms.TransposeSymmetricKeypoints":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#yolo":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#keypoints-augmentation":{},"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates":{}},"title":{}}],["y1",{"_index":602,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{}},"title":{}}],["y2",{"_index":604,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_keypoint_by_coords":{}},"title":{}}],["y_center",{"_index":2672,"text":{"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#yolo":{}},"title":{}}],["y_max",{"_index":413,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{}},"title":{}}],["y_min",{"_index":411,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.calculate_bbox_area":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.filter_bboxes_by_visibility":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bboxes":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.union_of_bboxes":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_crop":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_flip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_hflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rot90":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_rotate":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_transpose":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.bbox_vflip":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.crop_bbox_by_coords":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Crop":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomShadow":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomSunFlare":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#centercrop-and-crop":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#albumentations":{},"getting_started/bounding_boxes_augmentation/#coco":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#pascal_voc":{}},"title":{}}],["y_pred",{"_index":2465,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#what-wont-work":{}},"title":{}}],["yaml",{"_index":1360,"text":{"api_reference/core/serialization/":{},"api_reference/core/serialization/#albumentations.core.serialization.load":{},"api_reference/core/serialization/#albumentations.core.serialization.save":{},"examples/serialization/":{},"examples/serialization/#using-yaml-insted-of-json":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/#declarative-definition-of-the-augmentation-pipeline-and-unified-interface":{}},"title":{"examples/serialization/#serializing-an-augmentation-pipeline-to-a-json-or-yaml-file":{},"examples/serialization/#using-yaml-insted-of-json":{}}}],["ycbcr",{"_index":648,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.equalize":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Equalize":{}},"title":{}}],["ye",{"_index":287,"text":{"faq/":{},"faq/#i-want-to-augment-16-bit-tiff-images-can-albumentations-work-with-them":{},"faq/#my-computer-vision-pipeline-works-with-a-sequence-of-images-i-want-to-apply-the-same-augmentations-with-the-same-parameters-to-each-image-in-the-sequence-can-albumentations-do-it":{}},"title":{}}],["year",{"_index":2144,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["yellow",{"_index":2785,"text":{"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#step-4-pass-an-image-and-keypoints-to-the-augmentation-pipeline-and-receive-augmented-images-and-boxes":{}},"title":{}}],["yolo",{"_index":432,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_from_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bbox_to_albumentations":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.convert_bboxes_from_albumentations":{},"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.BboxParams":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#different-annotations-formats":{},"getting_started/bounding_boxes_augmentation/#step-2-define-an-augmentation-pipeline":{},"getting_started/bounding_boxes_augmentation/#step-3-read-images-and-bounding-boxes-from-the-disk":{},"getting_started/bounding_boxes_augmentation/#yolo":{}},"title":{"getting_started/bounding_boxes_augmentation/#yolo":{}}}],["you'd",{"_index":2087,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["you'r",{"_index":2092,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["yourself",{"_index":67,"text":{"":{},"#welcome-to-albumentations-documentation":{}},"title":{}}],["ystep",{"_index":671,"text":{"api_reference/augmentations/functional/":{}},"title":{}}],["ytick",{"_index":2168,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["yx",{"_index":1316,"text":{"api_reference/core/composition/":{},"api_reference/core/composition/#albumentations.core.composition.KeypointParams":{},"getting_started/keypoints_augmentation/":{},"getting_started/keypoints_augmentation/#3-read-images-and-keypoints-from-the-disk":{},"getting_started/keypoints_augmentation/#angle_in_degrees":{},"getting_started/keypoints_augmentation/#supported-formats-for-keypoints-coordinates":{}},"title":{}}],["zero",{"_index":475,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.normalize_bbox":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GaussianBlur":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.MaskDropout.__init__":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.RandomRotate90":{},"examples/example_kaggle_salt/":{},"examples/example_kaggle_salt/#original-image":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/bounding_boxes_augmentation/#min_area-and-min_visibility":{}},"title":{}}],["zeros_lik",{"_index":1977,"text":{"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{}},"title":{}}],["zip",{"_index":1601,"text":{"examples/example_bboxes/":{},"examples/example_bboxes/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-functions-to-visualize-bounding-boxes-and-class-labels-on-an-image":{},"examples/showcase/":{},"examples/showcase/#define-visualization-functions":{}},"title":{}}],["zip(bboxes,",{"_index":2001,"text":{"examples/showcase/":{},"examples/showcase/#mapilary-vistas":{}},"title":{}}],["{",{"_index":1478,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{},"examples/showcase/":{},"examples/showcase/#2018-data-science-bowl":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["{0;1}",{"_index":1418,"text":{"api_reference/imgaug/transforms/":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAAffine":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPerspective":{},"api_reference/imgaug/transforms/#albumentations.imgaug.transforms.IAAPiecewiseAffine":{}},"title":{}}],["{}",{"_index":1504,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["{},",{"_index":1865,"text":{"examples/replay/":{},"examples/replay/#declare-an-augmentation-pipeline-using-replaycompose":{}},"title":{}}],["{}}}",{"_index":1933,"text":{"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["|",{"_index":719,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.optical_distortion":{},"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.CoarseDropout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.Cutout":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.GlassBlur":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/blog_posts_podcasts_talks/#podcasts-and-talks":{}},"title":{}}],["||",{"_index":1498,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["}",{"_index":1502,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_bboxes2/":{},"examples/example_bboxes2/#define-two-bounding-boxes-with-coordinates-and-class-labels":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_multi_target/#an-example-of-more-complex-pipeline":{},"examples/example_multi_target/#define-an-augmentation-pipeline":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{},"examples/tensorflow-example/#create-pipeline-to-process-data":{},"examples/tensorflow-example/#view-images-from-the-dataset":{}},"title":{}}],["}\"\"\",",{"_index":2148,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["}());",{"_index":1508,"text":{"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{}},"title":{}}],["})",{"_index":1791,"text":{"examples/example_multi_target/":{},"examples/example_multi_target/#applying-the-same-augmentation-with-the-same-parameters-to-multiple-images-masks-bounding-boxes-or-keypoints":{},"examples/serialization/":{},"examples/serialization/#serializing-and-deserializing-lambda-transforms":{}},"title":{}}],["}),",{"_index":2134,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["},",{"_index":2137,"text":{"examples/tensorflow-example/":{},"examples/tensorflow-example/#run-the-example":{}},"title":{}}],["~0.5",{"_index":689,"text":{"api_reference/augmentations/functional/":{},"api_reference/augmentations/functional/#albumentations.augmentations.functional.iso_noise":{}},"title":{}}],["~albumentations.augmentations.bbox.normalize_bbox",{"_index":474,"text":{"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/bbox_utils/#albumentations.augmentations.bbox_utils.denormalize_bbox":{}},"title":{}}],["~albumentations.augmentations.transforms.fromfloat",{"_index":1234,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ToFloat":{}},"title":{}}],["~albumentations.augmentations.transforms.tofloat",{"_index":938,"text":{"api_reference/augmentations/transforms/":{},"api_reference/augmentations/transforms/#albumentations.augmentations.transforms.FromFloat":{}},"title":{}}],["\u00a9",{"_index":1543,"text":{"examples/example_16_bit_tiff/":{},"examples/example_16_bit_tiff/#read-the-16-bit-tiff-image-from-the-disk":{}},"title":{}}],["\u00b6",{"_index":3,"text":{"":{},"api_reference/augmentations/bbox_utils/":{},"api_reference/augmentations/functional/":{},"api_reference/augmentations/keypoints_utils/":{},"api_reference/augmentations/transforms/":{},"api_reference/core/composition/":{},"api_reference/core/serialization/":{},"api_reference/core/transforms_interface/":{},"api_reference/imgaug/transforms/":{},"api_reference/pytorch/transforms/":{},"contributing/":{},"examples/":{},"examples/example/":{},"examples/example_16_bit_tiff/":{},"examples/example_bboxes/":{},"examples/example_bboxes2/":{},"examples/example_kaggle_salt/":{},"examples/example_keypoints/":{},"examples/example_multi_target/":{},"examples/example_weather_transforms/":{},"examples/migrating_from_torchvision_to_albumentations/":{},"examples/replay/":{},"examples/serialization/":{},"examples/showcase/":{},"examples/tensorflow-example/":{},"experimental/api_reference/augmentations/transforms/":{},"experimental/installation/":{},"experimental/overview/":{},"external_resources/blog_posts_podcasts_talks/":{},"external_resources/books/":{},"faq/":{},"getting_started/bounding_boxes_augmentation/":{},"getting_started/image_augmentation/":{},"getting_started/installation/":{},"getting_started/keypoints_augmentation/":{},"getting_started/mask_augmentation/":{},"getting_started/setting_probabilities/":{},"getting_started/simultaneous_augmentation/":{},"getting_started/transforms_and_targets/":{},"introduction/image_augmentation/":{},"introduction/why_albumentations/":{},"introduction/why_you_need_a_dedicated_library_for_image_augmentation/":{},"release_notes/":{}},"title":{}}],["\u201cimgaug>=0.2.5,<0.2.7\u201d",{"_index":336,"text":{"release_notes/":{},"release_notes/#improvements":{}},"title":{}}],["\u201cimgaug>=0.4.0\".",{"_index":337,"text":{"release_notes/":{},"release_notes/#improvements":{}},"title":{}}],["\u2713",{"_index":2839,"text":{"getting_started/transforms_and_targets/":{},"getting_started/transforms_and_targets/#spatial-level-transforms":{}},"title":{}}]],"pipeline":["stemmer"],"version":"2.3.8"}}